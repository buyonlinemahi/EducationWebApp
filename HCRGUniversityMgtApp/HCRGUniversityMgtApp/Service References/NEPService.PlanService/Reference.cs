//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityMgtApp.NEPService.PlanService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColumn", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Base")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.PlanService.Plan))]
    public partial class BaseColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plan", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Plan : HCRGUniversityMgtApp.NEPService.PlanService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedPlanGrid", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedPlanGrid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.PlanService.PlanGrid[] PlanRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanGrid[] PlanRecords {
            get {
                return this.PlanRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanRecordsField, value) != true)) {
                    this.PlanRecordsField = value;
                    this.RaisePropertyChanged("PlanRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlanGrid", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class PlanGrid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlanPackages", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class PlanPackages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoursePlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlanAppliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserPlanIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoursePlanID {
            get {
                return this.CoursePlanIDField;
            }
            set {
                if ((this.CoursePlanIDField.Equals(value) != true)) {
                    this.CoursePlanIDField = value;
                    this.RaisePropertyChanged("CoursePlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlanApplied {
            get {
                return this.IsPlanAppliedField;
            }
            set {
                if ((this.IsPlanAppliedField.Equals(value) != true)) {
                    this.IsPlanAppliedField = value;
                    this.RaisePropertyChanged("IsPlanApplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanName {
            get {
                return this.PlanNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanNameField, value) != true)) {
                    this.PlanNameField = value;
                    this.RaisePropertyChanged("PlanName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserPlanID {
            get {
                return this.UserPlanIDField;
            }
            set {
                if ((this.UserPlanIDField.Equals(value) != true)) {
                    this.UserPlanIDField = value;
                    this.RaisePropertyChanged("UserPlanID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPlan", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserPlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPlanAppliedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PlanAppliedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserPlanIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPlanApplied {
            get {
                return this.IsPlanAppliedField;
            }
            set {
                if ((this.IsPlanAppliedField.Equals(value) != true)) {
                    this.IsPlanAppliedField = value;
                    this.RaisePropertyChanged("IsPlanApplied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PlanAppliedOn {
            get {
                return this.PlanAppliedOnField;
            }
            set {
                if ((this.PlanAppliedOnField.Equals(value) != true)) {
                    this.PlanAppliedOnField = value;
                    this.RaisePropertyChanged("PlanAppliedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserPlanID {
            get {
                return this.UserPlanIDField;
            }
            set {
                if ((this.UserPlanIDField.Equals(value) != true)) {
                    this.UserPlanIDField = value;
                    this.RaisePropertyChanged("UserPlanID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoursePlan", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class CoursePlan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoursePlanIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlanIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((this.CourseIDField.Equals(value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoursePlanID {
            get {
                return this.CoursePlanIDField;
            }
            set {
                if ((this.CoursePlanIDField.Equals(value) != true)) {
                    this.CoursePlanIDField = value;
                    this.RaisePropertyChanged("CoursePlanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlanID {
            get {
                return this.PlanIDField;
            }
            set {
                if ((this.PlanIDField.Equals(value) != true)) {
                    this.PlanIDField = value;
                    this.RaisePropertyChanged("PlanID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.PlanService.IPlanService")]
    public interface IPlanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddPlan", ReplyAction="http://tempuri.org/IPlanService/AddPlanResponse")]
        int AddPlan(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddPlan", ReplyAction="http://tempuri.org/IPlanService/AddPlanResponse")]
        System.Threading.Tasks.Task<int> AddPlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/UpdatePlan", ReplyAction="http://tempuri.org/IPlanService/UpdatePlanResponse")]
        int UpdatePlan(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/UpdatePlan", ReplyAction="http://tempuri.org/IPlanService/UpdatePlanResponse")]
        System.Threading.Tasks.Task<int> UpdatePlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeletePlan", ReplyAction="http://tempuri.org/IPlanService/DeletePlanResponse")]
        void DeletePlan(int planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeletePlan", ReplyAction="http://tempuri.org/IPlanService/DeletePlanResponse")]
        System.Threading.Tasks.Task DeletePlanAsync(int planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetPlanById", ReplyAction="http://tempuri.org/IPlanService/GetPlanByIdResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.Plan GetPlanById(int _planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetPlanById", ReplyAction="http://tempuri.org/IPlanService/GetPlanByIdResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan> GetPlanByIdAsync(int _planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/getAllRecords", ReplyAction="http://tempuri.org/IPlanService/getAllRecordsResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.Plan[] getAllRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/getAllRecords", ReplyAction="http://tempuri.org/IPlanService/getAllRecordsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan[]> getAllRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPagedPlanByClientID", ReplyAction="http://tempuri.org/IPlanService/GetAllPagedPlanByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PagedPlanGrid GetAllPagedPlanByClientID(int clientID, int orgID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPagedPlanByClientID", ReplyAction="http://tempuri.org/IPlanService/GetAllPagedPlanByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PagedPlanGrid> GetAllPagedPlanByClientIDAsync(int clientID, int orgID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPlanAccToPackages", ReplyAction="http://tempuri.org/IPlanService/GetAllPlanAccToPackagesResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllPlanAccToPackages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPlanAccToPackages", ReplyAction="http://tempuri.org/IPlanService/GetAllPlanAccToPackagesResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllPlanAccToPackagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPlansByClientID", ReplyAction="http://tempuri.org/IPlanService/GetAllPlansByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.Plan[] GetAllPlansByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllPlansByClientID", ReplyAction="http://tempuri.org/IPlanService/GetAllPlansByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan[]> GetAllPlansByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddUserPlan", ReplyAction="http://tempuri.org/IPlanService/AddUserPlanResponse")]
        int AddUserPlan(HCRGUniversityMgtApp.NEPService.PlanService.UserPlan userPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddUserPlan", ReplyAction="http://tempuri.org/IPlanService/AddUserPlanResponse")]
        System.Threading.Tasks.Task<int> AddUserPlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.UserPlan userPlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeleteUserPlan", ReplyAction="http://tempuri.org/IPlanService/DeleteUserPlanResponse")]
        void DeleteUserPlan(int userPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeleteUserPlan", ReplyAction="http://tempuri.org/IPlanService/DeleteUserPlanResponse")]
        System.Threading.Tasks.Task DeleteUserPlanAsync(int userPlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetUsersPlanAccToPlanID", ReplyAction="http://tempuri.org/IPlanService/GetUsersPlanAccToPlanIDResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetUsersPlanAccToPlanID(int PlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetUsersPlanAccToPlanID", ReplyAction="http://tempuri.org/IPlanService/GetUsersPlanAccToPlanIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetUsersPlanAccToPlanIDAsync(int PlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllUsersPlan", ReplyAction="http://tempuri.org/IPlanService/GetAllUsersPlanResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllUsersPlan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllUsersPlan", ReplyAction="http://tempuri.org/IPlanService/GetAllUsersPlanResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllUsersPlanAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddMyEducationRecordByPlanID", ReplyAction="http://tempuri.org/IPlanService/AddMyEducationRecordByPlanIDResponse")]
        int AddMyEducationRecordByPlanID(int _planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddMyEducationRecordByPlanID", ReplyAction="http://tempuri.org/IPlanService/AddMyEducationRecordByPlanIDResponse")]
        System.Threading.Tasks.Task<int> AddMyEducationRecordByPlanIDAsync(int _planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddCoursePlan", ReplyAction="http://tempuri.org/IPlanService/AddCoursePlanResponse")]
        int AddCoursePlan(HCRGUniversityMgtApp.NEPService.PlanService.CoursePlan coursePlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/AddCoursePlan", ReplyAction="http://tempuri.org/IPlanService/AddCoursePlanResponse")]
        System.Threading.Tasks.Task<int> AddCoursePlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.CoursePlan coursePlan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeleteCoursePlan", ReplyAction="http://tempuri.org/IPlanService/DeleteCoursePlanResponse")]
        void DeleteCoursePlan(int coursePlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/DeleteCoursePlan", ReplyAction="http://tempuri.org/IPlanService/DeleteCoursePlanResponse")]
        System.Threading.Tasks.Task DeleteCoursePlanAsync(int coursePlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetCoursesPlanAccToPlanID", ReplyAction="http://tempuri.org/IPlanService/GetCoursesPlanAccToPlanIDResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetCoursesPlanAccToPlanID(int PlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetCoursesPlanAccToPlanID", ReplyAction="http://tempuri.org/IPlanService/GetCoursesPlanAccToPlanIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetCoursesPlanAccToPlanIDAsync(int PlanID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllCoursesPlan", ReplyAction="http://tempuri.org/IPlanService/GetAllCoursesPlanResponse")]
        HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllCoursesPlan();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlanService/GetAllCoursesPlan", ReplyAction="http://tempuri.org/IPlanService/GetAllCoursesPlanResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllCoursesPlanAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlanServiceChannel : HCRGUniversityMgtApp.NEPService.PlanService.IPlanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlanServiceClient : System.ServiceModel.ClientBase<HCRGUniversityMgtApp.NEPService.PlanService.IPlanService>, HCRGUniversityMgtApp.NEPService.PlanService.IPlanService {
        
        public PlanServiceClient() {
        }
        
        public PlanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPlan(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan) {
            return base.Channel.AddPlan(plan);
        }
        
        public System.Threading.Tasks.Task<int> AddPlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan) {
            return base.Channel.AddPlanAsync(plan);
        }
        
        public int UpdatePlan(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan) {
            return base.Channel.UpdatePlan(plan);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.Plan plan) {
            return base.Channel.UpdatePlanAsync(plan);
        }
        
        public void DeletePlan(int planID) {
            base.Channel.DeletePlan(planID);
        }
        
        public System.Threading.Tasks.Task DeletePlanAsync(int planID) {
            return base.Channel.DeletePlanAsync(planID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.Plan GetPlanById(int _planID) {
            return base.Channel.GetPlanById(_planID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan> GetPlanByIdAsync(int _planID) {
            return base.Channel.GetPlanByIdAsync(_planID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.Plan[] getAllRecords() {
            return base.Channel.getAllRecords();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan[]> getAllRecordsAsync() {
            return base.Channel.getAllRecordsAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PagedPlanGrid GetAllPagedPlanByClientID(int clientID, int orgID, int skip, int take) {
            return base.Channel.GetAllPagedPlanByClientID(clientID, orgID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PagedPlanGrid> GetAllPagedPlanByClientIDAsync(int clientID, int orgID, int skip, int take) {
            return base.Channel.GetAllPagedPlanByClientIDAsync(clientID, orgID, skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllPlanAccToPackages() {
            return base.Channel.GetAllPlanAccToPackages();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllPlanAccToPackagesAsync() {
            return base.Channel.GetAllPlanAccToPackagesAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.Plan[] GetAllPlansByClientID(int ClientID) {
            return base.Channel.GetAllPlansByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.Plan[]> GetAllPlansByClientIDAsync(int ClientID) {
            return base.Channel.GetAllPlansByClientIDAsync(ClientID);
        }
        
        public int AddUserPlan(HCRGUniversityMgtApp.NEPService.PlanService.UserPlan userPlan) {
            return base.Channel.AddUserPlan(userPlan);
        }
        
        public System.Threading.Tasks.Task<int> AddUserPlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.UserPlan userPlan) {
            return base.Channel.AddUserPlanAsync(userPlan);
        }
        
        public void DeleteUserPlan(int userPlanID) {
            base.Channel.DeleteUserPlan(userPlanID);
        }
        
        public System.Threading.Tasks.Task DeleteUserPlanAsync(int userPlanID) {
            return base.Channel.DeleteUserPlanAsync(userPlanID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetUsersPlanAccToPlanID(int PlanID) {
            return base.Channel.GetUsersPlanAccToPlanID(PlanID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetUsersPlanAccToPlanIDAsync(int PlanID) {
            return base.Channel.GetUsersPlanAccToPlanIDAsync(PlanID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllUsersPlan() {
            return base.Channel.GetAllUsersPlan();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllUsersPlanAsync() {
            return base.Channel.GetAllUsersPlanAsync();
        }
        
        public int AddMyEducationRecordByPlanID(int _planID) {
            return base.Channel.AddMyEducationRecordByPlanID(_planID);
        }
        
        public System.Threading.Tasks.Task<int> AddMyEducationRecordByPlanIDAsync(int _planID) {
            return base.Channel.AddMyEducationRecordByPlanIDAsync(_planID);
        }
        
        public int AddCoursePlan(HCRGUniversityMgtApp.NEPService.PlanService.CoursePlan coursePlan) {
            return base.Channel.AddCoursePlan(coursePlan);
        }
        
        public System.Threading.Tasks.Task<int> AddCoursePlanAsync(HCRGUniversityMgtApp.NEPService.PlanService.CoursePlan coursePlan) {
            return base.Channel.AddCoursePlanAsync(coursePlan);
        }
        
        public void DeleteCoursePlan(int coursePlanID) {
            base.Channel.DeleteCoursePlan(coursePlanID);
        }
        
        public System.Threading.Tasks.Task DeleteCoursePlanAsync(int coursePlanID) {
            return base.Channel.DeleteCoursePlanAsync(coursePlanID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetCoursesPlanAccToPlanID(int PlanID) {
            return base.Channel.GetCoursesPlanAccToPlanID(PlanID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetCoursesPlanAccToPlanIDAsync(int PlanID) {
            return base.Channel.GetCoursesPlanAccToPlanIDAsync(PlanID);
        }
        
        public HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[] GetAllCoursesPlan() {
            return base.Channel.GetAllCoursesPlan();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.PlanService.PlanPackages[]> GetAllCoursesPlanAsync() {
            return base.Channel.GetAllCoursesPlanAsync();
        }
    }
}
