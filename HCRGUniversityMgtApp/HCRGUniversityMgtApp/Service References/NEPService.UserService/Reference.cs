//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityMgtApp.NEPService.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColumn", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Base")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.UserService.User))]
    public partial class BaseColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class User : HCRGUniversityMgtApp.NEPService.UserService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AAPCouponIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClearedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClearedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FailedAttemptCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAllAccessPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsClearedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCoursePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsManagementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionalTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialMenuIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserAllAccessPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserSessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> VerifiedOnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AAPCouponID {
            get {
                return this.AAPCouponIDField;
            }
            set {
                if ((this.AAPCouponIDField.Equals(value) != true)) {
                    this.AAPCouponIDField = value;
                    this.RaisePropertyChanged("AAPCouponID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClearedBy {
            get {
                return this.ClearedByField;
            }
            set {
                if ((this.ClearedByField.Equals(value) != true)) {
                    this.ClearedByField = value;
                    this.RaisePropertyChanged("ClearedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClearedOn {
            get {
                return this.ClearedOnField;
            }
            set {
                if ((this.ClearedOnField.Equals(value) != true)) {
                    this.ClearedOnField = value;
                    this.RaisePropertyChanged("ClearedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FailedAttemptCount {
            get {
                return this.FailedAttemptCountField;
            }
            set {
                if ((this.FailedAttemptCountField.Equals(value) != true)) {
                    this.FailedAttemptCountField = value;
                    this.RaisePropertyChanged("FailedAttemptCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAllAccessPricing {
            get {
                return this.IsAllAccessPricingField;
            }
            set {
                if ((this.IsAllAccessPricingField.Equals(value) != true)) {
                    this.IsAllAccessPricingField = value;
                    this.RaisePropertyChanged("IsAllAccessPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCleared {
            get {
                return this.IsClearedField;
            }
            set {
                if ((this.IsClearedField.Equals(value) != true)) {
                    this.IsClearedField = value;
                    this.RaisePropertyChanged("IsCleared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCoursePreview {
            get {
                return this.IsCoursePreviewField;
            }
            set {
                if ((this.IsCoursePreviewField.Equals(value) != true)) {
                    this.IsCoursePreviewField = value;
                    this.RaisePropertyChanged("IsCoursePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsManagement {
            get {
                return this.IsManagementField;
            }
            set {
                if ((this.IsManagementField.Equals(value) != true)) {
                    this.IsManagementField = value;
                    this.RaisePropertyChanged("IsManagement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsVerified {
            get {
                return this.IsVerifiedField;
            }
            set {
                if ((this.IsVerifiedField.Equals(value) != true)) {
                    this.IsVerifiedField = value;
                    this.RaisePropertyChanged("IsVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfessionalTitle {
            get {
                return this.ProfessionalTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionalTitleField, value) != true)) {
                    this.ProfessionalTitleField = value;
                    this.RaisePropertyChanged("ProfessionalTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecialMenuIDs {
            get {
                return this.SpecialMenuIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialMenuIDsField, value) != true)) {
                    this.SpecialMenuIDsField = value;
                    this.RaisePropertyChanged("SpecialMenuIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserAllAccessPassID {
            get {
                return this.UserAllAccessPassIDField;
            }
            set {
                if ((this.UserAllAccessPassIDField.Equals(value) != true)) {
                    this.UserAllAccessPassIDField = value;
                    this.RaisePropertyChanged("UserAllAccessPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuGroupID {
            get {
                return this.UserMenuGroupIDField;
            }
            set {
                if ((this.UserMenuGroupIDField.Equals(value) != true)) {
                    this.UserMenuGroupIDField = value;
                    this.RaisePropertyChanged("UserMenuGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSessionID {
            get {
                return this.UserSessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserSessionIDField, value) != true)) {
                    this.UserSessionIDField = value;
                    this.RaisePropertyChanged("UserSessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VerifiedOn {
            get {
                return this.VerifiedOnField;
            }
            set {
                if ((this.VerifiedOnField.Equals(value) != true)) {
                    this.VerifiedOnField = value;
                    this.RaisePropertyChanged("VerifiedOn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedUser", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.UserService.User[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.UserService.User[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMenuGroupAndPermission", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserMenuGroupAndPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMenuGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuPermissionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuIDs {
            get {
                return this.MenuIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuIDsField, value) != true)) {
                    this.MenuIDsField = value;
                    this.RaisePropertyChanged("MenuIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuGroupID {
            get {
                return this.UserMenuGroupIDField;
            }
            set {
                if ((this.UserMenuGroupIDField.Equals(value) != true)) {
                    this.UserMenuGroupIDField = value;
                    this.RaisePropertyChanged("UserMenuGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMenuGroupName {
            get {
                return this.UserMenuGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMenuGroupNameField, value) != true)) {
                    this.UserMenuGroupNameField = value;
                    this.RaisePropertyChanged("UserMenuGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuPermissionID {
            get {
                return this.UserMenuPermissionIDField;
            }
            set {
                if ((this.UserMenuPermissionIDField.Equals(value) != true)) {
                    this.UserMenuPermissionIDField = value;
                    this.RaisePropertyChanged("UserMenuPermissionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientAndUserbySearchCriterias", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientAndUserbySearchCriterias : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientTypeName {
            get {
                return this.ClientTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypeNameField, value) != true)) {
                    this.ClientTypeNameField = value;
                    this.RaisePropertyChanged("ClientTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailID {
            get {
                return this.EmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIDField, value) != true)) {
                    this.EmailIDField = value;
                    this.RaisePropertyChanged("EmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCardDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserCardDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DeletedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeletedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserCardDetailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCardExpiryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCardNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((this.DeletedByField.Equals(value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeletedOn {
            get {
                return this.DeletedOnField;
            }
            set {
                if ((this.DeletedOnField.Equals(value) != true)) {
                    this.DeletedOnField = value;
                    this.RaisePropertyChanged("DeletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((this.UpdatedByField.Equals(value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserCardDetailID {
            get {
                return this.UserCardDetailIDField;
            }
            set {
                if ((this.UserCardDetailIDField.Equals(value) != true)) {
                    this.UserCardDetailIDField = value;
                    this.RaisePropertyChanged("UserCardDetailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCardExpiry {
            get {
                return this.UserCardExpiryField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCardExpiryField, value) != true)) {
                    this.UserCardExpiryField = value;
                    this.RaisePropertyChanged("UserCardExpiry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCardName {
            get {
                return this.UserCardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCardNameField, value) != true)) {
                    this.UserCardNameField = value;
                    this.RaisePropertyChanged("UserCardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCardNumber {
            get {
                return this.UserCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCardNumberField, value) != true)) {
                    this.UserCardNumberField = value;
                    this.RaisePropertyChanged("UserCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedUserCardDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedUserCardDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail[] UserCardDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail[] UserCardDetails {
            get {
                return this.UserCardDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCardDetailsField, value) != true)) {
                    this.UserCardDetailsField = value;
                    this.RaisePropertyChanged("UserCardDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSubscription", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserSubscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllAccessIncludeProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllAccessParametersCoursePriceEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllAccessParametersCoursePriceStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllAccessPassPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AllAccessTermsOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EnterprisePricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseTermsOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IndividualAccessPricingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IndividualAccessPricingEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IndividualAccessPricingStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndividualAccessTermsOfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserSubscriptionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllAccessIncludeProgram {
            get {
                return this.AllAccessIncludeProgramField;
            }
            set {
                if ((this.AllAccessIncludeProgramField.Equals(value) != true)) {
                    this.AllAccessIncludeProgramField = value;
                    this.RaisePropertyChanged("AllAccessIncludeProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllAccessParametersCoursePriceEnd {
            get {
                return this.AllAccessParametersCoursePriceEndField;
            }
            set {
                if ((this.AllAccessParametersCoursePriceEndField.Equals(value) != true)) {
                    this.AllAccessParametersCoursePriceEndField = value;
                    this.RaisePropertyChanged("AllAccessParametersCoursePriceEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllAccessParametersCoursePriceStart {
            get {
                return this.AllAccessParametersCoursePriceStartField;
            }
            set {
                if ((this.AllAccessParametersCoursePriceStartField.Equals(value) != true)) {
                    this.AllAccessParametersCoursePriceStartField = value;
                    this.RaisePropertyChanged("AllAccessParametersCoursePriceStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllAccessPassPricing {
            get {
                return this.AllAccessPassPricingField;
            }
            set {
                if ((this.AllAccessPassPricingField.Equals(value) != true)) {
                    this.AllAccessPassPricingField = value;
                    this.RaisePropertyChanged("AllAccessPassPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllAccessTermsOfService {
            get {
                return this.AllAccessTermsOfServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.AllAccessTermsOfServiceField, value) != true)) {
                    this.AllAccessTermsOfServiceField = value;
                    this.RaisePropertyChanged("AllAccessTermsOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EnterprisePricing {
            get {
                return this.EnterprisePricingField;
            }
            set {
                if ((this.EnterprisePricingField.Equals(value) != true)) {
                    this.EnterprisePricingField = value;
                    this.RaisePropertyChanged("EnterprisePricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseTermsOfService {
            get {
                return this.EnterpriseTermsOfServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseTermsOfServiceField, value) != true)) {
                    this.EnterpriseTermsOfServiceField = value;
                    this.RaisePropertyChanged("EnterpriseTermsOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndividualAccessPricing {
            get {
                return this.IndividualAccessPricingField;
            }
            set {
                if ((this.IndividualAccessPricingField.Equals(value) != true)) {
                    this.IndividualAccessPricingField = value;
                    this.RaisePropertyChanged("IndividualAccessPricing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndividualAccessPricingEnd {
            get {
                return this.IndividualAccessPricingEndField;
            }
            set {
                if ((this.IndividualAccessPricingEndField.Equals(value) != true)) {
                    this.IndividualAccessPricingEndField = value;
                    this.RaisePropertyChanged("IndividualAccessPricingEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IndividualAccessPricingStart {
            get {
                return this.IndividualAccessPricingStartField;
            }
            set {
                if ((this.IndividualAccessPricingStartField.Equals(value) != true)) {
                    this.IndividualAccessPricingStartField = value;
                    this.RaisePropertyChanged("IndividualAccessPricingStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndividualAccessTermsOfService {
            get {
                return this.IndividualAccessTermsOfServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.IndividualAccessTermsOfServiceField, value) != true)) {
                    this.IndividualAccessTermsOfServiceField = value;
                    this.RaisePropertyChanged("IndividualAccessTermsOfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserSubscriptionID {
            get {
                return this.UserSubscriptionIDField;
            }
            set {
                if ((this.UserSubscriptionIDField.Equals(value) != true)) {
                    this.UserSubscriptionIDField = value;
                    this.RaisePropertyChanged("UserSubscriptionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnterprisePackageRegister", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EnterprisePackageRegister : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPRCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EPRCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPREmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EPRIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPRNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPRPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPRCompany {
            get {
                return this.EPRCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.EPRCompanyField, value) != true)) {
                    this.EPRCompanyField = value;
                    this.RaisePropertyChanged("EPRCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EPRCreatedDate {
            get {
                return this.EPRCreatedDateField;
            }
            set {
                if ((this.EPRCreatedDateField.Equals(value) != true)) {
                    this.EPRCreatedDateField = value;
                    this.RaisePropertyChanged("EPRCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPREmail {
            get {
                return this.EPREmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EPREmailField, value) != true)) {
                    this.EPREmailField = value;
                    this.RaisePropertyChanged("EPREmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EPRID {
            get {
                return this.EPRIDField;
            }
            set {
                if ((this.EPRIDField.Equals(value) != true)) {
                    this.EPRIDField = value;
                    this.RaisePropertyChanged("EPRID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPRName {
            get {
                return this.EPRNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EPRNameField, value) != true)) {
                    this.EPRNameField = value;
                    this.RaisePropertyChanged("EPRName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPRPhone {
            get {
                return this.EPRPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EPRPhoneField, value) != true)) {
                    this.EPRPhoneField = value;
                    this.RaisePropertyChanged("EPRPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEnterprisePackageRegister", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEnterprisePackageRegister : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[] EnterprisePackageRegisterDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[] EnterprisePackageRegisterDetails {
            get {
                return this.EnterprisePackageRegisterDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterprisePackageRegisterDetailsField, value) != true)) {
                    this.EnterprisePackageRegisterDetailsField = value;
                    this.RaisePropertyChanged("EnterprisePackageRegisterDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAllAccessPass", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserAllAccessPass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AAPCouponIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AllAccessEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AllAccessStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAllAccessPricingAmountReceviedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShippingPaymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserAllAccessPassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserSubscriptionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AAPCouponID {
            get {
                return this.AAPCouponIDField;
            }
            set {
                if ((this.AAPCouponIDField.Equals(value) != true)) {
                    this.AAPCouponIDField = value;
                    this.RaisePropertyChanged("AAPCouponID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AllAccessEndDate {
            get {
                return this.AllAccessEndDateField;
            }
            set {
                if ((this.AllAccessEndDateField.Equals(value) != true)) {
                    this.AllAccessEndDateField = value;
                    this.RaisePropertyChanged("AllAccessEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AllAccessStartDate {
            get {
                return this.AllAccessStartDateField;
            }
            set {
                if ((this.AllAccessStartDateField.Equals(value) != true)) {
                    this.AllAccessStartDateField = value;
                    this.RaisePropertyChanged("AllAccessStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAllAccessPricingAmountRecevied {
            get {
                return this.IsAllAccessPricingAmountReceviedField;
            }
            set {
                if ((this.IsAllAccessPricingAmountReceviedField.Equals(value) != true)) {
                    this.IsAllAccessPricingAmountReceviedField = value;
                    this.RaisePropertyChanged("IsAllAccessPricingAmountRecevied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ShippingPaymentID {
            get {
                return this.ShippingPaymentIDField;
            }
            set {
                if ((this.ShippingPaymentIDField.Equals(value) != true)) {
                    this.ShippingPaymentIDField = value;
                    this.RaisePropertyChanged("ShippingPaymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserAllAccessPassID {
            get {
                return this.UserAllAccessPassIDField;
            }
            set {
                if ((this.UserAllAccessPassIDField.Equals(value) != true)) {
                    this.UserAllAccessPassIDField = value;
                    this.RaisePropertyChanged("UserAllAccessPassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserSubscriptionID {
            get {
                return this.UserSubscriptionIDField;
            }
            set {
                if ((this.UserSubscriptionIDField.Equals(value) != true)) {
                    this.UserSubscriptionIDField = value;
                    this.RaisePropertyChanged("UserSubscriptionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedUserMenuGroup", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedUserMenuGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[] UserMenuGroupDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[] UserMenuGroupDetails {
            get {
                return this.UserMenuGroupDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMenuGroupDetailsField, value) != true)) {
                    this.UserMenuGroupDetailsField = value;
                    this.RaisePropertyChanged("UserMenuGroupDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMenuGroup", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserMenuGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMenuGroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuGroupID {
            get {
                return this.UserMenuGroupIDField;
            }
            set {
                if ((this.UserMenuGroupIDField.Equals(value) != true)) {
                    this.UserMenuGroupIDField = value;
                    this.RaisePropertyChanged("UserMenuGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMenuGroupName {
            get {
                return this.UserMenuGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMenuGroupNameField, value) != true)) {
                    this.UserMenuGroupNameField = value;
                    this.RaisePropertyChanged("UserMenuGroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserMenuPermission", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class UserMenuPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserMenuPermissionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuIDs {
            get {
                return this.MenuIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuIDsField, value) != true)) {
                    this.MenuIDsField = value;
                    this.RaisePropertyChanged("MenuIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuGroupID {
            get {
                return this.UserMenuGroupIDField;
            }
            set {
                if ((this.UserMenuGroupIDField.Equals(value) != true)) {
                    this.UserMenuGroupIDField = value;
                    this.RaisePropertyChanged("UserMenuGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserMenuPermissionID {
            get {
                return this.UserMenuPermissionIDField;
            }
            set {
                if ((this.UserMenuPermissionIDField.Equals(value) != true)) {
                    this.UserMenuPermissionIDField = value;
                    this.RaisePropertyChanged("UserMenuPermissionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByID", ReplyAction="http://tempuri.org/IUserService/GetUserByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.User GetUserByID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByID", ReplyAction="http://tempuri.org/IUserService/GetUserByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByIDAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        int AddUser(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        int UpdateUser(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserPassword", ReplyAction="http://tempuri.org/IUserService/UpdateUserPasswordResponse")]
        void UpdateUserPassword(int uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserPassword", ReplyAction="http://tempuri.org/IUserService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task UpdateUserPasswordAsync(int uid, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserName", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.User GetUserByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByUserName", ReplyAction="http://tempuri.org/IUserService/GetUserByUserNameResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersAll", ReplyAction="http://tempuri.org/IUserService/GetUsersAllResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.User[] GetUsersAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersAll", ReplyAction="http://tempuri.org/IUserService/GetUsersAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User[]> GetUsersAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByName", ReplyAction="http://tempuri.org/IUserService/GetUsersByNameResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedUser GetUsersByName(string name, int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByName", ReplyAction="http://tempuri.org/IUserService/GetUsersByNameResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> GetUsersByNameAsync(string name, int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmailAndOrganizationId", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailAndOrganizationIdResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.User GetUserByEmailAndOrganizationId(string userEmailID, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmailAndOrganizationId", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailAndOrganizationIdResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByEmailAndOrganizationIdAsync(string userEmailID, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/ResetUserFailedAttemptCountResponse")]
        int ResetUserFailedAttemptCount(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/ResetUserFailedAttemptCountResponse")]
        System.Threading.Tasks.Task<int> ResetUserFailedAttemptCountAsync(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/UpdateUserFailedAttemptCountResponse")]
        int UpdateUserFailedAttemptCount(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserFailedAttemptCount", ReplyAction="http://tempuri.org/IUserService/UpdateUserFailedAttemptCountResponse")]
        System.Threading.Tasks.Task<int> UpdateUserFailedAttemptCountAsync(HCRGUniversityMgtApp.NEPService.UserService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPagedUser", ReplyAction="http://tempuri.org/IUserService/GetAllPagedUserResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedUser GetAllPagedUser(int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPagedUser", ReplyAction="http://tempuri.org/IUserService/GetAllPagedUserResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> GetAllPagedUserAsync(int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/AddUserResetTempPasswordResponse")]
        int AddUserResetTempPassword(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/AddUserResetTempPasswordResponse")]
        System.Threading.Tasks.Task<int> AddUserResetTempPasswordAsync(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/DeleteUserResetTempPasswordResponse")]
        void DeleteUserResetTempPassword(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/DeleteUserResetTempPasswordResponse")]
        System.Threading.Tasks.Task DeleteUserResetTempPasswordAsync(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/matchUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/matchUserResetTempPasswordResponse")]
        bool matchUserResetTempPassword(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/matchUserResetTempPassword", ReplyAction="http://tempuri.org/IUserService/matchUserResetTempPasswordResponse")]
        System.Threading.Tasks.Task<bool> matchUserResetTempPasswordAsync(int uid, string tempPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserVerification", ReplyAction="http://tempuri.org/IUserService/updateUserVerificationResponse")]
        int updateUserVerification(int UserID, System.Nullable<bool> _isVerified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserVerification", ReplyAction="http://tempuri.org/IUserService/updateUserVerificationResponse")]
        System.Threading.Tasks.Task<int> updateUserVerificationAsync(int UserID, System.Nullable<bool> _isVerified);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/clearedUserDetail", ReplyAction="http://tempuri.org/IUserService/clearedUserDetailResponse")]
        int clearedUserDetail(int UserID, System.Nullable<bool> _isCleared);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/clearedUserDetail", ReplyAction="http://tempuri.org/IUserService/clearedUserDetailResponse")]
        System.Threading.Tasks.Task<int> clearedUserDetailAsync(int UserID, System.Nullable<bool> _isCleared);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserVerifiedDetails", ReplyAction="http://tempuri.org/IUserService/getUserVerifiedDetailsResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedUser getUserVerifiedDetails(int _skip, int _take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserVerifiedDetails", ReplyAction="http://tempuri.org/IUserService/getUserVerifiedDetailsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> getUserVerifiedDetailsAsync(int _skip, int _take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByPlanID", ReplyAction="http://tempuri.org/IUserService/GetUsersByPlanIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.User[] GetUsersByPlanID(int planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByPlanID", ReplyAction="http://tempuri.org/IUserService/GetUsersByPlanIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User[]> GetUsersByPlanIDAsync(int planID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaulClientAdminByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetDefaulClientAdminByOrganizationIDResponse")]
        int GetDefaulClientAdminByOrganizationID(int _orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDefaulClientAdminByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetDefaulClientAdminByOrganizationIDResponse")]
        System.Threading.Tasks.Task<int> GetDefaulClientAdminByOrganizationIDAsync(int _orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserMenuGroupAndPremissionAccordingToOrgani" +
            "zationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserMenuGroupAndPremissionAccordingToOrgani" +
            "zationIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroupAndPermission[] GetAllUserMenuGroupAndPremissionAccordingToOrganizationID(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserMenuGroupAndPremissionAccordingToOrgani" +
            "zationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserMenuGroupAndPremissionAccordingToOrgani" +
            "zationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroupAndPermission[]> GetAllUserMenuGroupAndPremissionAccordingToOrganizationIDAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetClientAndUserbySearchCriterias", ReplyAction="http://tempuri.org/IUserService/GetClientAndUserbySearchCriteriasResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.ClientAndUserbySearchCriterias[] GetClientAndUserbySearchCriterias(int OrganizationID, int ClientTypeID, string SelectionTypeName, int SelectionClientTypeID, string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetClientAndUserbySearchCriterias", ReplyAction="http://tempuri.org/IUserService/GetClientAndUserbySearchCriteriasResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.ClientAndUserbySearchCriterias[]> GetClientAndUserbySearchCriteriasAsync(int OrganizationID, int ClientTypeID, string SelectionTypeName, int SelectionClientTypeID, string SearchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserSessionIDByUserID", ReplyAction="http://tempuri.org/IUserService/UpdateUserSessionIDByUserIDResponse")]
        void UpdateUserSessionIDByUserID(int userId, string userSessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserSessionIDByUserID", ReplyAction="http://tempuri.org/IUserService/UpdateUserSessionIDByUserIDResponse")]
        System.Threading.Tasks.Task UpdateUserSessionIDByUserIDAsync(int userId, string userSessionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserSessionID", ReplyAction="http://tempuri.org/IUserService/ResetUserSessionIDResponse")]
        void ResetUserSessionID(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetUserSessionID", ReplyAction="http://tempuri.org/IUserService/ResetUserSessionIDResponse")]
        System.Threading.Tasks.Task ResetUserSessionIDAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUserCardDetail", ReplyAction="http://tempuri.org/IUserService/addUserCardDetailResponse")]
        int addUserCardDetail(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUserCardDetail", ReplyAction="http://tempuri.org/IUserService/addUserCardDetailResponse")]
        System.Threading.Tasks.Task<int> addUserCardDetailAsync(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserCardDetail", ReplyAction="http://tempuri.org/IUserService/updateUserCardDetailResponse")]
        int updateUserCardDetail(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserCardDetail", ReplyAction="http://tempuri.org/IUserService/updateUserCardDetailResponse")]
        System.Threading.Tasks.Task<int> updateUserCardDetailAsync(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserCardDetailByID", ReplyAction="http://tempuri.org/IUserService/getUserCardDetailByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail getUserCardDetailByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserCardDetailByID", ReplyAction="http://tempuri.org/IUserService/getUserCardDetailByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail> getUserCardDetailByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserCardDetailByUserID", ReplyAction="http://tempuri.org/IUserService/getUserCardDetailByUserIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedUserCardDetail getUserCardDetailByUserID(int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserCardDetailByUserID", ReplyAction="http://tempuri.org/IUserService/getUserCardDetailByUserIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUserCardDetail> getUserCardDetailByUserIDAsync(int userID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserSubscription", ReplyAction="http://tempuri.org/IUserService/AddUserSubscriptionResponse")]
        int AddUserSubscription(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserSubscription", ReplyAction="http://tempuri.org/IUserService/AddUserSubscriptionResponse")]
        System.Threading.Tasks.Task<int> AddUserSubscriptionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserSubscription", ReplyAction="http://tempuri.org/IUserService/UpdateUserSubscriptionResponse")]
        int UpdateUserSubscription(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserSubscription", ReplyAction="http://tempuri.org/IUserService/UpdateUserSubscriptionResponse")]
        System.Threading.Tasks.Task<int> UpdateUserSubscriptionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSubscriptionDetails", ReplyAction="http://tempuri.org/IUserService/GetUserSubscriptionDetailsResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserSubscription GetUserSubscriptionDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSubscriptionDetails", ReplyAction="http://tempuri.org/IUserService/GetUserSubscriptionDetailsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription> GetUserSubscriptionDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserSubscriptionByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserSubscriptionByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserSubscription[] GetAllUserSubscriptionByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserSubscriptionByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserSubscriptionByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription[]> GetAllUserSubscriptionByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSubscriptionByID", ReplyAction="http://tempuri.org/IUserService/GetUserSubscriptionByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserSubscription GetUserSubscriptionByID(int userSubscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserSubscriptionByID", ReplyAction="http://tempuri.org/IUserService/GetUserSubscriptionByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription> GetUserSubscriptionByIDAsync(int userSubscriptionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/addEnterprisePackageRegisterResponse")]
        int addEnterprisePackageRegister(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/addEnterprisePackageRegisterResponse")]
        System.Threading.Tasks.Task<int> addEnterprisePackageRegisterAsync(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/updateEnterprisePackageRegisterResponse")]
        int updateEnterprisePackageRegister(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/updateEnterprisePackageRegisterResponse")]
        System.Threading.Tasks.Task<int> updateEnterprisePackageRegisterAsync(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/deleteEnterprisePackageRegisterResponse")]
        void deleteEnterprisePackageRegister(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/deleteEnterprisePackageRegisterResponse")]
        System.Threading.Tasks.Task deleteEnterprisePackageRegisterAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getEnterprisePackageRegisterByID", ReplyAction="http://tempuri.org/IUserService/getEnterprisePackageRegisterByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister getEnterprisePackageRegisterByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getEnterprisePackageRegisterByID", ReplyAction="http://tempuri.org/IUserService/getEnterprisePackageRegisterByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister> getEnterprisePackageRegisterByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPagedEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/GetAllPagedEnterprisePackageRegisterResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedEnterprisePackageRegister GetAllPagedEnterprisePackageRegister(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllPagedEnterprisePackageRegister", ReplyAction="http://tempuri.org/IUserService/GetAllPagedEnterprisePackageRegisterResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedEnterprisePackageRegister> GetAllPagedEnterprisePackageRegisterAsync(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllEnterprisePackageRegistersByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllEnterprisePackageRegistersByOrganizationIDR" +
            "esponse")]
        HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[] GetAllEnterprisePackageRegistersByOrganizationID(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllEnterprisePackageRegistersByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllEnterprisePackageRegistersByOrganizationIDR" +
            "esponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[]> GetAllEnterprisePackageRegistersByOrganizationIDAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUserAllAccessPass", ReplyAction="http://tempuri.org/IUserService/addUserAllAccessPassResponse")]
        int addUserAllAccessPass(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUserAllAccessPass", ReplyAction="http://tempuri.org/IUserService/addUserAllAccessPassResponse")]
        System.Threading.Tasks.Task<int> addUserAllAccessPassAsync(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserAllAccessPass", ReplyAction="http://tempuri.org/IUserService/updateUserAllAccessPassResponse")]
        int updateUserAllAccessPass(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUserAllAccessPass", ReplyAction="http://tempuri.org/IUserService/updateUserAllAccessPassResponse")]
        System.Threading.Tasks.Task<int> updateUserAllAccessPassAsync(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserAllAccessPassByID", ReplyAction="http://tempuri.org/IUserService/getUserAllAccessPassByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass getUserAllAccessPassByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserAllAccessPassByID", ReplyAction="http://tempuri.org/IUserService/getUserAllAccessPassByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass> getUserAllAccessPassByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserAllAccessPassByUserID", ReplyAction="http://tempuri.org/IUserService/getUserAllAccessPassByUserIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass getUserAllAccessPassByUserID(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getUserAllAccessPassByUserID", ReplyAction="http://tempuri.org/IUserService/getUserAllAccessPassByUserIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass> getUserAllAccessPassByUserIDAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/checkUserAllAccessPassByUserID", ReplyAction="http://tempuri.org/IUserService/checkUserAllAccessPassByUserIDResponse")]
        int checkUserAllAccessPassByUserID(int userAllAccessPassID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/checkUserAllAccessPassByUserID", ReplyAction="http://tempuri.org/IUserService/checkUserAllAccessPassByUserIDResponse")]
        System.Threading.Tasks.Task<int> checkUserAllAccessPassByUserIDAsync(int userAllAccessPassID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.PagedUserMenuGroup GetUserMenuGroup(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUserMenuGroup> GetUserMenuGroupAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserMenuGroupByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserMenuGroupByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[] GetAllUserMenuGroupByOrganizationID(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllUserMenuGroupByOrganizationID", ReplyAction="http://tempuri.org/IUserService/GetAllUserMenuGroupByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[]> GetAllUserMenuGroupByOrganizationIDAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/AddUserMenuGroupResponse")]
        int AddUserMenuGroup(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/AddUserMenuGroupResponse")]
        System.Threading.Tasks.Task<int> AddUserMenuGroupAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/UpdateUserMenuGroupResponse")]
        int UpdateUserMenuGroup(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserMenuGroup", ReplyAction="http://tempuri.org/IUserService/UpdateUserMenuGroupResponse")]
        System.Threading.Tasks.Task<int> UpdateUserMenuGroupAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByID(int _userMenuGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByIDAsync(int _userMenuGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserMenuPermission", ReplyAction="http://tempuri.org/IUserService/AddUserMenuPermissionResponse")]
        int AddUserMenuPermission(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/AddUserMenuPermission", ReplyAction="http://tempuri.org/IUserService/AddUserMenuPermissionResponse")]
        System.Threading.Tasks.Task<int> AddUserMenuPermissionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserMenuPermission", ReplyAction="http://tempuri.org/IUserService/UpdateUserMenuPermissionResponse")]
        int UpdateUserMenuPermission(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUserMenuPermission", ReplyAction="http://tempuri.org/IUserService/UpdateUserMenuPermissionResponse")]
        System.Threading.Tasks.Task<int> UpdateUserMenuPermissionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuPermissionByID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuPermissionByIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission GetUserMenuPermissionByID(int _userMenuPermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuPermissionByID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuPermissionByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission> GetUserMenuPermissionByIDAsync(int _userMenuPermissionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuPermissionByUserMenuGroupID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuPermissionByUserMenuGroupIDResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission GetUserMenuPermissionByUserMenuGroupID(int _userMenuGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuPermissionByUserMenuGroupID", ReplyAction="http://tempuri.org/IUserService/GetUserMenuPermissionByUserMenuGroupIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission> GetUserMenuPermissionByUserMenuGroupIDAsync(int _userMenuGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByMenuIDs", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByMenuIDsResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByMenuIDs(string MenuIDs, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByMenuIDs", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByMenuIDsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByMenuIDsAsync(string MenuIDs, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByGroupName", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByGroupNameResponse")]
        HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByGroupName(string GroupName, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserMenuGroupByGroupName", ReplyAction="http://tempuri.org/IUserService/GetUserMenuGroupByGroupNameResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByGroupNameAsync(string GroupName, int OrganizationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : HCRGUniversityMgtApp.NEPService.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<HCRGUniversityMgtApp.NEPService.UserService.IUserService>, HCRGUniversityMgtApp.NEPService.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.User GetUserByID(int userID) {
            return base.Channel.GetUserByID(userID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByIDAsync(int userID) {
            return base.Channel.GetUserByIDAsync(userID);
        }
        
        public int AddUser(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public int UpdateUser(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void UpdateUserPassword(int uid, string pwd) {
            base.Channel.UpdateUserPassword(uid, pwd);
        }
        
        public System.Threading.Tasks.Task UpdateUserPasswordAsync(int uid, string pwd) {
            return base.Channel.UpdateUserPasswordAsync(uid, pwd);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.User GetUserByUserName(string userName) {
            return base.Channel.GetUserByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByUserNameAsync(string userName) {
            return base.Channel.GetUserByUserNameAsync(userName);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.User[] GetUsersAll(int OrganizationID) {
            return base.Channel.GetUsersAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User[]> GetUsersAllAsync(int OrganizationID) {
            return base.Channel.GetUsersAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedUser GetUsersByName(string name, int skip, int take, int clientID) {
            return base.Channel.GetUsersByName(name, skip, take, clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> GetUsersByNameAsync(string name, int skip, int take, int clientID) {
            return base.Channel.GetUsersByNameAsync(name, skip, take, clientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.User GetUserByEmailAndOrganizationId(string userEmailID, int OrganizationID) {
            return base.Channel.GetUserByEmailAndOrganizationId(userEmailID, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User> GetUserByEmailAndOrganizationIdAsync(string userEmailID, int OrganizationID) {
            return base.Channel.GetUserByEmailAndOrganizationIdAsync(userEmailID, OrganizationID);
        }
        
        public int ResetUserFailedAttemptCount(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.ResetUserFailedAttemptCount(user);
        }
        
        public System.Threading.Tasks.Task<int> ResetUserFailedAttemptCountAsync(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.ResetUserFailedAttemptCountAsync(user);
        }
        
        public int UpdateUserFailedAttemptCount(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.UpdateUserFailedAttemptCount(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserFailedAttemptCountAsync(HCRGUniversityMgtApp.NEPService.UserService.User user) {
            return base.Channel.UpdateUserFailedAttemptCountAsync(user);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedUser GetAllPagedUser(int skip, int take, int clientID) {
            return base.Channel.GetAllPagedUser(skip, take, clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> GetAllPagedUserAsync(int skip, int take, int clientID) {
            return base.Channel.GetAllPagedUserAsync(skip, take, clientID);
        }
        
        public int AddUserResetTempPassword(int uid, string tempPwd) {
            return base.Channel.AddUserResetTempPassword(uid, tempPwd);
        }
        
        public System.Threading.Tasks.Task<int> AddUserResetTempPasswordAsync(int uid, string tempPwd) {
            return base.Channel.AddUserResetTempPasswordAsync(uid, tempPwd);
        }
        
        public void DeleteUserResetTempPassword(int uid, string tempPwd) {
            base.Channel.DeleteUserResetTempPassword(uid, tempPwd);
        }
        
        public System.Threading.Tasks.Task DeleteUserResetTempPasswordAsync(int uid, string tempPwd) {
            return base.Channel.DeleteUserResetTempPasswordAsync(uid, tempPwd);
        }
        
        public bool matchUserResetTempPassword(int uid, string tempPwd) {
            return base.Channel.matchUserResetTempPassword(uid, tempPwd);
        }
        
        public System.Threading.Tasks.Task<bool> matchUserResetTempPasswordAsync(int uid, string tempPwd) {
            return base.Channel.matchUserResetTempPasswordAsync(uid, tempPwd);
        }
        
        public int updateUserVerification(int UserID, System.Nullable<bool> _isVerified) {
            return base.Channel.updateUserVerification(UserID, _isVerified);
        }
        
        public System.Threading.Tasks.Task<int> updateUserVerificationAsync(int UserID, System.Nullable<bool> _isVerified) {
            return base.Channel.updateUserVerificationAsync(UserID, _isVerified);
        }
        
        public int clearedUserDetail(int UserID, System.Nullable<bool> _isCleared) {
            return base.Channel.clearedUserDetail(UserID, _isCleared);
        }
        
        public System.Threading.Tasks.Task<int> clearedUserDetailAsync(int UserID, System.Nullable<bool> _isCleared) {
            return base.Channel.clearedUserDetailAsync(UserID, _isCleared);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedUser getUserVerifiedDetails(int _skip, int _take, int OrganizationID) {
            return base.Channel.getUserVerifiedDetails(_skip, _take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUser> getUserVerifiedDetailsAsync(int _skip, int _take, int OrganizationID) {
            return base.Channel.getUserVerifiedDetailsAsync(_skip, _take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.User[] GetUsersByPlanID(int planID) {
            return base.Channel.GetUsersByPlanID(planID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.User[]> GetUsersByPlanIDAsync(int planID) {
            return base.Channel.GetUsersByPlanIDAsync(planID);
        }
        
        public int GetDefaulClientAdminByOrganizationID(int _orgID) {
            return base.Channel.GetDefaulClientAdminByOrganizationID(_orgID);
        }
        
        public System.Threading.Tasks.Task<int> GetDefaulClientAdminByOrganizationIDAsync(int _orgID) {
            return base.Channel.GetDefaulClientAdminByOrganizationIDAsync(_orgID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroupAndPermission[] GetAllUserMenuGroupAndPremissionAccordingToOrganizationID(int OrganizationID) {
            return base.Channel.GetAllUserMenuGroupAndPremissionAccordingToOrganizationID(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroupAndPermission[]> GetAllUserMenuGroupAndPremissionAccordingToOrganizationIDAsync(int OrganizationID) {
            return base.Channel.GetAllUserMenuGroupAndPremissionAccordingToOrganizationIDAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.ClientAndUserbySearchCriterias[] GetClientAndUserbySearchCriterias(int OrganizationID, int ClientTypeID, string SelectionTypeName, int SelectionClientTypeID, string SearchText) {
            return base.Channel.GetClientAndUserbySearchCriterias(OrganizationID, ClientTypeID, SelectionTypeName, SelectionClientTypeID, SearchText);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.ClientAndUserbySearchCriterias[]> GetClientAndUserbySearchCriteriasAsync(int OrganizationID, int ClientTypeID, string SelectionTypeName, int SelectionClientTypeID, string SearchText) {
            return base.Channel.GetClientAndUserbySearchCriteriasAsync(OrganizationID, ClientTypeID, SelectionTypeName, SelectionClientTypeID, SearchText);
        }
        
        public void UpdateUserSessionIDByUserID(int userId, string userSessionID) {
            base.Channel.UpdateUserSessionIDByUserID(userId, userSessionID);
        }
        
        public System.Threading.Tasks.Task UpdateUserSessionIDByUserIDAsync(int userId, string userSessionID) {
            return base.Channel.UpdateUserSessionIDByUserIDAsync(userId, userSessionID);
        }
        
        public void ResetUserSessionID(int UserID) {
            base.Channel.ResetUserSessionID(UserID);
        }
        
        public System.Threading.Tasks.Task ResetUserSessionIDAsync(int UserID) {
            return base.Channel.ResetUserSessionIDAsync(UserID);
        }
        
        public int addUserCardDetail(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail) {
            return base.Channel.addUserCardDetail(_userCardDetail);
        }
        
        public System.Threading.Tasks.Task<int> addUserCardDetailAsync(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail) {
            return base.Channel.addUserCardDetailAsync(_userCardDetail);
        }
        
        public int updateUserCardDetail(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail) {
            return base.Channel.updateUserCardDetail(_userCardDetail);
        }
        
        public System.Threading.Tasks.Task<int> updateUserCardDetailAsync(HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail _userCardDetail) {
            return base.Channel.updateUserCardDetailAsync(_userCardDetail);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail getUserCardDetailByID(int id) {
            return base.Channel.getUserCardDetailByID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserCardDetail> getUserCardDetailByIDAsync(int id) {
            return base.Channel.getUserCardDetailByIDAsync(id);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedUserCardDetail getUserCardDetailByUserID(int userID, int skip, int take) {
            return base.Channel.getUserCardDetailByUserID(userID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUserCardDetail> getUserCardDetailByUserIDAsync(int userID, int skip, int take) {
            return base.Channel.getUserCardDetailByUserIDAsync(userID, skip, take);
        }
        
        public int AddUserSubscription(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription) {
            return base.Channel.AddUserSubscription(userSubscription);
        }
        
        public System.Threading.Tasks.Task<int> AddUserSubscriptionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription) {
            return base.Channel.AddUserSubscriptionAsync(userSubscription);
        }
        
        public int UpdateUserSubscription(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription) {
            return base.Channel.UpdateUserSubscription(userSubscription);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserSubscriptionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserSubscription userSubscription) {
            return base.Channel.UpdateUserSubscriptionAsync(userSubscription);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserSubscription GetUserSubscriptionDetails() {
            return base.Channel.GetUserSubscriptionDetails();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription> GetUserSubscriptionDetailsAsync() {
            return base.Channel.GetUserSubscriptionDetailsAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserSubscription[] GetAllUserSubscriptionByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllUserSubscriptionByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription[]> GetAllUserSubscriptionByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllUserSubscriptionByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserSubscription GetUserSubscriptionByID(int userSubscriptionID) {
            return base.Channel.GetUserSubscriptionByID(userSubscriptionID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserSubscription> GetUserSubscriptionByIDAsync(int userSubscriptionID) {
            return base.Channel.GetUserSubscriptionByIDAsync(userSubscriptionID);
        }
        
        public int addEnterprisePackageRegister(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister) {
            return base.Channel.addEnterprisePackageRegister(_EnterprisePackageRegister);
        }
        
        public System.Threading.Tasks.Task<int> addEnterprisePackageRegisterAsync(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister) {
            return base.Channel.addEnterprisePackageRegisterAsync(_EnterprisePackageRegister);
        }
        
        public int updateEnterprisePackageRegister(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister) {
            return base.Channel.updateEnterprisePackageRegister(_EnterprisePackageRegister);
        }
        
        public System.Threading.Tasks.Task<int> updateEnterprisePackageRegisterAsync(HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister _EnterprisePackageRegister) {
            return base.Channel.updateEnterprisePackageRegisterAsync(_EnterprisePackageRegister);
        }
        
        public void deleteEnterprisePackageRegister(int id) {
            base.Channel.deleteEnterprisePackageRegister(id);
        }
        
        public System.Threading.Tasks.Task deleteEnterprisePackageRegisterAsync(int id) {
            return base.Channel.deleteEnterprisePackageRegisterAsync(id);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister getEnterprisePackageRegisterByID(int id) {
            return base.Channel.getEnterprisePackageRegisterByID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister> getEnterprisePackageRegisterByIDAsync(int id) {
            return base.Channel.getEnterprisePackageRegisterByIDAsync(id);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedEnterprisePackageRegister GetAllPagedEnterprisePackageRegister(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedEnterprisePackageRegister(skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedEnterprisePackageRegister> GetAllPagedEnterprisePackageRegisterAsync(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedEnterprisePackageRegisterAsync(skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[] GetAllEnterprisePackageRegistersByOrganizationID(int OrganizationID) {
            return base.Channel.GetAllEnterprisePackageRegistersByOrganizationID(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.EnterprisePackageRegister[]> GetAllEnterprisePackageRegistersByOrganizationIDAsync(int OrganizationID) {
            return base.Channel.GetAllEnterprisePackageRegistersByOrganizationIDAsync(OrganizationID);
        }
        
        public int addUserAllAccessPass(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription) {
            return base.Channel.addUserAllAccessPass(userSubscription);
        }
        
        public System.Threading.Tasks.Task<int> addUserAllAccessPassAsync(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription) {
            return base.Channel.addUserAllAccessPassAsync(userSubscription);
        }
        
        public int updateUserAllAccessPass(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription) {
            return base.Channel.updateUserAllAccessPass(userSubscription);
        }
        
        public System.Threading.Tasks.Task<int> updateUserAllAccessPassAsync(HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass userSubscription) {
            return base.Channel.updateUserAllAccessPassAsync(userSubscription);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass getUserAllAccessPassByID(int ID) {
            return base.Channel.getUserAllAccessPassByID(ID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass> getUserAllAccessPassByIDAsync(int ID) {
            return base.Channel.getUserAllAccessPassByIDAsync(ID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass getUserAllAccessPassByUserID(int UserID) {
            return base.Channel.getUserAllAccessPassByUserID(UserID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserAllAccessPass> getUserAllAccessPassByUserIDAsync(int UserID) {
            return base.Channel.getUserAllAccessPassByUserIDAsync(UserID);
        }
        
        public int checkUserAllAccessPassByUserID(int userAllAccessPassID) {
            return base.Channel.checkUserAllAccessPassByUserID(userAllAccessPassID);
        }
        
        public System.Threading.Tasks.Task<int> checkUserAllAccessPassByUserIDAsync(int userAllAccessPassID) {
            return base.Channel.checkUserAllAccessPassByUserIDAsync(userAllAccessPassID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.PagedUserMenuGroup GetUserMenuGroup(int OrganizationID) {
            return base.Channel.GetUserMenuGroup(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.PagedUserMenuGroup> GetUserMenuGroupAsync(int OrganizationID) {
            return base.Channel.GetUserMenuGroupAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[] GetAllUserMenuGroupByOrganizationID(int OrganizationID) {
            return base.Channel.GetAllUserMenuGroupByOrganizationID(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup[]> GetAllUserMenuGroupByOrganizationIDAsync(int OrganizationID) {
            return base.Channel.GetAllUserMenuGroupByOrganizationIDAsync(OrganizationID);
        }
        
        public int AddUserMenuGroup(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup) {
            return base.Channel.AddUserMenuGroup(_userMenuGroup);
        }
        
        public System.Threading.Tasks.Task<int> AddUserMenuGroupAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup) {
            return base.Channel.AddUserMenuGroupAsync(_userMenuGroup);
        }
        
        public int UpdateUserMenuGroup(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup) {
            return base.Channel.UpdateUserMenuGroup(_userMenuGroup);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserMenuGroupAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup _userMenuGroup) {
            return base.Channel.UpdateUserMenuGroupAsync(_userMenuGroup);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByID(int _userMenuGroupID) {
            return base.Channel.GetUserMenuGroupByID(_userMenuGroupID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByIDAsync(int _userMenuGroupID) {
            return base.Channel.GetUserMenuGroupByIDAsync(_userMenuGroupID);
        }
        
        public int AddUserMenuPermission(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission) {
            return base.Channel.AddUserMenuPermission(_userMenuPermission);
        }
        
        public System.Threading.Tasks.Task<int> AddUserMenuPermissionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission) {
            return base.Channel.AddUserMenuPermissionAsync(_userMenuPermission);
        }
        
        public int UpdateUserMenuPermission(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission) {
            return base.Channel.UpdateUserMenuPermission(_userMenuPermission);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserMenuPermissionAsync(HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission _userMenuPermission) {
            return base.Channel.UpdateUserMenuPermissionAsync(_userMenuPermission);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission GetUserMenuPermissionByID(int _userMenuPermissionID) {
            return base.Channel.GetUserMenuPermissionByID(_userMenuPermissionID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission> GetUserMenuPermissionByIDAsync(int _userMenuPermissionID) {
            return base.Channel.GetUserMenuPermissionByIDAsync(_userMenuPermissionID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission GetUserMenuPermissionByUserMenuGroupID(int _userMenuGroupID) {
            return base.Channel.GetUserMenuPermissionByUserMenuGroupID(_userMenuGroupID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuPermission> GetUserMenuPermissionByUserMenuGroupIDAsync(int _userMenuGroupID) {
            return base.Channel.GetUserMenuPermissionByUserMenuGroupIDAsync(_userMenuGroupID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByMenuIDs(string MenuIDs, int OrganizationID) {
            return base.Channel.GetUserMenuGroupByMenuIDs(MenuIDs, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByMenuIDsAsync(string MenuIDs, int OrganizationID) {
            return base.Channel.GetUserMenuGroupByMenuIDsAsync(MenuIDs, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup GetUserMenuGroupByGroupName(string GroupName, int OrganizationID) {
            return base.Channel.GetUserMenuGroupByGroupName(GroupName, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.UserService.UserMenuGroup> GetUserMenuGroupByGroupNameAsync(string GroupName, int OrganizationID) {
            return base.Channel.GetUserMenuGroupByGroupNameAsync(GroupName, OrganizationID);
        }
    }
}
