//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityMgtApp.NEPService.EducationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColumn", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Base")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.EducationService.Profession))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.EducationService.Education))]
    public partial class BaseColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationFormat", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationFormat : HCRGUniversityMgtApp.NEPService.EducationService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationFormatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationFormatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationFormatID {
            get {
                return this.EducationFormatIDField;
            }
            set {
                if ((this.EducationFormatIDField.Equals(value) != true)) {
                    this.EducationFormatIDField = value;
                    this.RaisePropertyChanged("EducationFormatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationFormatType {
            get {
                return this.EducationFormatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationFormatTypeField, value) != true)) {
                    this.EducationFormatTypeField = value;
                    this.RaisePropertyChanged("EducationFormatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationPriority {
            get {
                return this.EducationPriorityField;
            }
            set {
                if ((this.EducationPriorityField.Equals(value) != true)) {
                    this.EducationPriorityField = value;
                    this.RaisePropertyChanged("EducationPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profession", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Profession : HCRGUniversityMgtApp.NEPService.EducationService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionTitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfessionID {
            get {
                return this.ProfessionIDField;
            }
            set {
                if ((this.ProfessionIDField.Equals(value) != true)) {
                    this.ProfessionIDField = value;
                    this.RaisePropertyChanged("ProfessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfessionTitle {
            get {
                return this.ProfessionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionTitleField, value) != true)) {
                    this.ProfessionTitleField = value;
                    this.RaisePropertyChanged("ProfessionTitle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accreditor", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Accreditor : HCRGUniversityMgtApp.NEPService.EducationService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccreditorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccreditorID {
            get {
                return this.AccreditorIDField;
            }
            set {
                if ((this.AccreditorIDField.Equals(value) != true)) {
                    this.AccreditorIDField = value;
                    this.RaisePropertyChanged("AccreditorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccreditorName {
            get {
                return this.AccreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccreditorNameField, value) != true)) {
                    this.AccreditorNameField = value;
                    this.RaisePropertyChanged("AccreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Education", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Education : HCRGUniversityMgtApp.NEPService.EducationService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllowRevisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CourseAllotedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CourseCredentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoursePresenterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoursePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CourseUploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CouseAllotedDaysMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndustryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCoursePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsProgramRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTimerRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReadyToDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllowRevisit {
            get {
                return this.AllowRevisitField;
            }
            set {
                if ((this.AllowRevisitField.Equals(value) != true)) {
                    this.AllowRevisitField = value;
                    this.RaisePropertyChanged("AllowRevisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CourseAllotedTime {
            get {
                return this.CourseAllotedTimeField;
            }
            set {
                if ((this.CourseAllotedTimeField.Equals(value) != true)) {
                    this.CourseAllotedTimeField = value;
                    this.RaisePropertyChanged("CourseAllotedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseCode {
            get {
                return this.CourseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseCodeField, value) != true)) {
                    this.CourseCodeField = value;
                    this.RaisePropertyChanged("CourseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CourseCredential {
            get {
                return this.CourseCredentialField;
            }
            set {
                if ((this.CourseCredentialField.Equals(value) != true)) {
                    this.CourseCredentialField = value;
                    this.RaisePropertyChanged("CourseCredential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseDate {
            get {
                return this.CourseDateField;
            }
            set {
                if ((this.CourseDateField.Equals(value) != true)) {
                    this.CourseDateField = value;
                    this.RaisePropertyChanged("CourseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseDescription {
            get {
                return this.CourseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseDescriptionField, value) != true)) {
                    this.CourseDescriptionField = value;
                    this.RaisePropertyChanged("CourseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseEndDate {
            get {
                return this.CourseEndDateField;
            }
            set {
                if ((this.CourseEndDateField.Equals(value) != true)) {
                    this.CourseEndDateField = value;
                    this.RaisePropertyChanged("CourseEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseEndTime {
            get {
                return this.CourseEndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseEndTimeField, value) != true)) {
                    this.CourseEndTimeField = value;
                    this.RaisePropertyChanged("CourseEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseFile {
            get {
                return this.CourseFileField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseFileField, value) != true)) {
                    this.CourseFileField = value;
                    this.RaisePropertyChanged("CourseFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseLocation {
            get {
                return this.CourseLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseLocationField, value) != true)) {
                    this.CourseLocationField = value;
                    this.RaisePropertyChanged("CourseLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoursePresenterName {
            get {
                return this.CoursePresenterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoursePresenterNameField, value) != true)) {
                    this.CoursePresenterNameField = value;
                    this.RaisePropertyChanged("CoursePresenterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoursePrice {
            get {
                return this.CoursePriceField;
            }
            set {
                if ((this.CoursePriceField.Equals(value) != true)) {
                    this.CoursePriceField = value;
                    this.RaisePropertyChanged("CoursePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseStartDate {
            get {
                return this.CourseStartDateField;
            }
            set {
                if ((this.CourseStartDateField.Equals(value) != true)) {
                    this.CourseStartDateField = value;
                    this.RaisePropertyChanged("CourseStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseStartTime {
            get {
                return this.CourseStartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseStartTimeField, value) != true)) {
                    this.CourseStartTimeField = value;
                    this.RaisePropertyChanged("CourseStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseTime {
            get {
                return this.CourseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseTimeField, value) != true)) {
                    this.CourseTimeField = value;
                    this.RaisePropertyChanged("CourseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CourseUploadDate {
            get {
                return this.CourseUploadDateField;
            }
            set {
                if ((this.CourseUploadDateField.Equals(value) != true)) {
                    this.CourseUploadDateField = value;
                    this.RaisePropertyChanged("CourseUploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CouseAllotedDaysMonth {
            get {
                return this.CouseAllotedDaysMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.CouseAllotedDaysMonthField, value) != true)) {
                    this.CouseAllotedDaysMonthField = value;
                    this.RaisePropertyChanged("CouseAllotedDaysMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndustryID {
            get {
                return this.IndustryIDField;
            }
            set {
                if ((this.IndustryIDField.Equals(value) != true)) {
                    this.IndustryIDField = value;
                    this.RaisePropertyChanged("IndustryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCoursePreview {
            get {
                return this.IsCoursePreviewField;
            }
            set {
                if ((this.IsCoursePreviewField.Equals(value) != true)) {
                    this.IsCoursePreviewField = value;
                    this.RaisePropertyChanged("IsCoursePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsProgramRequired {
            get {
                return this.IsProgramRequiredField;
            }
            set {
                if ((this.IsProgramRequiredField.Equals(value) != true)) {
                    this.IsProgramRequiredField = value;
                    this.RaisePropertyChanged("IsProgramRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTimerRequired {
            get {
                return this.IsTimerRequiredField;
            }
            set {
                if ((this.IsTimerRequiredField.Equals(value) != true)) {
                    this.IsTimerRequiredField = value;
                    this.RaisePropertyChanged("IsTimerRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReadyToDisplay {
            get {
                return this.ReadyToDisplayField;
            }
            set {
                if ((this.ReadyToDisplayField.Equals(value) != true)) {
                    this.ReadyToDisplayField = value;
                    this.RaisePropertyChanged("ReadyToDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEducation", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEducation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationSearchResult[] EducationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.Education[] _educationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationDetail[] educationsDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationSearchResult[] Educations {
            get {
                return this.EducationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationsField, value) != true)) {
                    this.EducationsField = value;
                    this.RaisePropertyChanged("Educations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] _educations {
            get {
                return this._educationsField;
            }
            set {
                if ((object.ReferenceEquals(this._educationsField, value) != true)) {
                    this._educationsField = value;
                    this.RaisePropertyChanged("_educations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationDetail[] educationsDetail {
            get {
                return this.educationsDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.educationsDetailField, value) != true)) {
                    this.educationsDetailField = value;
                    this.RaisePropertyChanged("educationsDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationSearchResult", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollegeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CourseUploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCoursePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ReadyToDisplayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollegeName {
            get {
                return this.CollegeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollegeNameField, value) != true)) {
                    this.CollegeNameField = value;
                    this.RaisePropertyChanged("CollegeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CourseUploadDate {
            get {
                return this.CourseUploadDateField;
            }
            set {
                if ((this.CourseUploadDateField.Equals(value) != true)) {
                    this.CourseUploadDateField = value;
                    this.RaisePropertyChanged("CourseUploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCoursePreview {
            get {
                return this.IsCoursePreviewField;
            }
            set {
                if ((this.IsCoursePreviewField.Equals(value) != true)) {
                    this.IsCoursePreviewField = value;
                    this.RaisePropertyChanged("IsCoursePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfModule {
            get {
                return this.NumberOfModuleField;
            }
            set {
                if ((this.NumberOfModuleField.Equals(value) != true)) {
                    this.NumberOfModuleField = value;
                    this.RaisePropertyChanged("NumberOfModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ReadyToDisplay {
            get {
                return this.ReadyToDisplayField;
            }
            set {
                if ((this.ReadyToDisplayField.Equals(value) != true)) {
                    this.ReadyToDisplayField = value;
                    this.RaisePropertyChanged("ReadyToDisplay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeCourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollegeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CourseAllotedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CoursePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CourseUploadDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CouseAllotedDaysMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] EducationFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsCoursePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsTimerRequiredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeCourseID {
            get {
                return this.CollegeCourseIDField;
            }
            set {
                if ((this.CollegeCourseIDField.Equals(value) != true)) {
                    this.CollegeCourseIDField = value;
                    this.RaisePropertyChanged("CollegeCourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeID {
            get {
                return this.CollegeIDField;
            }
            set {
                if ((this.CollegeIDField.Equals(value) != true)) {
                    this.CollegeIDField = value;
                    this.RaisePropertyChanged("CollegeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollegeName {
            get {
                return this.CollegeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollegeNameField, value) != true)) {
                    this.CollegeNameField = value;
                    this.RaisePropertyChanged("CollegeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CourseAllotedTime {
            get {
                return this.CourseAllotedTimeField;
            }
            set {
                if ((this.CourseAllotedTimeField.Equals(value) != true)) {
                    this.CourseAllotedTimeField = value;
                    this.RaisePropertyChanged("CourseAllotedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseCode {
            get {
                return this.CourseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseCodeField, value) != true)) {
                    this.CourseCodeField = value;
                    this.RaisePropertyChanged("CourseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseDescription {
            get {
                return this.CourseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseDescriptionField, value) != true)) {
                    this.CourseDescriptionField = value;
                    this.RaisePropertyChanged("CourseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseEndDate {
            get {
                return this.CourseEndDateField;
            }
            set {
                if ((this.CourseEndDateField.Equals(value) != true)) {
                    this.CourseEndDateField = value;
                    this.RaisePropertyChanged("CourseEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CoursePrice {
            get {
                return this.CoursePriceField;
            }
            set {
                if ((this.CoursePriceField.Equals(value) != true)) {
                    this.CoursePriceField = value;
                    this.RaisePropertyChanged("CoursePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseStartDate {
            get {
                return this.CourseStartDateField;
            }
            set {
                if ((this.CourseStartDateField.Equals(value) != true)) {
                    this.CourseStartDateField = value;
                    this.RaisePropertyChanged("CourseStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseTime {
            get {
                return this.CourseTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseTimeField, value) != true)) {
                    this.CourseTimeField = value;
                    this.RaisePropertyChanged("CourseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CourseUploadDate {
            get {
                return this.CourseUploadDateField;
            }
            set {
                if ((this.CourseUploadDateField.Equals(value) != true)) {
                    this.CourseUploadDateField = value;
                    this.RaisePropertyChanged("CourseUploadDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CouseAllotedDaysMonth {
            get {
                return this.CouseAllotedDaysMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.CouseAllotedDaysMonthField, value) != true)) {
                    this.CouseAllotedDaysMonthField = value;
                    this.RaisePropertyChanged("CouseAllotedDaysMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] EducationFormat {
            get {
                return this.EducationFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationFormatField, value) != true)) {
                    this.EducationFormatField = value;
                    this.RaisePropertyChanged("EducationFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsCoursePreview {
            get {
                return this.IsCoursePreviewField;
            }
            set {
                if ((this.IsCoursePreviewField.Equals(value) != true)) {
                    this.IsCoursePreviewField = value;
                    this.RaisePropertyChanged("IsCoursePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsTimerRequired {
            get {
                return this.IsTimerRequiredField;
            }
            set {
                if ((this.IsTimerRequiredField.Equals(value) != true)) {
                    this.IsTimerRequiredField = value;
                    this.RaisePropertyChanged("IsTimerRequired");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationProfessionDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationProfessionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationProfessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationProfessionID {
            get {
                return this.EducationProfessionIDField;
            }
            set {
                if ((this.EducationProfessionIDField.Equals(value) != true)) {
                    this.EducationProfessionIDField = value;
                    this.RaisePropertyChanged("EducationProfessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfessionID {
            get {
                return this.ProfessionIDField;
            }
            set {
                if ((this.ProfessionIDField.Equals(value) != true)) {
                    this.ProfessionIDField = value;
                    this.RaisePropertyChanged("ProfessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfessionTitle {
            get {
                return this.ProfessionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionTitleField, value) != true)) {
                    this.ProfessionTitleField = value;
                    this.RaisePropertyChanged("ProfessionTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationFormatDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationFormatDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationAvailableIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationFormatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationFormatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationAvailableID {
            get {
                return this.EducationAvailableIDField;
            }
            set {
                if ((this.EducationAvailableIDField.Equals(value) != true)) {
                    this.EducationAvailableIDField = value;
                    this.RaisePropertyChanged("EducationAvailableID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationFormatID {
            get {
                return this.EducationFormatIDField;
            }
            set {
                if ((this.EducationFormatIDField.Equals(value) != true)) {
                    this.EducationFormatIDField = value;
                    this.RaisePropertyChanged("EducationFormatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationFormatType {
            get {
                return this.EducationFormatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationFormatTypeField, value) != true)) {
                    this.EducationFormatTypeField = value;
                    this.RaisePropertyChanged("EducationFormatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationPriority {
            get {
                return this.EducationPriorityField;
            }
            set {
                if ((this.EducationPriorityField.Equals(value) != true)) {
                    this.EducationPriorityField = value;
                    this.RaisePropertyChanged("EducationPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollegeEducationSearch", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class CollegeEducationSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CollegeCourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollegeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CollegeCourseID {
            get {
                return this.CollegeCourseIDField;
            }
            set {
                if ((this.CollegeCourseIDField.Equals(value) != true)) {
                    this.CollegeCourseIDField = value;
                    this.RaisePropertyChanged("CollegeCourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeID {
            get {
                return this.CollegeIDField;
            }
            set {
                if ((this.CollegeIDField.Equals(value) != true)) {
                    this.CollegeIDField = value;
                    this.RaisePropertyChanged("CollegeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollegeName {
            get {
                return this.CollegeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollegeNameField, value) != true)) {
                    this.CollegeNameField = value;
                    this.RaisePropertyChanged("CollegeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedProfession", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedProfession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.Profession[] ProfessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] Professions {
            get {
                return this.ProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionsField, value) != true)) {
                    this.ProfessionsField = value;
                    this.RaisePropertyChanged("Professions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationProfession", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationProfession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationProfessionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProfessionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationProfessionID {
            get {
                return this.EducationProfessionIDField;
            }
            set {
                if ((this.EducationProfessionIDField.Equals(value) != true)) {
                    this.EducationProfessionIDField = value;
                    this.RaisePropertyChanged("EducationProfessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProfessionID {
            get {
                return this.ProfessionIDField;
            }
            set {
                if ((this.ProfessionIDField.Equals(value) != true)) {
                    this.ProfessionIDField = value;
                    this.RaisePropertyChanged("ProfessionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEducationFormat", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEducationFormat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] EducationFormatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] EducationFormats {
            get {
                return this.EducationFormatsField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationFormatsField, value) != true)) {
                    this.EducationFormatsField = value;
                    this.RaisePropertyChanged("EducationFormats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationFormatAvailable", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationFormatAvailable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationAvailableIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationFormatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationAvailableID {
            get {
                return this.EducationAvailableIDField;
            }
            set {
                if ((this.EducationAvailableIDField.Equals(value) != true)) {
                    this.EducationAvailableIDField = value;
                    this.RaisePropertyChanged("EducationAvailableID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationFormatID {
            get {
                return this.EducationFormatIDField;
            }
            set {
                if ((this.EducationFormatIDField.Equals(value) != true)) {
                    this.EducationFormatIDField = value;
                    this.RaisePropertyChanged("EducationFormatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollegeEducation", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class CollegeEducation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeCourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeCourseID {
            get {
                return this.CollegeCourseIDField;
            }
            set {
                if ((this.CollegeCourseIDField.Equals(value) != true)) {
                    this.CollegeCourseIDField = value;
                    this.RaisePropertyChanged("CollegeCourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeID {
            get {
                return this.CollegeIDField;
            }
            set {
                if ((this.CollegeIDField.Equals(value) != true)) {
                    this.CollegeIDField = value;
                    this.RaisePropertyChanged("CollegeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEducationNewsSearch", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEducationNewsSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationNewsSearch[] educationNewsSearchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationNewsSearch[] educationNewsSearch {
            get {
                return this.educationNewsSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.educationNewsSearchField, value) != true)) {
                    this.educationNewsSearchField = value;
                    this.RaisePropertyChanged("educationNewsSearch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationNewsSearch", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationNewsSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string descriptions {
            get {
                return this.descriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionsField, value) != true)) {
                    this.descriptionsField = value;
                    this.RaisePropertyChanged("descriptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationTypesAvailable", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationTypesAvailable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationTypeAIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationTypeAID {
            get {
                return this.EducationTypeAIDField;
            }
            set {
                if ((this.EducationTypeAIDField.Equals(value) != true)) {
                    this.EducationTypeAIDField = value;
                    this.RaisePropertyChanged("EducationTypeAID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationTypeID {
            get {
                return this.EducationTypeIDField;
            }
            set {
                if ((this.EducationTypeIDField.Equals(value) != true)) {
                    this.EducationTypeIDField = value;
                    this.RaisePropertyChanged("EducationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationDetailPage", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationDetailPage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EPageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EPageID {
            get {
                return this.EPageIDField;
            }
            set {
                if ((this.EPageIDField.Equals(value) != true)) {
                    this.EPageIDField = value;
                    this.RaisePropertyChanged("EPageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PContent {
            get {
                return this.PContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PContentField, value) != true)) {
                    this.PContentField = value;
                    this.RaisePropertyChanged("PContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PDate {
            get {
                return this.PDateField;
            }
            set {
                if ((this.PDateField.Equals(value) != true)) {
                    this.PDateField = value;
                    this.RaisePropertyChanged("PDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationDetailPageWithEducation", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationDetailPageWithEducation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EPageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EPageID {
            get {
                return this.EPageIDField;
            }
            set {
                if ((this.EPageIDField.Equals(value) != true)) {
                    this.EPageIDField = value;
                    this.RaisePropertyChanged("EPageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PContent {
            get {
                return this.PContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PContentField, value) != true)) {
                    this.PContentField = value;
                    this.RaisePropertyChanged("PContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PDate {
            get {
                return this.PDateField;
            }
            set {
                if ((this.PDateField.Equals(value) != true)) {
                    this.PDateField = value;
                    this.RaisePropertyChanged("PDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEducationProfession", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEducationProfession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] EducationProfessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] EducationProfessions {
            get {
                return this.EducationProfessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationProfessionsField, value) != true)) {
                    this.EducationProfessionsField = value;
                    this.RaisePropertyChanged("EducationProfessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedAccreditor", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedAccreditor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] AccreditorRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] AccreditorRecords {
            get {
                return this.AccreditorRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccreditorRecordsField, value) != true)) {
                    this.AccreditorRecordsField = value;
                    this.RaisePropertyChanged("AccreditorRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EducationCredential", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class EducationCredential : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccreditorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccreditorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CredentialIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredentialTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CredentialUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccreditorID {
            get {
                return this.AccreditorIDField;
            }
            set {
                if ((this.AccreditorIDField.Equals(value) != true)) {
                    this.AccreditorIDField = value;
                    this.RaisePropertyChanged("AccreditorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccreditorName {
            get {
                return this.AccreditorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccreditorNameField, value) != true)) {
                    this.AccreditorNameField = value;
                    this.RaisePropertyChanged("AccreditorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateMessage {
            get {
                return this.CertificateMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateMessageField, value) != true)) {
                    this.CertificateMessageField = value;
                    this.RaisePropertyChanged("CertificateMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CredentialID {
            get {
                return this.CredentialIDField;
            }
            set {
                if ((this.CredentialIDField.Equals(value) != true)) {
                    this.CredentialIDField = value;
                    this.RaisePropertyChanged("CredentialID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredentialProgram {
            get {
                return this.CredentialProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialProgramField, value) != true)) {
                    this.CredentialProgramField = value;
                    this.RaisePropertyChanged("CredentialProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredentialType {
            get {
                return this.CredentialTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialTypeField, value) != true)) {
                    this.CredentialTypeField = value;
                    this.RaisePropertyChanged("CredentialType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CredentialUnit {
            get {
                return this.CredentialUnitField;
            }
            set {
                if ((this.CredentialUnitField.Equals(value) != true)) {
                    this.CredentialUnitField = value;
                    this.RaisePropertyChanged("CredentialUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseExpirySendEmail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class CourseExpirySendEmail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.EducationService.IEducationService")]
    public interface IEducationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducation", ReplyAction="http://tempuri.org/IEducationService/AddEducationResponse")]
        int AddEducation(HCRGUniversityMgtApp.NEPService.EducationService.Education education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducation", ReplyAction="http://tempuri.org/IEducationService/AddEducationResponse")]
        System.Threading.Tasks.Task<int> AddEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.Education education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducation", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationResponse")]
        int UpdateEducation(HCRGUniversityMgtApp.NEPService.EducationService.Education education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducation", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.Education education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByID", ReplyAction="http://tempuri.org/IEducationService/GetEducationByIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education GetEducationByID(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByID", ReplyAction="http://tempuri.org/IEducationService/GetEducationByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education> GetEducationByIDAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducation", ReplyAction="http://tempuri.org/IEducationService/getAllEducationResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education[] getAllEducation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducation", ReplyAction="http://tempuri.org/IEducationService/getAllEducationResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> getAllEducationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducationActive", ReplyAction="http://tempuri.org/IEducationService/getAllEducationActiveResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education[] getAllEducationActive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducationActive", ReplyAction="http://tempuri.org/IEducationService/getAllEducationActiveResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> getAllEducationActiveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationLatest", ReplyAction="http://tempuri.org/IEducationService/GetEducationLatestResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetEducationLatest(int UserID, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationLatest", ReplyAction="http://tempuri.org/IEducationService/GetEducationLatestResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetEducationLatestAsync(int UserID, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByEducationNamePaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByEducationNamePagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByEducationNamePaged(string educationName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByEducationNamePaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByEducationNamePagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByEducationNamePagedAsync(string educationName, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationReadyToDisplayByEducationNamePag" +
            "ed", ReplyAction="http://tempuri.org/IEducationService/GetEducationReadyToDisplayByEducationNamePag" +
            "edResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationReadyToDisplayByEducationNamePaged(string educationName, int _organizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationReadyToDisplayByEducationNamePag" +
            "ed", ReplyAction="http://tempuri.org/IEducationService/GetEducationReadyToDisplayByEducationNamePag" +
            "edResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationReadyToDisplayByEducationNamePagedAsync(string educationName, int _organizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetOnSiteEducationByStartDate", ReplyAction="http://tempuri.org/IEducationService/GetOnSiteEducationByStartDateResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetOnSiteEducationByStartDate(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetOnSiteEducationByStartDate", ReplyAction="http://tempuri.org/IEducationService/GetOnSiteEducationByStartDateResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetOnSiteEducationByStartDateAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/PublishEducation", ReplyAction="http://tempuri.org/IEducationService/PublishEducationResponse")]
        int PublishEducation(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/PublishEducation", ReplyAction="http://tempuri.org/IEducationService/PublishEducationResponse")]
        System.Threading.Tasks.Task<int> PublishEducationAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/CoursePreviewEducation", ReplyAction="http://tempuri.org/IEducationService/CoursePreviewEducationResponse")]
        int CoursePreviewEducation(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/CoursePreviewEducation", ReplyAction="http://tempuri.org/IEducationService/CoursePreviewEducationResponse")]
        System.Threading.Tasks.Task<int> CoursePreviewEducationAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationAndProfession", ReplyAction="http://tempuri.org/IEducationService/GetEducationAndProfessionResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] GetEducationAndProfession(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationAndProfession", ReplyAction="http://tempuri.org/IEducationService/GetEducationAndProfessionResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[]> GetEducationAndProfessionAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationAndEducationFormat", ReplyAction="http://tempuri.org/IEducationService/GetEducationAndEducationFormatResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[] GetEducationAndEducationFormat(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationAndEducationFormat", ReplyAction="http://tempuri.org/IEducationService/GetEducationAndEducationFormatResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[]> GetEducationAndEducationFormatAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetCollegeEducationByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetCollegeEducationByEducationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducationSearch[] GetCollegeEducationByEducationID(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetCollegeEducationByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetCollegeEducationByEducationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducationSearch[]> GetCollegeEducationByEducationIDAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionEducationByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionEducationByEducationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] GetProfessionEducationByEducationID(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionEducationByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionEducationByEducationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[]> GetProfessionEducationByEducationIDAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddProfession", ReplyAction="http://tempuri.org/IEducationService/AddProfessionResponse")]
        int AddProfession(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddProfession", ReplyAction="http://tempuri.org/IEducationService/AddProfessionResponse")]
        System.Threading.Tasks.Task<int> AddProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateProfession", ReplyAction="http://tempuri.org/IEducationService/UpdateProfessionResponse")]
        int UpdateProfession(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateProfession", ReplyAction="http://tempuri.org/IEducationService/UpdateProfessionResponse")]
        System.Threading.Tasks.Task<int> UpdateProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionByID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionByIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession GetProfessionByID(int professionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionByID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession> GetProfessionByIDAsync(int professionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfession", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfession(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfession", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionAsync(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionActive", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionActiveResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionActive(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionActive", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionActiveResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionActiveAsync(int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionWeb", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionWebResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionWeb(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionWeb", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionWebResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionWebAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionActiveWeb", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionActiveWebResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionActiveWeb(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllProfessionActiveWeb", ReplyAction="http://tempuri.org/IEducationService/getAllProfessionActiveWebResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionActiveWebAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionsByCollegeID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionsByCollegeIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] GetProfessionsByCollegeID(int collegeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionsByCollegeID", ReplyAction="http://tempuri.org/IEducationService/GetProfessionsByCollegeIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> GetProfessionsByCollegeIDAsync(int collegeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionNotAssociateWithEducation", ReplyAction="http://tempuri.org/IEducationService/GetProfessionNotAssociateWithEducationRespon" +
            "se")]
        HCRGUniversityMgtApp.NEPService.EducationService.Profession[] GetProfessionNotAssociateWithEducation(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetProfessionNotAssociateWithEducation", ReplyAction="http://tempuri.org/IEducationService/GetProfessionNotAssociateWithEducationRespon" +
            "se")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> GetProfessionNotAssociateWithEducationAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedProfession", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedProfessionResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession GetAllPagedProfession(int skip, int take, int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedProfession", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedProfessionResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession> GetAllPagedProfessionAsync(int skip, int take, int _clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedProfessionByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedProfessionByOrganizationIDRespons" +
            "e")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession GetAllPagedProfessionByOrganizationID(int skip, int take, int organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedProfessionByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedProfessionByOrganizationIDRespons" +
            "e")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession> GetAllPagedProfessionByOrganizationIDAsync(int skip, int take, int organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationProfession", ReplyAction="http://tempuri.org/IEducationService/AddEducationProfessionResponse")]
        int AddEducationProfession(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationProfession", ReplyAction="http://tempuri.org/IEducationService/AddEducationProfessionResponse")]
        System.Threading.Tasks.Task<int> AddEducationProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationProfession", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationProfessionResponse")]
        int UpdateEducationProfession(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationProfession", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationProfessionResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationFormat", ReplyAction="http://tempuri.org/IEducationService/AddEducationFormatResponse")]
        int AddEducationFormat(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationFormat", ReplyAction="http://tempuri.org/IEducationService/AddEducationFormatResponse")]
        System.Threading.Tasks.Task<int> AddEducationFormatAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationFormat", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationFormatResponse")]
        int UpdateEducationFormat(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationFormat", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationFormatResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationFormatAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducationFormat", ReplyAction="http://tempuri.org/IEducationService/getAllEducationFormatResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] getAllEducationFormat(int _organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAllEducationFormat", ReplyAction="http://tempuri.org/IEducationService/getAllEducationFormatResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> getAllEducationFormatAsync(int _organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatNotAssociateWithEducation", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatNotAssociateWithEducationR" +
            "esponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetEducationFormatNotAssociateWithEducation(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatNotAssociateWithEducation", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatNotAssociateWithEducationR" +
            "esponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetEducationFormatNotAssociateWithEducationAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationFormat", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationFormatResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationFormat GetAllPagedEducationFormat(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationFormat", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationFormatResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationFormat> GetAllPagedEducationFormatAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatByClientID", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetEducationFormatByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatByClientID", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetEducationFormatByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllEducationFormatByClientID", ReplyAction="http://tempuri.org/IEducationService/GetAllEducationFormatByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetAllEducationFormatByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllEducationFormatByClientID", ReplyAction="http://tempuri.org/IEducationService/GetAllEducationFormatByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetAllEducationFormatByClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllEducationFormatByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllEducationFormatByOrganizationIDRespons" +
            "e")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetAllEducationFormatByOrganizationID(int _organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllEducationFormatByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllEducationFormatByOrganizationIDRespons" +
            "e")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetAllEducationFormatByOrganizationIDAsync(int _organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationFormatAvailable", ReplyAction="http://tempuri.org/IEducationService/AddEducationFormatAvailableResponse")]
        int AddEducationFormatAvailable(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationFormatAvailable", ReplyAction="http://tempuri.org/IEducationService/AddEducationFormatAvailableResponse")]
        System.Threading.Tasks.Task<int> AddEducationFormatAvailableAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationFormatAvailable", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationFormatAvailableResponse")]
        int UpdateEducationFormatAvailable(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationFormatAvailable", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationFormatAvailableResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationFormatAvailableAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatsByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatsByEducationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[] GetEducationFormatsByEducationID(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationFormatsByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationFormatsByEducationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[]> GetEducationFormatsByEducationIDAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddCollegeEducation", ReplyAction="http://tempuri.org/IEducationService/AddCollegeEducationResponse")]
        int AddCollegeEducation(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddCollegeEducation", ReplyAction="http://tempuri.org/IEducationService/AddCollegeEducationResponse")]
        System.Threading.Tasks.Task<int> AddCollegeEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateCollegeEducation", ReplyAction="http://tempuri.org/IEducationService/UpdateCollegeEducationResponse")]
        int UpdateCollegeEducation(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateCollegeEducation", ReplyAction="http://tempuri.org/IEducationService/UpdateCollegeEducationResponse")]
        System.Threading.Tasks.Task<int> UpdateCollegeEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeAllPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeAllPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeAllPaged(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeAllPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeAllPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeAllPagedAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByCollegeIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByCollegeIDPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByCollegeIDPaged(int collegeID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByCollegeIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByCollegeIDPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByCollegeIDPagedAsync(int collegeID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDPagedR" +
            "esponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByEducationFormatIDPaged(int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDPagedR" +
            "esponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByEducationFormatIDPagedAsync(int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDAndCol" +
            "legeIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDAndCol" +
            "legeIDPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByEducationFormatIDAndCollegeIDPaged(int collegeID, int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDAndCol" +
            "legeIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationCollegeByEducationFormatIDAndCol" +
            "legeIDPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByEducationFormatIDAndCollegeIDPagedAsync(int collegeID, int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByProfessionIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByProfessionIDPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByProfessionIDPaged(int professionID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByProfessionIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByProfessionIDPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByProfessionIDPagedAsync(int professionID, System.Nullable<int> userID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByEducationFormatIDORCollegeIDOR" +
            "DeptIDORPrfIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByEducationFormatIDORCollegeIDOR" +
            "DeptIDORPrfIDPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPaged(System.Nullable<int> collegeID, System.Nullable<int> formatID, System.Nullable<int> professionID, System.Nullable<int> UserID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByEducationFormatIDORCollegeIDOR" +
            "DeptIDORPrfIDPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationByEducationFormatIDORCollegeIDOR" +
            "DeptIDORPrfIDPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPagedAsync(System.Nullable<int> collegeID, System.Nullable<int> formatID, System.Nullable<int> professionID, System.Nullable<int> UserID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationNewsSearchByTextPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationNewsSearchByTextPagedResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationNewsSearch GetEducationNewsSearchByTextPaged(string searchText, System.Nullable<int> UserID, int OrganizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationNewsSearchByTextPaged", ReplyAction="http://tempuri.org/IEducationService/GetEducationNewsSearchByTextPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationNewsSearch> GetEducationNewsSearchByTextPagedAsync(string searchText, System.Nullable<int> UserID, int OrganizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationType", ReplyAction="http://tempuri.org/IEducationService/AddEducationTypeResponse")]
        int AddEducationType(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationType", ReplyAction="http://tempuri.org/IEducationService/AddEducationTypeResponse")]
        System.Threading.Tasks.Task<int> AddEducationTypeAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationType", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationTypeResponse")]
        int UpdateEducationType(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationType", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationTypeResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationTypeAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationTypeByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationTypeByEducationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable[] GetEducationTypeByEducationID(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationTypeByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationTypeByEducationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable[]> GetEducationTypeByEducationIDAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/AddEducationDetailPageContentResponse")]
        int AddEducationDetailPageContent(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/AddEducationDetailPageContentResponse")]
        System.Threading.Tasks.Task<int> AddEducationDetailPageContentAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationDetailPageContentResponse")]
        int UpdateEducationDetailPageContent(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationDetailPageContentResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationDetailPageContentAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/GetEducationDetailPageContentResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPageWithEducation GetEducationDetailPageContent(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationDetailPageContent", ReplyAction="http://tempuri.org/IEducationService/GetEducationDetailPageContentResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPageWithEducation> GetEducationDetailPageContentAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationProfession", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationProfessionResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationProfession GetAllPagedEducationProfession(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationProfession", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationProfessionResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationProfession> GetAllPagedEducationProfessionAsync(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationByfilter", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationByfilterResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetAllPagedEducationByfilter(string coursename, int skip, int take, int ClientID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedEducationByfilter", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedEducationByfilterResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetAllPagedEducationByfilterAsync(string coursename, int skip, int take, int ClientID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetCourseCatalogByfilter", ReplyAction="http://tempuri.org/IEducationService/GetCourseCatalogByfilterResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetCourseCatalogByfilter(string _search, int skip, int take, int ClientID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetCourseCatalogByfilter", ReplyAction="http://tempuri.org/IEducationService/GetCourseCatalogByfilterResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetCourseCatalogByfilterAsync(string _search, int skip, int take, int ClientID, int OrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddAccreditor", ReplyAction="http://tempuri.org/IEducationService/AddAccreditorResponse")]
        int AddAccreditor(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddAccreditor", ReplyAction="http://tempuri.org/IEducationService/AddAccreditorResponse")]
        System.Threading.Tasks.Task<int> AddAccreditorAsync(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateAccreditor", ReplyAction="http://tempuri.org/IEducationService/UpdateAccreditorResponse")]
        int UpdateAccreditor(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateAccreditor", ReplyAction="http://tempuri.org/IEducationService/UpdateAccreditorResponse")]
        System.Threading.Tasks.Task<int> UpdateAccreditorAsync(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/DeleteAccreditor", ReplyAction="http://tempuri.org/IEducationService/DeleteAccreditorResponse")]
        void DeleteAccreditor(int _accreditorID, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/DeleteAccreditor", ReplyAction="http://tempuri.org/IEducationService/DeleteAccreditorResponse")]
        System.Threading.Tasks.Task DeleteAccreditorAsync(int _accreditorID, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAll", ReplyAction="http://tempuri.org/IEducationService/getAllResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] getAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/getAll", ReplyAction="http://tempuri.org/IEducationService/getAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[]> getAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedAccreditor", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedAccreditorResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.PagedAccreditor GetAllPagedAccreditor(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllPagedAccreditor", ReplyAction="http://tempuri.org/IEducationService/GetAllPagedAccreditorResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedAccreditor> GetAllPagedAccreditorAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllAccreditorsByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllAccreditorsByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] GetAllAccreditorsByOrganizationID(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetAllAccreditorsByOrganizationID", ReplyAction="http://tempuri.org/IEducationService/GetAllAccreditorsByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[]> GetAllAccreditorsByOrganizationIDAsync(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationCredential", ReplyAction="http://tempuri.org/IEducationService/AddEducationCredentialResponse")]
        int AddEducationCredential(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/AddEducationCredential", ReplyAction="http://tempuri.org/IEducationService/AddEducationCredentialResponse")]
        System.Threading.Tasks.Task<int> AddEducationCredentialAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationCredential", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationCredentialResponse")]
        int UpdateEducationCredential(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationCredential", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationCredentialResponse")]
        System.Threading.Tasks.Task<int> UpdateEducationCredentialAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/DeleteEducationCredential", ReplyAction="http://tempuri.org/IEducationService/DeleteEducationCredentialResponse")]
        void DeleteEducationCredential(int _credentialID, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/DeleteEducationCredential", ReplyAction="http://tempuri.org/IEducationService/DeleteEducationCredentialResponse")]
        System.Threading.Tasks.Task DeleteEducationCredentialAsync(int _credentialID, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialByID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialByIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential GetEducationCredentialByID(int _credentialID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialByID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential> GetEducationCredentialByIDAsync(int _credentialID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialByEducationIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[] GetEducationCredentialByEducationID(int _educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialByEducationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[]> GetEducationCredentialByEducationIDAsync(int _educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialDetailByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialDetailByEducationIDRes" +
            "ponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[] GetEducationCredentialDetailByEducationID(int _educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationCredentialDetailByEducationID", ReplyAction="http://tempuri.org/IEducationService/GetEducationCredentialDetailByEducationIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[]> GetEducationCredentialDetailByEducationIDAsync(int _educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GETCourseExpirySendEmailAlert", ReplyAction="http://tempuri.org/IEducationService/GETCourseExpirySendEmailAlertResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.CourseExpirySendEmail[] GETCourseExpirySendEmailAlert(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GETCourseExpirySendEmailAlert", ReplyAction="http://tempuri.org/IEducationService/GETCourseExpirySendEmailAlertResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.CourseExpirySendEmail[]> GETCourseExpirySendEmailAlertAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateMyEducationCompletedToPassed", ReplyAction="http://tempuri.org/IEducationService/UpdateMyEducationCompletedToPassedResponse")]
        void UpdateMyEducationCompletedToPassed(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateMyEducationCompletedToPassed", ReplyAction="http://tempuri.org/IEducationService/UpdateMyEducationCompletedToPassedResponse")]
        System.Threading.Tasks.Task UpdateMyEducationCompletedToPassedAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationModulesTime", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationModulesTimeResponse")]
        void UpdateEducationModulesTime(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/UpdateEducationModulesTime", ReplyAction="http://tempuri.org/IEducationService/UpdateEducationModulesTimeResponse")]
        System.Threading.Tasks.Task UpdateEducationModulesTimeAsync(int educationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByClientID", ReplyAction="http://tempuri.org/IEducationService/GetEducationByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetEducationByClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEducationService/GetEducationByClientID", ReplyAction="http://tempuri.org/IEducationService/GetEducationByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetEducationByClientIDAsync(int ClientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEducationServiceChannel : HCRGUniversityMgtApp.NEPService.EducationService.IEducationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EducationServiceClient : System.ServiceModel.ClientBase<HCRGUniversityMgtApp.NEPService.EducationService.IEducationService>, HCRGUniversityMgtApp.NEPService.EducationService.IEducationService {
        
        public EducationServiceClient() {
        }
        
        public EducationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EducationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EducationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EducationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddEducation(HCRGUniversityMgtApp.NEPService.EducationService.Education education) {
            return base.Channel.AddEducation(education);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.Education education) {
            return base.Channel.AddEducationAsync(education);
        }
        
        public int UpdateEducation(HCRGUniversityMgtApp.NEPService.EducationService.Education education) {
            return base.Channel.UpdateEducation(education);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.Education education) {
            return base.Channel.UpdateEducationAsync(education);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education GetEducationByID(int educationID) {
            return base.Channel.GetEducationByID(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education> GetEducationByIDAsync(int educationID) {
            return base.Channel.GetEducationByIDAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] getAllEducation() {
            return base.Channel.getAllEducation();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> getAllEducationAsync() {
            return base.Channel.getAllEducationAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] getAllEducationActive() {
            return base.Channel.getAllEducationActive();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> getAllEducationActiveAsync() {
            return base.Channel.getAllEducationActiveAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetEducationLatest(int UserID, int OrganizationID) {
            return base.Channel.GetEducationLatest(UserID, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetEducationLatestAsync(int UserID, int OrganizationID) {
            return base.Channel.GetEducationLatestAsync(UserID, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByEducationNamePaged(string educationName, int skip, int take) {
            return base.Channel.GetEducationByEducationNamePaged(educationName, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByEducationNamePagedAsync(string educationName, int skip, int take) {
            return base.Channel.GetEducationByEducationNamePagedAsync(educationName, skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationReadyToDisplayByEducationNamePaged(string educationName, int _organizationID, int skip, int take) {
            return base.Channel.GetEducationReadyToDisplayByEducationNamePaged(educationName, _organizationID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationReadyToDisplayByEducationNamePagedAsync(string educationName, int _organizationID, int skip, int take) {
            return base.Channel.GetEducationReadyToDisplayByEducationNamePagedAsync(educationName, _organizationID, skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetOnSiteEducationByStartDate(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetOnSiteEducationByStartDate(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetOnSiteEducationByStartDateAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetOnSiteEducationByStartDateAsync(startDate, endDate);
        }
        
        public int PublishEducation(int educationID) {
            return base.Channel.PublishEducation(educationID);
        }
        
        public System.Threading.Tasks.Task<int> PublishEducationAsync(int educationID) {
            return base.Channel.PublishEducationAsync(educationID);
        }
        
        public int CoursePreviewEducation(int educationID) {
            return base.Channel.CoursePreviewEducation(educationID);
        }
        
        public System.Threading.Tasks.Task<int> CoursePreviewEducationAsync(int educationID) {
            return base.Channel.CoursePreviewEducationAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] GetEducationAndProfession(int OrganizationID) {
            return base.Channel.GetEducationAndProfession(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[]> GetEducationAndProfessionAsync(int OrganizationID) {
            return base.Channel.GetEducationAndProfessionAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[] GetEducationAndEducationFormat(int OrganizationID) {
            return base.Channel.GetEducationAndEducationFormat(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[]> GetEducationAndEducationFormatAsync(int OrganizationID) {
            return base.Channel.GetEducationAndEducationFormatAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducationSearch[] GetCollegeEducationByEducationID(int educationID) {
            return base.Channel.GetCollegeEducationByEducationID(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducationSearch[]> GetCollegeEducationByEducationIDAsync(int educationID) {
            return base.Channel.GetCollegeEducationByEducationIDAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[] GetProfessionEducationByEducationID(int educationID) {
            return base.Channel.GetProfessionEducationByEducationID(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationProfessionDetail[]> GetProfessionEducationByEducationIDAsync(int educationID) {
            return base.Channel.GetProfessionEducationByEducationIDAsync(educationID);
        }
        
        public int AddProfession(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession) {
            return base.Channel.AddProfession(profession);
        }
        
        public System.Threading.Tasks.Task<int> AddProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession) {
            return base.Channel.AddProfessionAsync(profession);
        }
        
        public int UpdateProfession(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession) {
            return base.Channel.UpdateProfession(profession);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.Profession profession) {
            return base.Channel.UpdateProfessionAsync(profession);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession GetProfessionByID(int professionID) {
            return base.Channel.GetProfessionByID(professionID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession> GetProfessionByIDAsync(int professionID) {
            return base.Channel.GetProfessionByIDAsync(professionID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfession(int _clientID) {
            return base.Channel.getAllProfession(_clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionAsync(int _clientID) {
            return base.Channel.getAllProfessionAsync(_clientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionActive(int _clientID) {
            return base.Channel.getAllProfessionActive(_clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionActiveAsync(int _clientID) {
            return base.Channel.getAllProfessionActiveAsync(_clientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionWeb(int OrganizationID) {
            return base.Channel.getAllProfessionWeb(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionWebAsync(int OrganizationID) {
            return base.Channel.getAllProfessionWebAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] getAllProfessionActiveWeb(int OrganizationID) {
            return base.Channel.getAllProfessionActiveWeb(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> getAllProfessionActiveWebAsync(int OrganizationID) {
            return base.Channel.getAllProfessionActiveWebAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] GetProfessionsByCollegeID(int collegeID) {
            return base.Channel.GetProfessionsByCollegeID(collegeID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> GetProfessionsByCollegeIDAsync(int collegeID) {
            return base.Channel.GetProfessionsByCollegeIDAsync(collegeID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Profession[] GetProfessionNotAssociateWithEducation(int educationID) {
            return base.Channel.GetProfessionNotAssociateWithEducation(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Profession[]> GetProfessionNotAssociateWithEducationAsync(int educationID) {
            return base.Channel.GetProfessionNotAssociateWithEducationAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession GetAllPagedProfession(int skip, int take, int _clientID) {
            return base.Channel.GetAllPagedProfession(skip, take, _clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession> GetAllPagedProfessionAsync(int skip, int take, int _clientID) {
            return base.Channel.GetAllPagedProfessionAsync(skip, take, _clientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession GetAllPagedProfessionByOrganizationID(int skip, int take, int organizationID) {
            return base.Channel.GetAllPagedProfessionByOrganizationID(skip, take, organizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedProfession> GetAllPagedProfessionByOrganizationIDAsync(int skip, int take, int organizationID) {
            return base.Channel.GetAllPagedProfessionByOrganizationIDAsync(skip, take, organizationID);
        }
        
        public int AddEducationProfession(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession) {
            return base.Channel.AddEducationProfession(educationProfession);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession) {
            return base.Channel.AddEducationProfessionAsync(educationProfession);
        }
        
        public int UpdateEducationProfession(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession) {
            return base.Channel.UpdateEducationProfession(educationProfession);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationProfessionAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationProfession educationProfession) {
            return base.Channel.UpdateEducationProfessionAsync(educationProfession);
        }
        
        public int AddEducationFormat(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat) {
            return base.Channel.AddEducationFormat(educationFormat);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationFormatAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat) {
            return base.Channel.AddEducationFormatAsync(educationFormat);
        }
        
        public int UpdateEducationFormat(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat) {
            return base.Channel.UpdateEducationFormat(educationFormat);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationFormatAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat educationFormat) {
            return base.Channel.UpdateEducationFormatAsync(educationFormat);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] getAllEducationFormat(int _organizationID) {
            return base.Channel.getAllEducationFormat(_organizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> getAllEducationFormatAsync(int _organizationID) {
            return base.Channel.getAllEducationFormatAsync(_organizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetEducationFormatNotAssociateWithEducation(int educationID) {
            return base.Channel.GetEducationFormatNotAssociateWithEducation(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetEducationFormatNotAssociateWithEducationAsync(int educationID) {
            return base.Channel.GetEducationFormatNotAssociateWithEducationAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationFormat GetAllPagedEducationFormat(int skip, int take) {
            return base.Channel.GetAllPagedEducationFormat(skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationFormat> GetAllPagedEducationFormatAsync(int skip, int take) {
            return base.Channel.GetAllPagedEducationFormatAsync(skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetEducationFormatByClientID(int ClientID) {
            return base.Channel.GetEducationFormatByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetEducationFormatByClientIDAsync(int ClientID) {
            return base.Channel.GetEducationFormatByClientIDAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetAllEducationFormatByClientID(int ClientID) {
            return base.Channel.GetAllEducationFormatByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetAllEducationFormatByClientIDAsync(int ClientID) {
            return base.Channel.GetAllEducationFormatByClientIDAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[] GetAllEducationFormatByOrganizationID(int _organizationID) {
            return base.Channel.GetAllEducationFormatByOrganizationID(_organizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormat[]> GetAllEducationFormatByOrganizationIDAsync(int _organizationID) {
            return base.Channel.GetAllEducationFormatByOrganizationIDAsync(_organizationID);
        }
        
        public int AddEducationFormatAvailable(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable) {
            return base.Channel.AddEducationFormatAvailable(educationFormatAvailable);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationFormatAvailableAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable) {
            return base.Channel.AddEducationFormatAvailableAsync(educationFormatAvailable);
        }
        
        public int UpdateEducationFormatAvailable(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable) {
            return base.Channel.UpdateEducationFormatAvailable(educationFormatAvailable);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationFormatAvailableAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatAvailable educationFormatAvailable) {
            return base.Channel.UpdateEducationFormatAvailableAsync(educationFormatAvailable);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[] GetEducationFormatsByEducationID(int educationID) {
            return base.Channel.GetEducationFormatsByEducationID(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationFormatDetail[]> GetEducationFormatsByEducationIDAsync(int educationID) {
            return base.Channel.GetEducationFormatsByEducationIDAsync(educationID);
        }
        
        public int AddCollegeEducation(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu) {
            return base.Channel.AddCollegeEducation(cEdu);
        }
        
        public System.Threading.Tasks.Task<int> AddCollegeEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu) {
            return base.Channel.AddCollegeEducationAsync(cEdu);
        }
        
        public int UpdateCollegeEducation(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu) {
            return base.Channel.UpdateCollegeEducation(cEdu);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCollegeEducationAsync(HCRGUniversityMgtApp.NEPService.EducationService.CollegeEducation cEdu) {
            return base.Channel.UpdateCollegeEducationAsync(cEdu);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeAllPaged(int skip, int take) {
            return base.Channel.GetEducationCollegeAllPaged(skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeAllPagedAsync(int skip, int take) {
            return base.Channel.GetEducationCollegeAllPagedAsync(skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByCollegeIDPaged(int collegeID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByCollegeIDPaged(collegeID, userID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByCollegeIDPagedAsync(int collegeID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByCollegeIDPagedAsync(collegeID, userID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByEducationFormatIDPaged(int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByEducationFormatIDPaged(formatID, userID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByEducationFormatIDPagedAsync(int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByEducationFormatIDPagedAsync(formatID, userID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationCollegeByEducationFormatIDAndCollegeIDPaged(int collegeID, int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByEducationFormatIDAndCollegeIDPaged(collegeID, formatID, userID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationCollegeByEducationFormatIDAndCollegeIDPagedAsync(int collegeID, int formatID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationCollegeByEducationFormatIDAndCollegeIDPagedAsync(collegeID, formatID, userID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByProfessionIDPaged(int professionID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationByProfessionIDPaged(professionID, userID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByProfessionIDPagedAsync(int professionID, System.Nullable<int> userID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationByProfessionIDPagedAsync(professionID, userID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPaged(System.Nullable<int> collegeID, System.Nullable<int> formatID, System.Nullable<int> professionID, System.Nullable<int> UserID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPaged(collegeID, formatID, professionID, UserID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPagedAsync(System.Nullable<int> collegeID, System.Nullable<int> formatID, System.Nullable<int> professionID, System.Nullable<int> UserID, int skip, int take, int OrganizationID) {
            return base.Channel.GetEducationByEducationFormatIDORCollegeIDORDeptIDORPrfIDPagedAsync(collegeID, formatID, professionID, UserID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationNewsSearch GetEducationNewsSearchByTextPaged(string searchText, System.Nullable<int> UserID, int OrganizationID, int skip, int take) {
            return base.Channel.GetEducationNewsSearchByTextPaged(searchText, UserID, OrganizationID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationNewsSearch> GetEducationNewsSearchByTextPagedAsync(string searchText, System.Nullable<int> UserID, int OrganizationID, int skip, int take) {
            return base.Channel.GetEducationNewsSearchByTextPagedAsync(searchText, UserID, OrganizationID, skip, take);
        }
        
        public int AddEducationType(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable) {
            return base.Channel.AddEducationType(educationTypesAvailable);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationTypeAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable) {
            return base.Channel.AddEducationTypeAsync(educationTypesAvailable);
        }
        
        public int UpdateEducationType(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable) {
            return base.Channel.UpdateEducationType(educationTypesAvailable);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationTypeAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable educationTypesAvailable) {
            return base.Channel.UpdateEducationTypeAsync(educationTypesAvailable);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable[] GetEducationTypeByEducationID(int educationID) {
            return base.Channel.GetEducationTypeByEducationID(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationTypesAvailable[]> GetEducationTypeByEducationIDAsync(int educationID) {
            return base.Channel.GetEducationTypeByEducationIDAsync(educationID);
        }
        
        public int AddEducationDetailPageContent(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage) {
            return base.Channel.AddEducationDetailPageContent(eduDetailPage);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationDetailPageContentAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage) {
            return base.Channel.AddEducationDetailPageContentAsync(eduDetailPage);
        }
        
        public int UpdateEducationDetailPageContent(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage) {
            return base.Channel.UpdateEducationDetailPageContent(eduDetailPage);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationDetailPageContentAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPage eduDetailPage) {
            return base.Channel.UpdateEducationDetailPageContentAsync(eduDetailPage);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPageWithEducation GetEducationDetailPageContent(int educationID) {
            return base.Channel.GetEducationDetailPageContent(educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationDetailPageWithEducation> GetEducationDetailPageContentAsync(int educationID) {
            return base.Channel.GetEducationDetailPageContentAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationProfession GetAllPagedEducationProfession(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedEducationProfession(skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducationProfession> GetAllPagedEducationProfessionAsync(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedEducationProfessionAsync(skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetAllPagedEducationByfilter(string coursename, int skip, int take, int ClientID, int OrgID) {
            return base.Channel.GetAllPagedEducationByfilter(coursename, skip, take, ClientID, OrgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetAllPagedEducationByfilterAsync(string coursename, int skip, int take, int ClientID, int OrgID) {
            return base.Channel.GetAllPagedEducationByfilterAsync(coursename, skip, take, ClientID, OrgID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation GetCourseCatalogByfilter(string _search, int skip, int take, int ClientID, int OrgID) {
            return base.Channel.GetCourseCatalogByfilter(_search, skip, take, ClientID, OrgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedEducation> GetCourseCatalogByfilterAsync(string _search, int skip, int take, int ClientID, int OrgID) {
            return base.Channel.GetCourseCatalogByfilterAsync(_search, skip, take, ClientID, OrgID);
        }
        
        public int AddAccreditor(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor) {
            return base.Channel.AddAccreditor(accreditor);
        }
        
        public System.Threading.Tasks.Task<int> AddAccreditorAsync(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor) {
            return base.Channel.AddAccreditorAsync(accreditor);
        }
        
        public int UpdateAccreditor(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor) {
            return base.Channel.UpdateAccreditor(accreditor);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccreditorAsync(HCRGUniversityMgtApp.NEPService.EducationService.Accreditor accreditor) {
            return base.Channel.UpdateAccreditorAsync(accreditor);
        }
        
        public void DeleteAccreditor(int _accreditorID, bool isActive) {
            base.Channel.DeleteAccreditor(_accreditorID, isActive);
        }
        
        public System.Threading.Tasks.Task DeleteAccreditorAsync(int _accreditorID, bool isActive) {
            return base.Channel.DeleteAccreditorAsync(_accreditorID, isActive);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] getAll() {
            return base.Channel.getAll();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[]> getAllAsync() {
            return base.Channel.getAllAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.PagedAccreditor GetAllPagedAccreditor(int skip, int take) {
            return base.Channel.GetAllPagedAccreditor(skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.PagedAccreditor> GetAllPagedAccreditorAsync(int skip, int take) {
            return base.Channel.GetAllPagedAccreditorAsync(skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[] GetAllAccreditorsByOrganizationID(int clientID, int orgID) {
            return base.Channel.GetAllAccreditorsByOrganizationID(clientID, orgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Accreditor[]> GetAllAccreditorsByOrganizationIDAsync(int clientID, int orgID) {
            return base.Channel.GetAllAccreditorsByOrganizationIDAsync(clientID, orgID);
        }
        
        public int AddEducationCredential(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential) {
            return base.Channel.AddEducationCredential(educationCredential);
        }
        
        public System.Threading.Tasks.Task<int> AddEducationCredentialAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential) {
            return base.Channel.AddEducationCredentialAsync(educationCredential);
        }
        
        public int UpdateEducationCredential(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential) {
            return base.Channel.UpdateEducationCredential(educationCredential);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEducationCredentialAsync(HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential educationCredential) {
            return base.Channel.UpdateEducationCredentialAsync(educationCredential);
        }
        
        public void DeleteEducationCredential(int _credentialID, bool isActive) {
            base.Channel.DeleteEducationCredential(_credentialID, isActive);
        }
        
        public System.Threading.Tasks.Task DeleteEducationCredentialAsync(int _credentialID, bool isActive) {
            return base.Channel.DeleteEducationCredentialAsync(_credentialID, isActive);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential GetEducationCredentialByID(int _credentialID) {
            return base.Channel.GetEducationCredentialByID(_credentialID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential> GetEducationCredentialByIDAsync(int _credentialID) {
            return base.Channel.GetEducationCredentialByIDAsync(_credentialID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[] GetEducationCredentialByEducationID(int _educationID) {
            return base.Channel.GetEducationCredentialByEducationID(_educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[]> GetEducationCredentialByEducationIDAsync(int _educationID) {
            return base.Channel.GetEducationCredentialByEducationIDAsync(_educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[] GetEducationCredentialDetailByEducationID(int _educationID) {
            return base.Channel.GetEducationCredentialDetailByEducationID(_educationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.EducationCredential[]> GetEducationCredentialDetailByEducationIDAsync(int _educationID) {
            return base.Channel.GetEducationCredentialDetailByEducationIDAsync(_educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.CourseExpirySendEmail[] GETCourseExpirySendEmailAlert(int OrganizationID) {
            return base.Channel.GETCourseExpirySendEmailAlert(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.CourseExpirySendEmail[]> GETCourseExpirySendEmailAlertAsync(int OrganizationID) {
            return base.Channel.GETCourseExpirySendEmailAlertAsync(OrganizationID);
        }
        
        public void UpdateMyEducationCompletedToPassed(int educationID) {
            base.Channel.UpdateMyEducationCompletedToPassed(educationID);
        }
        
        public System.Threading.Tasks.Task UpdateMyEducationCompletedToPassedAsync(int educationID) {
            return base.Channel.UpdateMyEducationCompletedToPassedAsync(educationID);
        }
        
        public void UpdateEducationModulesTime(int educationID) {
            base.Channel.UpdateEducationModulesTime(educationID);
        }
        
        public System.Threading.Tasks.Task UpdateEducationModulesTimeAsync(int educationID) {
            return base.Channel.UpdateEducationModulesTimeAsync(educationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.EducationService.Education[] GetEducationByClientID(int ClientID) {
            return base.Channel.GetEducationByClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.EducationService.Education[]> GetEducationByClientIDAsync(int ClientID) {
            return base.Channel.GetEducationByClientIDAsync(ClientID);
        }
    }
}
