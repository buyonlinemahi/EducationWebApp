//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityMgtApp.NEPService.NewsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColumn", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Base")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.News))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.Resource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.FAQ))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.Certification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection))]
    public partial class BaseColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="News", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class News : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewsEditorPickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsSectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsAuthor {
            get {
                return this.NewsAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsAuthorField, value) != true)) {
                    this.NewsAuthorField = value;
                    this.RaisePropertyChanged("NewsAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewsDate {
            get {
                return this.NewsDateField;
            }
            set {
                if ((this.NewsDateField.Equals(value) != true)) {
                    this.NewsDateField = value;
                    this.RaisePropertyChanged("NewsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsDescription {
            get {
                return this.NewsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsDescriptionField, value) != true)) {
                    this.NewsDescriptionField = value;
                    this.RaisePropertyChanged("NewsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewsEditorPick {
            get {
                return this.NewsEditorPickField;
            }
            set {
                if ((this.NewsEditorPickField.Equals(value) != true)) {
                    this.NewsEditorPickField = value;
                    this.RaisePropertyChanged("NewsEditorPick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsSectionID {
            get {
                return this.NewsSectionIDField;
            }
            set {
                if ((this.NewsSectionIDField.Equals(value) != true)) {
                    this.NewsSectionIDField = value;
                    this.RaisePropertyChanged("NewsSectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Resource : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceTitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((this.ResourceIDField.Equals(value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceTitle {
            get {
                return this.ResourceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceTitleField, value) != true)) {
                    this.ResourceTitleField = value;
                    this.RaisePropertyChanged("ResourceTitle");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrainingAndSeminar", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class TrainingAndSeminar : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrainingAndSeminarDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrainingAndSeminarIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrainingAndSeminarDesc {
            get {
                return this.TrainingAndSeminarDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TrainingAndSeminarDescField, value) != true)) {
                    this.TrainingAndSeminarDescField = value;
                    this.RaisePropertyChanged("TrainingAndSeminarDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrainingAndSeminarID {
            get {
                return this.TrainingAndSeminarIDField;
            }
            set {
                if ((this.TrainingAndSeminarIDField.Equals(value) != true)) {
                    this.TrainingAndSeminarIDField = value;
                    this.RaisePropertyChanged("TrainingAndSeminarID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermsCondition", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class TermsCondition : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TermsConditionContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TermsConditionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TermsConditionContent {
            get {
                return this.TermsConditionContentField;
            }
            set {
                if ((object.ReferenceEquals(this.TermsConditionContentField, value) != true)) {
                    this.TermsConditionContentField = value;
                    this.RaisePropertyChanged("TermsConditionContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TermsConditionID {
            get {
                return this.TermsConditionIDField;
            }
            set {
                if ((this.TermsConditionIDField.Equals(value) != true)) {
                    this.TermsConditionIDField = value;
                    this.RaisePropertyChanged("TermsConditionID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQ", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class FAQ : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQAnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQCategoryTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaqCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQAns {
            get {
                return this.FAQAnsField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQAnsField, value) != true)) {
                    this.FAQAnsField = value;
                    this.RaisePropertyChanged("FAQAns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQCatID {
            get {
                return this.FAQCatIDField;
            }
            set {
                if ((this.FAQCatIDField.Equals(value) != true)) {
                    this.FAQCatIDField = value;
                    this.RaisePropertyChanged("FAQCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQCategoryTitle {
            get {
                return this.FAQCategoryTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQCategoryTitleField, value) != true)) {
                    this.FAQCategoryTitleField = value;
                    this.RaisePropertyChanged("FAQCategoryTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQID {
            get {
                return this.FAQIDField;
            }
            set {
                if ((this.FAQIDField.Equals(value) != true)) {
                    this.FAQIDField = value;
                    this.RaisePropertyChanged("FAQID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQues {
            get {
                return this.FAQuesField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQuesField, value) != true)) {
                    this.FAQuesField = value;
                    this.RaisePropertyChanged("FAQues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaqCategoryName {
            get {
                return this.FaqCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FaqCategoryNameField, value) != true)) {
                    this.FaqCategoryNameField = value;
                    this.RaisePropertyChanged("FaqCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarouselSetUp", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class CarouselSetUp : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarouselBgColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarouselDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarouselIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarouselTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsPhotoUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarouselBgColor {
            get {
                return this.CarouselBgColorField;
            }
            set {
                if ((object.ReferenceEquals(this.CarouselBgColorField, value) != true)) {
                    this.CarouselBgColorField = value;
                    this.RaisePropertyChanged("CarouselBgColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarouselDescription {
            get {
                return this.CarouselDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CarouselDescriptionField, value) != true)) {
                    this.CarouselDescriptionField = value;
                    this.RaisePropertyChanged("CarouselDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarouselID {
            get {
                return this.CarouselIDField;
            }
            set {
                if ((this.CarouselIDField.Equals(value) != true)) {
                    this.CarouselIDField = value;
                    this.RaisePropertyChanged("CarouselID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarouselTitle {
            get {
                return this.CarouselTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CarouselTitleField, value) != true)) {
                    this.CarouselTitleField = value;
                    this.RaisePropertyChanged("CarouselTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsDescription {
            get {
                return this.NewsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsDescriptionField, value) != true)) {
                    this.NewsDescriptionField = value;
                    this.RaisePropertyChanged("NewsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsPhotoUrl {
            get {
                return this.NewsPhotoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsPhotoUrlField, value) != true)) {
                    this.NewsPhotoUrlField = value;
                    this.RaisePropertyChanged("NewsPhotoUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HomeContent", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class HomeContent : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HomeContentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomePageContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeContentID {
            get {
                return this.HomeContentIDField;
            }
            set {
                if ((this.HomeContentIDField.Equals(value) != true)) {
                    this.HomeContentIDField = value;
                    this.RaisePropertyChanged("HomeContentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomePageContent {
            get {
                return this.HomePageContentField;
            }
            set {
                if ((object.ReferenceEquals(this.HomePageContentField, value) != true)) {
                    this.HomePageContentField = value;
                    this.RaisePropertyChanged("HomePageContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndustryResearch", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class IndustryResearch : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryResearchContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndustryResearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndustryResearchContent {
            get {
                return this.IndustryResearchContentField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryResearchContentField, value) != true)) {
                    this.IndustryResearchContentField = value;
                    this.RaisePropertyChanged("IndustryResearchContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndustryResearchID {
            get {
                return this.IndustryResearchIDField;
            }
            set {
                if ((this.IndustryResearchIDField.Equals(value) != true)) {
                    this.IndustryResearchIDField = value;
                    this.RaisePropertyChanged("IndustryResearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accreditation", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Accreditation : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccreditationContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccreditationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccreditationContent {
            get {
                return this.AccreditationContentField;
            }
            set {
                if ((object.ReferenceEquals(this.AccreditationContentField, value) != true)) {
                    this.AccreditationContentField = value;
                    this.RaisePropertyChanged("AccreditationContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccreditationID {
            get {
                return this.AccreditationIDField;
            }
            set {
                if ((this.AccreditationIDField.Equals(value) != true)) {
                    this.AccreditationIDField = value;
                    this.RaisePropertyChanged("AccreditationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Certification", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Certification : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificationContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CertificationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificationContent {
            get {
                return this.CertificationContentField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificationContentField, value) != true)) {
                    this.CertificationContentField = value;
                    this.RaisePropertyChanged("CertificationContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CertificationID {
            get {
                return this.CertificationIDField;
            }
            set {
                if ((this.CertificationIDField.Equals(value) != true)) {
                    this.CertificationIDField = value;
                    this.RaisePropertyChanged("CertificationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsLetter", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsLetter : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsLetterContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsLetterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsLetterContent {
            get {
                return this.NewsLetterContentField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsLetterContentField, value) != true)) {
                    this.NewsLetterContentField = value;
                    this.RaisePropertyChanged("NewsLetterContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsLetterID {
            get {
                return this.NewsLetterIDField;
            }
            set {
                if ((this.NewsLetterIDField.Equals(value) != true)) {
                    this.NewsLetterIDField = value;
                    this.RaisePropertyChanged("NewsLetterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnPolicy", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class ReturnPolicy : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnPolicyContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReturnPolicyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnPolicyContent {
            get {
                return this.ReturnPolicyContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnPolicyContentField, value) != true)) {
                    this.ReturnPolicyContentField = value;
                    this.RaisePropertyChanged("ReturnPolicyContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReturnPolicyID {
            get {
                return this.ReturnPolicyIDField;
            }
            set {
                if ((this.ReturnPolicyIDField.Equals(value) != true)) {
                    this.ReturnPolicyIDField = value;
                    this.RaisePropertyChanged("ReturnPolicyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryTerm", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class DeliveryTerm : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTermContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryTermIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTermContents {
            get {
                return this.DeliveryTermContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTermContentsField, value) != true)) {
                    this.DeliveryTermContentsField = value;
                    this.RaisePropertyChanged("DeliveryTermContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryTermID {
            get {
                return this.DeliveryTermIDField;
            }
            set {
                if ((this.DeliveryTermIDField.Equals(value) != true)) {
                    this.DeliveryTermIDField = value;
                    this.RaisePropertyChanged("DeliveryTermID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsSection", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsSection : HCRGUniversityMgtApp.NEPService.NewsService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsSectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsSectionTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsSectionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsSectionID {
            get {
                return this.NewsSectionIDField;
            }
            set {
                if ((this.NewsSectionIDField.Equals(value) != true)) {
                    this.NewsSectionIDField = value;
                    this.RaisePropertyChanged("NewsSectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsSectionTitle {
            get {
                return this.NewsSectionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsSectionTitleField, value) != true)) {
                    this.NewsSectionTitleField = value;
                    this.RaisePropertyChanged("NewsSectionTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsSectionType {
            get {
                return this.NewsSectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsSectionTypeField, value) != true)) {
                    this.NewsSectionTypeField = value;
                    this.RaisePropertyChanged("NewsSectionType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedNews", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedNews : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.NewsService.News[] NewsRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.NewsService.News[] NewsRecords {
            get {
                return this.NewsRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsRecordsField, value) != true)) {
                    this.NewsRecordsField = value;
                    this.RaisePropertyChanged("NewsRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedNewsDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedNewsDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[] NewsFullDetailRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[] NewsFullDetailRecords {
            get {
                return this.NewsFullDetailRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsFullDetailRecordsField, value) != true)) {
                    this.NewsFullDetailRecordsField = value;
                    this.RaisePropertyChanged("NewsFullDetailRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsFullDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsFullDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewsEditorPickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsSectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsSectionTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhotoVideoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoVideoTitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsAuthor {
            get {
                return this.NewsAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsAuthorField, value) != true)) {
                    this.NewsAuthorField = value;
                    this.RaisePropertyChanged("NewsAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewsDate {
            get {
                return this.NewsDateField;
            }
            set {
                if ((this.NewsDateField.Equals(value) != true)) {
                    this.NewsDateField = value;
                    this.RaisePropertyChanged("NewsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsDescription {
            get {
                return this.NewsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsDescriptionField, value) != true)) {
                    this.NewsDescriptionField = value;
                    this.RaisePropertyChanged("NewsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewsEditorPick {
            get {
                return this.NewsEditorPickField;
            }
            set {
                if ((this.NewsEditorPickField.Equals(value) != true)) {
                    this.NewsEditorPickField = value;
                    this.RaisePropertyChanged("NewsEditorPick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsSectionID {
            get {
                return this.NewsSectionIDField;
            }
            set {
                if ((this.NewsSectionIDField.Equals(value) != true)) {
                    this.NewsSectionIDField = value;
                    this.RaisePropertyChanged("NewsSectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsSectionTitle {
            get {
                return this.NewsSectionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsSectionTitleField, value) != true)) {
                    this.NewsSectionTitleField = value;
                    this.RaisePropertyChanged("NewsSectionTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoVideoId {
            get {
                return this.PhotoVideoIdField;
            }
            set {
                if ((this.PhotoVideoIdField.Equals(value) != true)) {
                    this.PhotoVideoIdField = value;
                    this.RaisePropertyChanged("PhotoVideoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoVideoTitle {
            get {
                return this.PhotoVideoTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoVideoTitleField, value) != true)) {
                    this.PhotoVideoTitleField = value;
                    this.RaisePropertyChanged("PhotoVideoTitle");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsPhoto", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsPhoto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsPhotoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsPhotosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsPhotoID {
            get {
                return this.NewsPhotoIDField;
            }
            set {
                if ((this.NewsPhotoIDField.Equals(value) != true)) {
                    this.NewsPhotoIDField = value;
                    this.RaisePropertyChanged("NewsPhotoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsPhotos {
            get {
                return this.NewsPhotosField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsPhotosField, value) != true)) {
                    this.NewsPhotosField = value;
                    this.RaisePropertyChanged("NewsPhotos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsVideo", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsVideo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsVideoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsVideosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsVideoID {
            get {
                return this.NewsVideoIDField;
            }
            set {
                if ((this.NewsVideoIDField.Equals(value) != true)) {
                    this.NewsVideoIDField = value;
                    this.RaisePropertyChanged("NewsVideoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsVideos {
            get {
                return this.NewsVideosField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsVideosField, value) != true)) {
                    this.NewsVideosField = value;
                    this.RaisePropertyChanged("NewsVideos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrivacyPolicy", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class PrivacyPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivacyPolicyContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PrivacyPolicyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivacyPolicyContent {
            get {
                return this.PrivacyPolicyContentField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivacyPolicyContentField, value) != true)) {
                    this.PrivacyPolicyContentField = value;
                    this.RaisePropertyChanged("PrivacyPolicyContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrivacyPolicyID {
            get {
                return this.PrivacyPolicyIDField;
            }
            set {
                if ((this.PrivacyPolicyIDField.Equals(value) != true)) {
                    this.PrivacyPolicyIDField = value;
                    this.RaisePropertyChanged("PrivacyPolicyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQCategory", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class FAQCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FAQCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FAQCategoryTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FAQCatID {
            get {
                return this.FAQCatIDField;
            }
            set {
                if ((this.FAQCatIDField.Equals(value) != true)) {
                    this.FAQCatIDField = value;
                    this.RaisePropertyChanged("FAQCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FAQCategoryTitle {
            get {
                return this.FAQCategoryTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.FAQCategoryTitleField, value) != true)) {
                    this.FAQCategoryTitleField = value;
                    this.RaisePropertyChanged("FAQCategoryTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewsSearchCarousel", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class NewsSearchCarousel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NewsDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewsEditorPickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsSectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsSectionTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsAuthor {
            get {
                return this.NewsAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsAuthorField, value) != true)) {
                    this.NewsAuthorField = value;
                    this.RaisePropertyChanged("NewsAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NewsDate {
            get {
                return this.NewsDateField;
            }
            set {
                if ((this.NewsDateField.Equals(value) != true)) {
                    this.NewsDateField = value;
                    this.RaisePropertyChanged("NewsDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsDescription {
            get {
                return this.NewsDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsDescriptionField, value) != true)) {
                    this.NewsDescriptionField = value;
                    this.RaisePropertyChanged("NewsDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewsEditorPick {
            get {
                return this.NewsEditorPickField;
            }
            set {
                if ((this.NewsEditorPickField.Equals(value) != true)) {
                    this.NewsEditorPickField = value;
                    this.RaisePropertyChanged("NewsEditorPick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsSectionID {
            get {
                return this.NewsSectionIDField;
            }
            set {
                if ((this.NewsSectionIDField.Equals(value) != true)) {
                    this.NewsSectionIDField = value;
                    this.RaisePropertyChanged("NewsSectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsSectionTitle {
            get {
                return this.NewsSectionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsSectionTitleField, value) != true)) {
                    this.NewsSectionTitleField = value;
                    this.RaisePropertyChanged("NewsSectionTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoursePresenterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CourseStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EducationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EventDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NewsIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseLocation {
            get {
                return this.CourseLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseLocationField, value) != true)) {
                    this.CourseLocationField = value;
                    this.RaisePropertyChanged("CourseLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoursePresenterName {
            get {
                return this.CoursePresenterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CoursePresenterNameField, value) != true)) {
                    this.CoursePresenterNameField = value;
                    this.RaisePropertyChanged("CoursePresenterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CourseStartDate {
            get {
                return this.CourseStartDateField;
            }
            set {
                if ((this.CourseStartDateField.Equals(value) != true)) {
                    this.CourseStartDateField = value;
                    this.RaisePropertyChanged("CourseStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseStartTime {
            get {
                return this.CourseStartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseStartTimeField, value) != true)) {
                    this.CourseStartTimeField = value;
                    this.RaisePropertyChanged("CourseStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventDate {
            get {
                return this.EventDateField;
            }
            set {
                if ((this.EventDateField.Equals(value) != true)) {
                    this.EventDateField = value;
                    this.RaisePropertyChanged("EventDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventDescription {
            get {
                return this.EventDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EventDescriptionField, value) != true)) {
                    this.EventDescriptionField = value;
                    this.RaisePropertyChanged("EventDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NewsID {
            get {
                return this.NewsIDField;
            }
            set {
                if ((this.NewsIDField.Equals(value) != true)) {
                    this.NewsIDField = value;
                    this.RaisePropertyChanged("NewsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsTitle {
            get {
                return this.NewsTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTitleField, value) != true)) {
                    this.NewsTitleField = value;
                    this.RaisePropertyChanged("NewsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewsType {
            get {
                return this.NewsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsTypeField, value) != true)) {
                    this.NewsTypeField = value;
                    this.RaisePropertyChanged("NewsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEvents", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEvents : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityMgtApp.NEPService.NewsService.Event[] _eventsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityMgtApp.NEPService.NewsService.Event[] _events {
            get {
                return this._eventsField;
            }
            set {
                if ((object.ReferenceEquals(this._eventsField, value) != true)) {
                    this._eventsField = value;
                    this.RaisePropertyChanged("_events");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.NewsService.INewsService")]
    public interface INewsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsSection", ReplyAction="http://tempuri.org/INewsService/AddNewsSectionResponse")]
        int AddNewsSection(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsSection", ReplyAction="http://tempuri.org/INewsService/AddNewsSectionResponse")]
        System.Threading.Tasks.Task<int> AddNewsSectionAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsSection", ReplyAction="http://tempuri.org/INewsService/UpdateNewsSectionResponse")]
        int UpdateNewsSection(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsSection", ReplyAction="http://tempuri.org/INewsService/UpdateNewsSectionResponse")]
        System.Threading.Tasks.Task<int> UpdateNewsSectionAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsSection", ReplyAction="http://tempuri.org/INewsService/DeleteNewsSectionResponse")]
        void DeleteNewsSection(int newsSectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsSection", ReplyAction="http://tempuri.org/INewsService/DeleteNewsSectionResponse")]
        System.Threading.Tasks.Task DeleteNewsSectionAsync(int newsSectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsSectionByID", ReplyAction="http://tempuri.org/INewsService/GetNewsSectionByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsSection GetNewsSectionByID(int newsSectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsSectionByID", ReplyAction="http://tempuri.org/INewsService/GetNewsSectionByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSection> GetNewsSectionByIDAsync(int newsSectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsSection", ReplyAction="http://tempuri.org/INewsService/getAllNewsSectionResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsSection[] getAllNewsSection(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsSection", ReplyAction="http://tempuri.org/INewsService/getAllNewsSectionResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSection[]> getAllNewsSectionAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNews", ReplyAction="http://tempuri.org/INewsService/AddNewsResponse")]
        int AddNews(HCRGUniversityMgtApp.NEPService.NewsService.News news);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNews", ReplyAction="http://tempuri.org/INewsService/AddNewsResponse")]
        System.Threading.Tasks.Task<int> AddNewsAsync(HCRGUniversityMgtApp.NEPService.NewsService.News news);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNews", ReplyAction="http://tempuri.org/INewsService/UpdateNewsResponse")]
        int UpdateNews(HCRGUniversityMgtApp.NEPService.NewsService.News news);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNews", ReplyAction="http://tempuri.org/INewsService/UpdateNewsResponse")]
        System.Threading.Tasks.Task<int> UpdateNewsAsync(HCRGUniversityMgtApp.NEPService.NewsService.News news);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNews", ReplyAction="http://tempuri.org/INewsService/DeleteNewsResponse")]
        void DeleteNews(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNews", ReplyAction="http://tempuri.org/INewsService/DeleteNewsResponse")]
        System.Threading.Tasks.Task DeleteNewsAsync(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsByID", ReplyAction="http://tempuri.org/INewsService/GetNewsByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.News GetNewsByID(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsByID", ReplyAction="http://tempuri.org/INewsService/GetNewsByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News> GetNewsByIDAsync(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNews", ReplyAction="http://tempuri.org/INewsService/getAllNewsResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.News[] getAllNews(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNews", ReplyAction="http://tempuri.org/INewsService/getAllNewsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> getAllNewsAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsByNewsTitlePaged", ReplyAction="http://tempuri.org/INewsService/GetNewsByNewsTitlePagedResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedNews GetNewsByNewsTitlePaged(string newsTitle, int _organizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsByNewsTitlePaged", ReplyAction="http://tempuri.org/INewsService/GetNewsByNewsTitlePagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNews> GetNewsByNewsTitlePagedAsync(string newsTitle, int _organizationID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetail", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetail(string type, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetail", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailAsync(string type, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsDetailByNewsID", ReplyAction="http://tempuri.org/INewsService/GetNewsDetailByNewsIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[] GetNewsDetailByNewsID(int newsID, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsDetailByNewsID", ReplyAction="http://tempuri.org/INewsService/GetNewsDetailByNewsIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[]> GetNewsDetailByNewsIDAsync(int newsID, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionID", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetailByNewsSectionID(int newsSectionID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionID", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailByNewsSectionIDAsync(int newsSectionID, int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDAndType", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDAndTypeResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetailByNewsSectionIDAndType(string type, int newsSectionID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDAndType", ReplyAction="http://tempuri.org/INewsService/GetAllNewsDetailByNewsSectionIDAndTypeResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailByNewsSectionIDAndTypeAsync(string type, int newsSectionID, int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewslatest", ReplyAction="http://tempuri.org/INewsService/GetNewslatestResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.News[] GetNewslatest(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewslatest", ReplyAction="http://tempuri.org/INewsService/GetNewslatestResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> GetNewslatestAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllNewsByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.News[] GetAllNewsByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllNewsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllNewsByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> GetAllNewsByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsPhoto", ReplyAction="http://tempuri.org/INewsService/AddNewsPhotoResponse")]
        int AddNewsPhoto(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsPhoto", ReplyAction="http://tempuri.org/INewsService/AddNewsPhotoResponse")]
        System.Threading.Tasks.Task<int> AddNewsPhotoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsPhoto", ReplyAction="http://tempuri.org/INewsService/UpdateNewsPhotoResponse")]
        int UpdateNewsPhoto(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsPhoto", ReplyAction="http://tempuri.org/INewsService/UpdateNewsPhotoResponse")]
        System.Threading.Tasks.Task<int> UpdateNewsPhotoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsPhoto", ReplyAction="http://tempuri.org/INewsService/DeleteNewsPhotoResponse")]
        void DeleteNewsPhoto(int newsPhotoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsPhoto", ReplyAction="http://tempuri.org/INewsService/DeleteNewsPhotoResponse")]
        System.Threading.Tasks.Task DeleteNewsPhotoAsync(int newsPhotoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsPhotoByID", ReplyAction="http://tempuri.org/INewsService/GetNewsPhotoByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto GetNewsPhotoByID(int newsPhotoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsPhotoByID", ReplyAction="http://tempuri.org/INewsService/GetNewsPhotoByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto> GetNewsPhotoByIDAsync(int newsPhotoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsPhoto", ReplyAction="http://tempuri.org/INewsService/getAllNewsPhotoResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[] getAllNewsPhoto();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsPhoto", ReplyAction="http://tempuri.org/INewsService/getAllNewsPhotoResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[]> getAllNewsPhotoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsPhotoByNewsID", ReplyAction="http://tempuri.org/INewsService/getAllNewsPhotoByNewsIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[] getAllNewsPhotoByNewsID(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsPhotoByNewsID", ReplyAction="http://tempuri.org/INewsService/getAllNewsPhotoByNewsIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[]> getAllNewsPhotoByNewsIDAsync(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsVideo", ReplyAction="http://tempuri.org/INewsService/AddNewsVideoResponse")]
        int AddNewsVideo(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsVideo", ReplyAction="http://tempuri.org/INewsService/AddNewsVideoResponse")]
        System.Threading.Tasks.Task<int> AddNewsVideoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsVideo", ReplyAction="http://tempuri.org/INewsService/UpdateNewsVideoResponse")]
        int UpdateNewsVideo(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsVideo", ReplyAction="http://tempuri.org/INewsService/UpdateNewsVideoResponse")]
        System.Threading.Tasks.Task<int> UpdateNewsVideoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsVideo", ReplyAction="http://tempuri.org/INewsService/DeleteNewsVideoResponse")]
        void DeleteNewsVideo(int newsVideoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteNewsVideo", ReplyAction="http://tempuri.org/INewsService/DeleteNewsVideoResponse")]
        System.Threading.Tasks.Task DeleteNewsVideoAsync(int newsVideoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsVideoByID", ReplyAction="http://tempuri.org/INewsService/GetNewsVideoByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo GetNewsVideoByID(int newsVideoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsVideoByID", ReplyAction="http://tempuri.org/INewsService/GetNewsVideoByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo> GetNewsVideoByIDAsync(int newsVideoID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsVideo", ReplyAction="http://tempuri.org/INewsService/getAllNewsVideoResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo[] getAllNewsVideo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllNewsVideo", ReplyAction="http://tempuri.org/INewsService/getAllNewsVideoResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo[]> getAllNewsVideoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsVideoByNewsID", ReplyAction="http://tempuri.org/INewsService/GetNewsVideoByNewsIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo GetNewsVideoByNewsID(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsVideoByNewsID", ReplyAction="http://tempuri.org/INewsService/GetNewsVideoByNewsIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo> GetNewsVideoByNewsIDAsync(int newsID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllResource", ReplyAction="http://tempuri.org/INewsService/getAllResourceResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Resource[] getAllResource(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllResource", ReplyAction="http://tempuri.org/INewsService/getAllResourceResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Resource[]> getAllResourceAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddTrainingAndSeminar", ReplyAction="http://tempuri.org/INewsService/AddTrainingAndSeminarResponse")]
        int AddTrainingAndSeminar(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddTrainingAndSeminar", ReplyAction="http://tempuri.org/INewsService/AddTrainingAndSeminarResponse")]
        System.Threading.Tasks.Task<int> AddTrainingAndSeminarAsync(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateTrainingAndSeminar", ReplyAction="http://tempuri.org/INewsService/UpdateTrainingAndSeminarResponse")]
        int UpdateTrainingAndSeminar(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateTrainingAndSeminar", ReplyAction="http://tempuri.org/INewsService/UpdateTrainingAndSeminarResponse")]
        System.Threading.Tasks.Task<int> UpdateTrainingAndSeminarAsync(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTrainingAndSeminarAll", ReplyAction="http://tempuri.org/INewsService/GetTrainingAndSeminarAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar GetTrainingAndSeminarAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTrainingAndSeminarAll", ReplyAction="http://tempuri.org/INewsService/GetTrainingAndSeminarAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar> GetTrainingAndSeminarAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllTrainingAndSeminarByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllTrainingAndSeminarByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar[] GetAllTrainingAndSeminarByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllTrainingAndSeminarByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllTrainingAndSeminarByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar[]> GetAllTrainingAndSeminarByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddPrivacyPolicy", ReplyAction="http://tempuri.org/INewsService/AddPrivacyPolicyResponse")]
        int AddPrivacyPolicy(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddPrivacyPolicy", ReplyAction="http://tempuri.org/INewsService/AddPrivacyPolicyResponse")]
        System.Threading.Tasks.Task<int> AddPrivacyPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdatePrivacyPolicy", ReplyAction="http://tempuri.org/INewsService/UpdatePrivacyPolicyResponse")]
        int UpdatePrivacyPolicy(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdatePrivacyPolicy", ReplyAction="http://tempuri.org/INewsService/UpdatePrivacyPolicyResponse")]
        System.Threading.Tasks.Task<int> UpdatePrivacyPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPrivacyPolicyAll", ReplyAction="http://tempuri.org/INewsService/GetPrivacyPolicyAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy GetPrivacyPolicyAll(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPrivacyPolicyAll", ReplyAction="http://tempuri.org/INewsService/GetPrivacyPolicyAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy> GetPrivacyPolicyAllAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPrivacyPolicyByID", ReplyAction="http://tempuri.org/INewsService/GetPrivacyPolicyByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy GetPrivacyPolicyByID(int PrivacyPolicyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetPrivacyPolicyByID", ReplyAction="http://tempuri.org/INewsService/GetPrivacyPolicyByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy> GetPrivacyPolicyByIDAsync(int PrivacyPolicyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllPrivacyPolicyAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllPrivacyPolicyAccordingToOrganizationIDRespo" +
            "nse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy[] GetAllPrivacyPolicyAccordingToOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllPrivacyPolicyAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllPrivacyPolicyAccordingToOrganizationIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy[]> GetAllPrivacyPolicyAccordingToOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddTermsCondition", ReplyAction="http://tempuri.org/INewsService/AddTermsConditionResponse")]
        int AddTermsCondition(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddTermsCondition", ReplyAction="http://tempuri.org/INewsService/AddTermsConditionResponse")]
        System.Threading.Tasks.Task<int> AddTermsConditionAsync(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateTermsCondition", ReplyAction="http://tempuri.org/INewsService/UpdateTermsConditionResponse")]
        int UpdateTermsCondition(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateTermsCondition", ReplyAction="http://tempuri.org/INewsService/UpdateTermsConditionResponse")]
        System.Threading.Tasks.Task<int> UpdateTermsConditionAsync(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTermsConditionAll", ReplyAction="http://tempuri.org/INewsService/GetTermsConditionAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition GetTermsConditionAll(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTermsConditionAll", ReplyAction="http://tempuri.org/INewsService/GetTermsConditionAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition> GetTermsConditionAllAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTermsConditionByID", ReplyAction="http://tempuri.org/INewsService/GetTermsConditionByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition GetTermsConditionByID(int TermsConditionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetTermsConditionByID", ReplyAction="http://tempuri.org/INewsService/GetTermsConditionByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition> GetTermsConditionByIDAsync(int TermsConditionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllTermAndConditionsAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllTermAndConditionsAccordingToClientIDRespons" +
            "e")]
        HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition[] GetAllTermAndConditionsAccordingToClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllTermAndConditionsAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllTermAndConditionsAccordingToClientIDRespons" +
            "e")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition[]> GetAllTermAndConditionsAccordingToClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddFAQ", ReplyAction="http://tempuri.org/INewsService/AddFAQResponse")]
        int AddFAQ(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddFAQ", ReplyAction="http://tempuri.org/INewsService/AddFAQResponse")]
        System.Threading.Tasks.Task<int> AddFAQAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateFAQ", ReplyAction="http://tempuri.org/INewsService/UpdateFAQResponse")]
        int UpdateFAQ(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateFAQ", ReplyAction="http://tempuri.org/INewsService/UpdateFAQResponse")]
        System.Threading.Tasks.Task<int> UpdateFAQAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteFAQ", ReplyAction="http://tempuri.org/INewsService/DeleteFAQResponse")]
        void DeleteFAQ(int faqID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteFAQ", ReplyAction="http://tempuri.org/INewsService/DeleteFAQResponse")]
        System.Threading.Tasks.Task DeleteFAQAsync(int faqID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQByID", ReplyAction="http://tempuri.org/INewsService/GetFAQByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQ GetFAQByID(int faqID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQByID", ReplyAction="http://tempuri.org/INewsService/GetFAQByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ> GetFAQByIDAsync(int faqID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllFAQ", ReplyAction="http://tempuri.org/INewsService/getAllFAQResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] getAllFAQ(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllFAQ", ReplyAction="http://tempuri.org/INewsService/getAllFAQResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> getAllFAQAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllFAQAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllFAQAccordingToOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] GetAllFAQAccordingToOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllFAQAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllFAQAccordingToOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> GetAllFAQAccordingToOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddFAQCategory", ReplyAction="http://tempuri.org/INewsService/AddFAQCategoryResponse")]
        int AddFAQCategory(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddFAQCategory", ReplyAction="http://tempuri.org/INewsService/AddFAQCategoryResponse")]
        System.Threading.Tasks.Task<int> AddFAQCategoryAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateFAQCategory", ReplyAction="http://tempuri.org/INewsService/UpdateFAQCategoryResponse")]
        int UpdateFAQCategory(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateFAQCategory", ReplyAction="http://tempuri.org/INewsService/UpdateFAQCategoryResponse")]
        System.Threading.Tasks.Task<int> UpdateFAQCategoryAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteFAQCategory", ReplyAction="http://tempuri.org/INewsService/DeleteFAQCategoryResponse")]
        void DeleteFAQCategory(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteFAQCategory", ReplyAction="http://tempuri.org/INewsService/DeleteFAQCategoryResponse")]
        System.Threading.Tasks.Task DeleteFAQCategoryAsync(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQCategoryByID", ReplyAction="http://tempuri.org/INewsService/GetFAQCategoryByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory GetFAQCategoryByID(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQCategoryByID", ReplyAction="http://tempuri.org/INewsService/GetFAQCategoryByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory> GetFAQCategoryByIDAsync(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllFAQCategoriesAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllFAQCategoriesAccordingToOrganizationIDRespo" +
            "nse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory[] GetAllFAQCategoriesAccordingToOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllFAQCategoriesAccordingToOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllFAQCategoriesAccordingToOrganizationIDRespo" +
            "nse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory[]> GetAllFAQCategoriesAccordingToOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQByCatID", ReplyAction="http://tempuri.org/INewsService/GetFAQByCatIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] GetFAQByCatID(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetFAQByCatID", ReplyAction="http://tempuri.org/INewsService/GetFAQByCatIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> GetFAQByCatIDAsync(int faqCatID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllPagedNews", ReplyAction="http://tempuri.org/INewsService/GetAllPagedNewsResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedNews GetAllPagedNews(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllPagedNews", ReplyAction="http://tempuri.org/INewsService/GetAllPagedNewsResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNews> GetAllPagedNewsAsync(int skip, int take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddCarouselSetup", ReplyAction="http://tempuri.org/INewsService/AddCarouselSetupResponse")]
        int AddCarouselSetup(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddCarouselSetup", ReplyAction="http://tempuri.org/INewsService/AddCarouselSetupResponse")]
        System.Threading.Tasks.Task<int> AddCarouselSetupAsync(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCarouselSetUpAll", ReplyAction="http://tempuri.org/INewsService/GetCarouselSetUpAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetCarouselSetUpAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCarouselSetUpAll", ReplyAction="http://tempuri.org/INewsService/GetCarouselSetUpAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetCarouselSetUpAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllCarouselSetUp", ReplyAction="http://tempuri.org/INewsService/GetAllCarouselSetUpResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetAllCarouselSetUp(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllCarouselSetUp", ReplyAction="http://tempuri.org/INewsService/GetAllCarouselSetUpResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetAllCarouselSetUpAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsDetailsAccordingToNewsSearch", ReplyAction="http://tempuri.org/INewsService/GetNewsDetailsAccordingToNewsSearchResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsSearchCarousel[] GetNewsDetailsAccordingToNewsSearch(string SearchText, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsDetailsAccordingToNewsSearch", ReplyAction="http://tempuri.org/INewsService/GetNewsDetailsAccordingToNewsSearchResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSearchCarousel[]> GetNewsDetailsAccordingToNewsSearchAsync(string SearchText, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateCarouselSetUp", ReplyAction="http://tempuri.org/INewsService/UpdateCarouselSetUpResponse")]
        int UpdateCarouselSetUp(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateCarouselSetUp", ReplyAction="http://tempuri.org/INewsService/UpdateCarouselSetUpResponse")]
        System.Threading.Tasks.Task<int> UpdateCarouselSetUpAsync(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCarouselNewsDetail", ReplyAction="http://tempuri.org/INewsService/GetCarouselNewsDetailResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetCarouselNewsDetail(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCarouselNewsDetail", ReplyAction="http://tempuri.org/INewsService/GetCarouselNewsDetailResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetCarouselNewsDetailAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddHomeContent", ReplyAction="http://tempuri.org/INewsService/AddHomeContentResponse")]
        int AddHomeContent(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddHomeContent", ReplyAction="http://tempuri.org/INewsService/AddHomeContentResponse")]
        System.Threading.Tasks.Task<int> AddHomeContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateHomeContent", ReplyAction="http://tempuri.org/INewsService/UpdateHomeContentResponse")]
        int UpdateHomeContent(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateHomeContent", ReplyAction="http://tempuri.org/INewsService/UpdateHomeContentResponse")]
        System.Threading.Tasks.Task<int> UpdateHomeContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetHomeContent", ReplyAction="http://tempuri.org/INewsService/GetHomeContentResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.HomeContent GetHomeContent(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetHomeContent", ReplyAction="http://tempuri.org/INewsService/GetHomeContentResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.HomeContent> GetHomeContentAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllHomeContentByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllHomeContentByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.HomeContent[] GetAllHomeContentByOrganizationID(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllHomeContentByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllHomeContentByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.HomeContent[]> GetAllHomeContentByOrganizationIDAsync(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddEvent", ReplyAction="http://tempuri.org/INewsService/AddEventResponse")]
        int AddEvent(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddEvent", ReplyAction="http://tempuri.org/INewsService/AddEventResponse")]
        System.Threading.Tasks.Task<int> AddEventAsync(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateEvent", ReplyAction="http://tempuri.org/INewsService/UpdateEventResponse")]
        int UpdateEvent(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateEvent", ReplyAction="http://tempuri.org/INewsService/UpdateEventResponse")]
        System.Threading.Tasks.Task<int> UpdateEventAsync(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteEvent", ReplyAction="http://tempuri.org/INewsService/DeleteEventResponse")]
        void DeleteEvent(int evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/DeleteEvent", ReplyAction="http://tempuri.org/INewsService/DeleteEventResponse")]
        System.Threading.Tasks.Task DeleteEventAsync(int evnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllEventsPaged", ReplyAction="http://tempuri.org/INewsService/getAllEventsPagedResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.PagedEvents getAllEventsPaged(int skip, int take, int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/getAllEventsPaged", ReplyAction="http://tempuri.org/INewsService/getAllEventsPagedResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedEvents> getAllEventsPagedAsync(int skip, int take, int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetEventsByEventDateRange", ReplyAction="http://tempuri.org/INewsService/GetEventsByEventDateRangeResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Event[] GetEventsByEventDateRange(System.DateTime startDate, System.DateTime endDate, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetEventsByEventDateRange", ReplyAction="http://tempuri.org/INewsService/GetEventsByEventDateRangeResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Event[]> GetEventsByEventDateRangeAsync(System.DateTime startDate, System.DateTime endDate, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetEventsUpcoming", ReplyAction="http://tempuri.org/INewsService/GetEventsUpcomingResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Event[] GetEventsUpcoming(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetEventsUpcoming", ReplyAction="http://tempuri.org/INewsService/GetEventsUpcomingResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Event[]> GetEventsUpcomingAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/AddIndustryResearchContentResponse")]
        int AddIndustryResearchContent(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/AddIndustryResearchContentResponse")]
        System.Threading.Tasks.Task<int> AddIndustryResearchContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/UpdateIndustryResearchContentResponse")]
        int UpdateIndustryResearchContent(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/UpdateIndustryResearchContentResponse")]
        System.Threading.Tasks.Task<int> UpdateIndustryResearchContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/GetIndustryResearchContentResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch GetIndustryResearchContent(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetIndustryResearchContent", ReplyAction="http://tempuri.org/INewsService/GetIndustryResearchContentResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch> GetIndustryResearchContentAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllIndustryResearchesByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllIndustryResearchesByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch[] GetAllIndustryResearchesByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllIndustryResearchesByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllIndustryResearchesByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch[]> GetAllIndustryResearchesByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddAccreditation", ReplyAction="http://tempuri.org/INewsService/AddAccreditationResponse")]
        int AddAccreditation(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddAccreditation", ReplyAction="http://tempuri.org/INewsService/AddAccreditationResponse")]
        System.Threading.Tasks.Task<int> AddAccreditationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateAccreditation", ReplyAction="http://tempuri.org/INewsService/UpdateAccreditationResponse")]
        int UpdateAccreditation(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateAccreditation", ReplyAction="http://tempuri.org/INewsService/UpdateAccreditationResponse")]
        System.Threading.Tasks.Task<int> UpdateAccreditationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAccreditationAll", ReplyAction="http://tempuri.org/INewsService/GetAccreditationAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Accreditation GetAccreditationAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAccreditationAll", ReplyAction="http://tempuri.org/INewsService/GetAccreditationAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Accreditation> GetAccreditationAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllAccreditationsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllAccreditationsByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Accreditation[] GetAllAccreditationsByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllAccreditationsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllAccreditationsByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Accreditation[]> GetAllAccreditationsByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddCertification", ReplyAction="http://tempuri.org/INewsService/AddCertificationResponse")]
        int AddCertification(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddCertification", ReplyAction="http://tempuri.org/INewsService/AddCertificationResponse")]
        System.Threading.Tasks.Task<int> AddCertificationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateCertification", ReplyAction="http://tempuri.org/INewsService/UpdateCertificationResponse")]
        int UpdateCertification(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateCertification", ReplyAction="http://tempuri.org/INewsService/UpdateCertificationResponse")]
        System.Threading.Tasks.Task<int> UpdateCertificationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCertificationAll", ReplyAction="http://tempuri.org/INewsService/GetCertificationAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Certification GetCertificationAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetCertificationAll", ReplyAction="http://tempuri.org/INewsService/GetCertificationAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Certification> GetCertificationAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllCertificationsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllCertificationsByOrganizationIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.Certification[] GetAllCertificationsByOrganizationID(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllCertificationsByOrganizationID", ReplyAction="http://tempuri.org/INewsService/GetAllCertificationsByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Certification[]> GetAllCertificationsByOrganizationIDAsync(int OrganizationID, int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsLetter", ReplyAction="http://tempuri.org/INewsService/AddNewsLetterResponse")]
        int AddNewsLetter(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddNewsLetter", ReplyAction="http://tempuri.org/INewsService/AddNewsLetterResponse")]
        System.Threading.Tasks.Task<int> AddNewsLetterAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsLetter", ReplyAction="http://tempuri.org/INewsService/UpdateNewsLetterResponse")]
        int UpdateNewsLetter(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateNewsLetter", ReplyAction="http://tempuri.org/INewsService/UpdateNewsLetterResponse")]
        System.Threading.Tasks.Task<int> UpdateNewsLetterAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsLetterAll", ReplyAction="http://tempuri.org/INewsService/GetNewsLetterAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter GetNewsLetterAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsLetterAll", ReplyAction="http://tempuri.org/INewsService/GetNewsLetterAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter> GetNewsLetterAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsLetterByClientID", ReplyAction="http://tempuri.org/INewsService/GetNewsLetterByClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter[] GetNewsLetterByClientID(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetNewsLetterByClientID", ReplyAction="http://tempuri.org/INewsService/GetNewsLetterByClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter[]> GetNewsLetterByClientIDAsync(int clientID, int orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddReturnPolicy", ReplyAction="http://tempuri.org/INewsService/AddReturnPolicyResponse")]
        int AddReturnPolicy(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddReturnPolicy", ReplyAction="http://tempuri.org/INewsService/AddReturnPolicyResponse")]
        System.Threading.Tasks.Task<int> AddReturnPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateReturnPolicy", ReplyAction="http://tempuri.org/INewsService/UpdateReturnPolicyResponse")]
        int UpdateReturnPolicy(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateReturnPolicy", ReplyAction="http://tempuri.org/INewsService/UpdateReturnPolicyResponse")]
        System.Threading.Tasks.Task<int> UpdateReturnPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetReturnPolicyAll", ReplyAction="http://tempuri.org/INewsService/GetReturnPolicyAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy GetReturnPolicyAll(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetReturnPolicyAll", ReplyAction="http://tempuri.org/INewsService/GetReturnPolicyAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy> GetReturnPolicyAllAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetReturnPolicyByID", ReplyAction="http://tempuri.org/INewsService/GetReturnPolicyByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy GetReturnPolicyByID(int ReturnPolicyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetReturnPolicyByID", ReplyAction="http://tempuri.org/INewsService/GetReturnPolicyByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy> GetReturnPolicyByIDAsync(int ReturnPolicyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllReturnPolicysAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllReturnPolicysAccordingToClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy[] GetAllReturnPolicysAccordingToClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllReturnPolicysAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllReturnPolicysAccordingToClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy[]> GetAllReturnPolicysAccordingToClientIDAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddDeliveryTerm", ReplyAction="http://tempuri.org/INewsService/AddDeliveryTermResponse")]
        int AddDeliveryTerm(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/AddDeliveryTerm", ReplyAction="http://tempuri.org/INewsService/AddDeliveryTermResponse")]
        System.Threading.Tasks.Task<int> AddDeliveryTermAsync(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateDeliveryTerm", ReplyAction="http://tempuri.org/INewsService/UpdateDeliveryTermResponse")]
        int UpdateDeliveryTerm(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/UpdateDeliveryTerm", ReplyAction="http://tempuri.org/INewsService/UpdateDeliveryTermResponse")]
        System.Threading.Tasks.Task<int> UpdateDeliveryTermAsync(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDeliveryTermAll", ReplyAction="http://tempuri.org/INewsService/GetDeliveryTermAllResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm GetDeliveryTermAll(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDeliveryTermAll", ReplyAction="http://tempuri.org/INewsService/GetDeliveryTermAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm> GetDeliveryTermAllAsync(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDeliveryTermByID", ReplyAction="http://tempuri.org/INewsService/GetDeliveryTermByIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm GetDeliveryTermByID(int DeliveryTermID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetDeliveryTermByID", ReplyAction="http://tempuri.org/INewsService/GetDeliveryTermByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm> GetDeliveryTermByIDAsync(int DeliveryTermID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllDeliveryTermsAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllDeliveryTermsAccordingToClientIDResponse")]
        HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm[] GetAllDeliveryTermsAccordingToClientID(int ClientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsService/GetAllDeliveryTermsAccordingToClientID", ReplyAction="http://tempuri.org/INewsService/GetAllDeliveryTermsAccordingToClientIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm[]> GetAllDeliveryTermsAccordingToClientIDAsync(int ClientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsServiceChannel : HCRGUniversityMgtApp.NEPService.NewsService.INewsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsServiceClient : System.ServiceModel.ClientBase<HCRGUniversityMgtApp.NEPService.NewsService.INewsService>, HCRGUniversityMgtApp.NEPService.NewsService.INewsService {
        
        public NewsServiceClient() {
        }
        
        public NewsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddNewsSection(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection) {
            return base.Channel.AddNewsSection(newsSection);
        }
        
        public System.Threading.Tasks.Task<int> AddNewsSectionAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection) {
            return base.Channel.AddNewsSectionAsync(newsSection);
        }
        
        public int UpdateNewsSection(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection) {
            return base.Channel.UpdateNewsSection(newsSection);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNewsSectionAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsSection newsSection) {
            return base.Channel.UpdateNewsSectionAsync(newsSection);
        }
        
        public void DeleteNewsSection(int newsSectionID) {
            base.Channel.DeleteNewsSection(newsSectionID);
        }
        
        public System.Threading.Tasks.Task DeleteNewsSectionAsync(int newsSectionID) {
            return base.Channel.DeleteNewsSectionAsync(newsSectionID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsSection GetNewsSectionByID(int newsSectionID) {
            return base.Channel.GetNewsSectionByID(newsSectionID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSection> GetNewsSectionByIDAsync(int newsSectionID) {
            return base.Channel.GetNewsSectionByIDAsync(newsSectionID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsSection[] getAllNewsSection(int OrganizationID) {
            return base.Channel.getAllNewsSection(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSection[]> getAllNewsSectionAsync(int OrganizationID) {
            return base.Channel.getAllNewsSectionAsync(OrganizationID);
        }
        
        public int AddNews(HCRGUniversityMgtApp.NEPService.NewsService.News news) {
            return base.Channel.AddNews(news);
        }
        
        public System.Threading.Tasks.Task<int> AddNewsAsync(HCRGUniversityMgtApp.NEPService.NewsService.News news) {
            return base.Channel.AddNewsAsync(news);
        }
        
        public int UpdateNews(HCRGUniversityMgtApp.NEPService.NewsService.News news) {
            return base.Channel.UpdateNews(news);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNewsAsync(HCRGUniversityMgtApp.NEPService.NewsService.News news) {
            return base.Channel.UpdateNewsAsync(news);
        }
        
        public void DeleteNews(int newsID) {
            base.Channel.DeleteNews(newsID);
        }
        
        public System.Threading.Tasks.Task DeleteNewsAsync(int newsID) {
            return base.Channel.DeleteNewsAsync(newsID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.News GetNewsByID(int newsID) {
            return base.Channel.GetNewsByID(newsID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News> GetNewsByIDAsync(int newsID) {
            return base.Channel.GetNewsByIDAsync(newsID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.News[] getAllNews(int OrganizationID) {
            return base.Channel.getAllNews(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> getAllNewsAsync(int OrganizationID) {
            return base.Channel.getAllNewsAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedNews GetNewsByNewsTitlePaged(string newsTitle, int _organizationID, int skip, int take) {
            return base.Channel.GetNewsByNewsTitlePaged(newsTitle, _organizationID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNews> GetNewsByNewsTitlePagedAsync(string newsTitle, int _organizationID, int skip, int take) {
            return base.Channel.GetNewsByNewsTitlePagedAsync(newsTitle, _organizationID, skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetail(string type, int skip, int take, int OrganizationID) {
            return base.Channel.GetAllNewsDetail(type, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailAsync(string type, int skip, int take, int OrganizationID) {
            return base.Channel.GetAllNewsDetailAsync(type, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[] GetNewsDetailByNewsID(int newsID, string type) {
            return base.Channel.GetNewsDetailByNewsID(newsID, type);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsFullDetail[]> GetNewsDetailByNewsIDAsync(int newsID, string type) {
            return base.Channel.GetNewsDetailByNewsIDAsync(newsID, type);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetailByNewsSectionID(int newsSectionID, int skip, int take) {
            return base.Channel.GetAllNewsDetailByNewsSectionID(newsSectionID, skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailByNewsSectionIDAsync(int newsSectionID, int skip, int take) {
            return base.Channel.GetAllNewsDetailByNewsSectionIDAsync(newsSectionID, skip, take);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail GetAllNewsDetailByNewsSectionIDAndType(string type, int newsSectionID, int skip, int take, int OrganizationID) {
            return base.Channel.GetAllNewsDetailByNewsSectionIDAndType(type, newsSectionID, skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNewsDetail> GetAllNewsDetailByNewsSectionIDAndTypeAsync(string type, int newsSectionID, int skip, int take, int OrganizationID) {
            return base.Channel.GetAllNewsDetailByNewsSectionIDAndTypeAsync(type, newsSectionID, skip, take, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.News[] GetNewslatest(int OrganizationID) {
            return base.Channel.GetNewslatest(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> GetNewslatestAsync(int OrganizationID) {
            return base.Channel.GetNewslatestAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.News[] GetAllNewsByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllNewsByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.News[]> GetAllNewsByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllNewsByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddNewsPhoto(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto) {
            return base.Channel.AddNewsPhoto(newsPhoto);
        }
        
        public System.Threading.Tasks.Task<int> AddNewsPhotoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto) {
            return base.Channel.AddNewsPhotoAsync(newsPhoto);
        }
        
        public int UpdateNewsPhoto(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto) {
            return base.Channel.UpdateNewsPhoto(newsPhoto);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNewsPhotoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto newsPhoto) {
            return base.Channel.UpdateNewsPhotoAsync(newsPhoto);
        }
        
        public void DeleteNewsPhoto(int newsPhotoID) {
            base.Channel.DeleteNewsPhoto(newsPhotoID);
        }
        
        public System.Threading.Tasks.Task DeleteNewsPhotoAsync(int newsPhotoID) {
            return base.Channel.DeleteNewsPhotoAsync(newsPhotoID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto GetNewsPhotoByID(int newsPhotoID) {
            return base.Channel.GetNewsPhotoByID(newsPhotoID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto> GetNewsPhotoByIDAsync(int newsPhotoID) {
            return base.Channel.GetNewsPhotoByIDAsync(newsPhotoID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[] getAllNewsPhoto() {
            return base.Channel.getAllNewsPhoto();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[]> getAllNewsPhotoAsync() {
            return base.Channel.getAllNewsPhotoAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[] getAllNewsPhotoByNewsID(int newsID) {
            return base.Channel.getAllNewsPhotoByNewsID(newsID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsPhoto[]> getAllNewsPhotoByNewsIDAsync(int newsID) {
            return base.Channel.getAllNewsPhotoByNewsIDAsync(newsID);
        }
        
        public int AddNewsVideo(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo) {
            return base.Channel.AddNewsVideo(newsVideo);
        }
        
        public System.Threading.Tasks.Task<int> AddNewsVideoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo) {
            return base.Channel.AddNewsVideoAsync(newsVideo);
        }
        
        public int UpdateNewsVideo(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo) {
            return base.Channel.UpdateNewsVideo(newsVideo);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNewsVideoAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo newsVideo) {
            return base.Channel.UpdateNewsVideoAsync(newsVideo);
        }
        
        public void DeleteNewsVideo(int newsVideoID) {
            base.Channel.DeleteNewsVideo(newsVideoID);
        }
        
        public System.Threading.Tasks.Task DeleteNewsVideoAsync(int newsVideoID) {
            return base.Channel.DeleteNewsVideoAsync(newsVideoID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo GetNewsVideoByID(int newsVideoID) {
            return base.Channel.GetNewsVideoByID(newsVideoID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo> GetNewsVideoByIDAsync(int newsVideoID) {
            return base.Channel.GetNewsVideoByIDAsync(newsVideoID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo[] getAllNewsVideo() {
            return base.Channel.getAllNewsVideo();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo[]> getAllNewsVideoAsync() {
            return base.Channel.getAllNewsVideoAsync();
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo GetNewsVideoByNewsID(int newsID) {
            return base.Channel.GetNewsVideoByNewsID(newsID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsVideo> GetNewsVideoByNewsIDAsync(int newsID) {
            return base.Channel.GetNewsVideoByNewsIDAsync(newsID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Resource[] getAllResource(int OrganizationID) {
            return base.Channel.getAllResource(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Resource[]> getAllResourceAsync(int OrganizationID) {
            return base.Channel.getAllResourceAsync(OrganizationID);
        }
        
        public int AddTrainingAndSeminar(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar) {
            return base.Channel.AddTrainingAndSeminar(_trainingAndSeminar);
        }
        
        public System.Threading.Tasks.Task<int> AddTrainingAndSeminarAsync(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar) {
            return base.Channel.AddTrainingAndSeminarAsync(_trainingAndSeminar);
        }
        
        public int UpdateTrainingAndSeminar(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar) {
            return base.Channel.UpdateTrainingAndSeminar(_trainingAndSeminar);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTrainingAndSeminarAsync(HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar _trainingAndSeminar) {
            return base.Channel.UpdateTrainingAndSeminarAsync(_trainingAndSeminar);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar GetTrainingAndSeminarAll(int OrganizationID) {
            return base.Channel.GetTrainingAndSeminarAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar> GetTrainingAndSeminarAllAsync(int OrganizationID) {
            return base.Channel.GetTrainingAndSeminarAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar[] GetAllTrainingAndSeminarByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllTrainingAndSeminarByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TrainingAndSeminar[]> GetAllTrainingAndSeminarByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllTrainingAndSeminarByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddPrivacyPolicy(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy) {
            return base.Channel.AddPrivacyPolicy(_privacy);
        }
        
        public System.Threading.Tasks.Task<int> AddPrivacyPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy) {
            return base.Channel.AddPrivacyPolicyAsync(_privacy);
        }
        
        public int UpdatePrivacyPolicy(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy) {
            return base.Channel.UpdatePrivacyPolicy(_privacy);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePrivacyPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy _privacy) {
            return base.Channel.UpdatePrivacyPolicyAsync(_privacy);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy GetPrivacyPolicyAll(int ClientID) {
            return base.Channel.GetPrivacyPolicyAll(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy> GetPrivacyPolicyAllAsync(int ClientID) {
            return base.Channel.GetPrivacyPolicyAllAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy GetPrivacyPolicyByID(int PrivacyPolicyID) {
            return base.Channel.GetPrivacyPolicyByID(PrivacyPolicyID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy> GetPrivacyPolicyByIDAsync(int PrivacyPolicyID) {
            return base.Channel.GetPrivacyPolicyByIDAsync(PrivacyPolicyID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy[] GetAllPrivacyPolicyAccordingToOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllPrivacyPolicyAccordingToOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PrivacyPolicy[]> GetAllPrivacyPolicyAccordingToOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllPrivacyPolicyAccordingToOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddTermsCondition(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition) {
            return base.Channel.AddTermsCondition(_termsCondition);
        }
        
        public System.Threading.Tasks.Task<int> AddTermsConditionAsync(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition) {
            return base.Channel.AddTermsConditionAsync(_termsCondition);
        }
        
        public int UpdateTermsCondition(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition) {
            return base.Channel.UpdateTermsCondition(_termsCondition);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTermsConditionAsync(HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition _termsCondition) {
            return base.Channel.UpdateTermsConditionAsync(_termsCondition);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition GetTermsConditionAll(int ClientID) {
            return base.Channel.GetTermsConditionAll(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition> GetTermsConditionAllAsync(int ClientID) {
            return base.Channel.GetTermsConditionAllAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition GetTermsConditionByID(int TermsConditionID) {
            return base.Channel.GetTermsConditionByID(TermsConditionID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition> GetTermsConditionByIDAsync(int TermsConditionID) {
            return base.Channel.GetTermsConditionByIDAsync(TermsConditionID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition[] GetAllTermAndConditionsAccordingToClientID(int ClientID) {
            return base.Channel.GetAllTermAndConditionsAccordingToClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.TermsCondition[]> GetAllTermAndConditionsAccordingToClientIDAsync(int ClientID) {
            return base.Channel.GetAllTermAndConditionsAccordingToClientIDAsync(ClientID);
        }
        
        public int AddFAQ(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq) {
            return base.Channel.AddFAQ(faq);
        }
        
        public System.Threading.Tasks.Task<int> AddFAQAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq) {
            return base.Channel.AddFAQAsync(faq);
        }
        
        public int UpdateFAQ(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq) {
            return base.Channel.UpdateFAQ(faq);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFAQAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQ faq) {
            return base.Channel.UpdateFAQAsync(faq);
        }
        
        public void DeleteFAQ(int faqID) {
            base.Channel.DeleteFAQ(faqID);
        }
        
        public System.Threading.Tasks.Task DeleteFAQAsync(int faqID) {
            return base.Channel.DeleteFAQAsync(faqID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQ GetFAQByID(int faqID) {
            return base.Channel.GetFAQByID(faqID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ> GetFAQByIDAsync(int faqID) {
            return base.Channel.GetFAQByIDAsync(faqID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] getAllFAQ(int ClientID) {
            return base.Channel.getAllFAQ(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> getAllFAQAsync(int ClientID) {
            return base.Channel.getAllFAQAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] GetAllFAQAccordingToOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllFAQAccordingToOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> GetAllFAQAccordingToOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllFAQAccordingToOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddFAQCategory(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory) {
            return base.Channel.AddFAQCategory(faqCategory);
        }
        
        public System.Threading.Tasks.Task<int> AddFAQCategoryAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory) {
            return base.Channel.AddFAQCategoryAsync(faqCategory);
        }
        
        public int UpdateFAQCategory(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory) {
            return base.Channel.UpdateFAQCategory(faqCategory);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFAQCategoryAsync(HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory faqCategory) {
            return base.Channel.UpdateFAQCategoryAsync(faqCategory);
        }
        
        public void DeleteFAQCategory(int faqCatID) {
            base.Channel.DeleteFAQCategory(faqCatID);
        }
        
        public System.Threading.Tasks.Task DeleteFAQCategoryAsync(int faqCatID) {
            return base.Channel.DeleteFAQCategoryAsync(faqCatID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory GetFAQCategoryByID(int faqCatID) {
            return base.Channel.GetFAQCategoryByID(faqCatID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory> GetFAQCategoryByIDAsync(int faqCatID) {
            return base.Channel.GetFAQCategoryByIDAsync(faqCatID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory[] GetAllFAQCategoriesAccordingToOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllFAQCategoriesAccordingToOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQCategory[]> GetAllFAQCategoriesAccordingToOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllFAQCategoriesAccordingToOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.FAQ[] GetFAQByCatID(int faqCatID) {
            return base.Channel.GetFAQByCatID(faqCatID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.FAQ[]> GetFAQByCatIDAsync(int faqCatID) {
            return base.Channel.GetFAQByCatIDAsync(faqCatID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedNews GetAllPagedNews(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedNews(skip, take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedNews> GetAllPagedNewsAsync(int skip, int take, int OrganizationID) {
            return base.Channel.GetAllPagedNewsAsync(skip, take, OrganizationID);
        }
        
        public int AddCarouselSetup(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp) {
            return base.Channel.AddCarouselSetup(carouselSetUp);
        }
        
        public System.Threading.Tasks.Task<int> AddCarouselSetupAsync(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp) {
            return base.Channel.AddCarouselSetupAsync(carouselSetUp);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetCarouselSetUpAll(int OrganizationID) {
            return base.Channel.GetCarouselSetUpAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetCarouselSetUpAllAsync(int OrganizationID) {
            return base.Channel.GetCarouselSetUpAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetAllCarouselSetUp(int OrganizationID, int ClientID) {
            return base.Channel.GetAllCarouselSetUp(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetAllCarouselSetUpAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllCarouselSetUpAsync(OrganizationID, ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsSearchCarousel[] GetNewsDetailsAccordingToNewsSearch(string SearchText, int OrganizationID) {
            return base.Channel.GetNewsDetailsAccordingToNewsSearch(SearchText, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsSearchCarousel[]> GetNewsDetailsAccordingToNewsSearchAsync(string SearchText, int OrganizationID) {
            return base.Channel.GetNewsDetailsAccordingToNewsSearchAsync(SearchText, OrganizationID);
        }
        
        public int UpdateCarouselSetUp(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp) {
            return base.Channel.UpdateCarouselSetUp(carouselSetUp);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCarouselSetUpAsync(HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp carouselSetUp) {
            return base.Channel.UpdateCarouselSetUpAsync(carouselSetUp);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[] GetCarouselNewsDetail(int OrganizationID) {
            return base.Channel.GetCarouselNewsDetail(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.CarouselSetUp[]> GetCarouselNewsDetailAsync(int OrganizationID) {
            return base.Channel.GetCarouselNewsDetailAsync(OrganizationID);
        }
        
        public int AddHomeContent(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent) {
            return base.Channel.AddHomeContent(homeContent);
        }
        
        public System.Threading.Tasks.Task<int> AddHomeContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent) {
            return base.Channel.AddHomeContentAsync(homeContent);
        }
        
        public int UpdateHomeContent(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent) {
            return base.Channel.UpdateHomeContent(homeContent);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHomeContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.HomeContent homeContent) {
            return base.Channel.UpdateHomeContentAsync(homeContent);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.HomeContent GetHomeContent(int OrganizationID) {
            return base.Channel.GetHomeContent(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.HomeContent> GetHomeContentAsync(int OrganizationID) {
            return base.Channel.GetHomeContentAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.HomeContent[] GetAllHomeContentByOrganizationID(int clientID, int orgID) {
            return base.Channel.GetAllHomeContentByOrganizationID(clientID, orgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.HomeContent[]> GetAllHomeContentByOrganizationIDAsync(int clientID, int orgID) {
            return base.Channel.GetAllHomeContentByOrganizationIDAsync(clientID, orgID);
        }
        
        public int AddEvent(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt) {
            return base.Channel.AddEvent(evnt);
        }
        
        public System.Threading.Tasks.Task<int> AddEventAsync(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt) {
            return base.Channel.AddEventAsync(evnt);
        }
        
        public int UpdateEvent(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt) {
            return base.Channel.UpdateEvent(evnt);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEventAsync(HCRGUniversityMgtApp.NEPService.NewsService.Event evnt) {
            return base.Channel.UpdateEventAsync(evnt);
        }
        
        public void DeleteEvent(int evnt) {
            base.Channel.DeleteEvent(evnt);
        }
        
        public System.Threading.Tasks.Task DeleteEventAsync(int evnt) {
            return base.Channel.DeleteEventAsync(evnt);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.PagedEvents getAllEventsPaged(int skip, int take, int clientID, int orgID) {
            return base.Channel.getAllEventsPaged(skip, take, clientID, orgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.PagedEvents> getAllEventsPagedAsync(int skip, int take, int clientID, int orgID) {
            return base.Channel.getAllEventsPagedAsync(skip, take, clientID, orgID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Event[] GetEventsByEventDateRange(System.DateTime startDate, System.DateTime endDate, int OrganizationID) {
            return base.Channel.GetEventsByEventDateRange(startDate, endDate, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Event[]> GetEventsByEventDateRangeAsync(System.DateTime startDate, System.DateTime endDate, int OrganizationID) {
            return base.Channel.GetEventsByEventDateRangeAsync(startDate, endDate, OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Event[] GetEventsUpcoming(int OrganizationID) {
            return base.Channel.GetEventsUpcoming(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Event[]> GetEventsUpcomingAsync(int OrganizationID) {
            return base.Channel.GetEventsUpcomingAsync(OrganizationID);
        }
        
        public int AddIndustryResearchContent(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent) {
            return base.Channel.AddIndustryResearchContent(industryResearchContent);
        }
        
        public System.Threading.Tasks.Task<int> AddIndustryResearchContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent) {
            return base.Channel.AddIndustryResearchContentAsync(industryResearchContent);
        }
        
        public int UpdateIndustryResearchContent(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent) {
            return base.Channel.UpdateIndustryResearchContent(industryResearchContent);
        }
        
        public System.Threading.Tasks.Task<int> UpdateIndustryResearchContentAsync(HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch industryResearchContent) {
            return base.Channel.UpdateIndustryResearchContentAsync(industryResearchContent);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch GetIndustryResearchContent(int OrganizationID) {
            return base.Channel.GetIndustryResearchContent(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch> GetIndustryResearchContentAsync(int OrganizationID) {
            return base.Channel.GetIndustryResearchContentAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch[] GetAllIndustryResearchesByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllIndustryResearchesByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.IndustryResearch[]> GetAllIndustryResearchesByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllIndustryResearchesByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddAccreditation(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation) {
            return base.Channel.AddAccreditation(_accreditation);
        }
        
        public System.Threading.Tasks.Task<int> AddAccreditationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation) {
            return base.Channel.AddAccreditationAsync(_accreditation);
        }
        
        public int UpdateAccreditation(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation) {
            return base.Channel.UpdateAccreditation(_accreditation);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccreditationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Accreditation _accreditation) {
            return base.Channel.UpdateAccreditationAsync(_accreditation);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Accreditation GetAccreditationAll(int OrganizationID) {
            return base.Channel.GetAccreditationAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Accreditation> GetAccreditationAllAsync(int OrganizationID) {
            return base.Channel.GetAccreditationAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Accreditation[] GetAllAccreditationsByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllAccreditationsByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Accreditation[]> GetAllAccreditationsByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllAccreditationsByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddCertification(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification) {
            return base.Channel.AddCertification(_Certification);
        }
        
        public System.Threading.Tasks.Task<int> AddCertificationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification) {
            return base.Channel.AddCertificationAsync(_Certification);
        }
        
        public int UpdateCertification(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification) {
            return base.Channel.UpdateCertification(_Certification);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCertificationAsync(HCRGUniversityMgtApp.NEPService.NewsService.Certification _Certification) {
            return base.Channel.UpdateCertificationAsync(_Certification);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Certification GetCertificationAll(int OrganizationID) {
            return base.Channel.GetCertificationAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Certification> GetCertificationAllAsync(int OrganizationID) {
            return base.Channel.GetCertificationAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.Certification[] GetAllCertificationsByOrganizationID(int OrganizationID, int ClientID) {
            return base.Channel.GetAllCertificationsByOrganizationID(OrganizationID, ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.Certification[]> GetAllCertificationsByOrganizationIDAsync(int OrganizationID, int ClientID) {
            return base.Channel.GetAllCertificationsByOrganizationIDAsync(OrganizationID, ClientID);
        }
        
        public int AddNewsLetter(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter) {
            return base.Channel.AddNewsLetter(_newsLetter);
        }
        
        public System.Threading.Tasks.Task<int> AddNewsLetterAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter) {
            return base.Channel.AddNewsLetterAsync(_newsLetter);
        }
        
        public int UpdateNewsLetter(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter) {
            return base.Channel.UpdateNewsLetter(_newsLetter);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNewsLetterAsync(HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter _newsLetter) {
            return base.Channel.UpdateNewsLetterAsync(_newsLetter);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter GetNewsLetterAll(int OrganizationID) {
            return base.Channel.GetNewsLetterAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter> GetNewsLetterAllAsync(int OrganizationID) {
            return base.Channel.GetNewsLetterAllAsync(OrganizationID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter[] GetNewsLetterByClientID(int clientID, int orgID) {
            return base.Channel.GetNewsLetterByClientID(clientID, orgID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.NewsLetter[]> GetNewsLetterByClientIDAsync(int clientID, int orgID) {
            return base.Channel.GetNewsLetterByClientIDAsync(clientID, orgID);
        }
        
        public int AddReturnPolicy(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy) {
            return base.Channel.AddReturnPolicy(_returnPolicy);
        }
        
        public System.Threading.Tasks.Task<int> AddReturnPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy) {
            return base.Channel.AddReturnPolicyAsync(_returnPolicy);
        }
        
        public int UpdateReturnPolicy(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy) {
            return base.Channel.UpdateReturnPolicy(_returnPolicy);
        }
        
        public System.Threading.Tasks.Task<int> UpdateReturnPolicyAsync(HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy _returnPolicy) {
            return base.Channel.UpdateReturnPolicyAsync(_returnPolicy);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy GetReturnPolicyAll(int ClientID) {
            return base.Channel.GetReturnPolicyAll(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy> GetReturnPolicyAllAsync(int ClientID) {
            return base.Channel.GetReturnPolicyAllAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy GetReturnPolicyByID(int ReturnPolicyID) {
            return base.Channel.GetReturnPolicyByID(ReturnPolicyID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy> GetReturnPolicyByIDAsync(int ReturnPolicyID) {
            return base.Channel.GetReturnPolicyByIDAsync(ReturnPolicyID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy[] GetAllReturnPolicysAccordingToClientID(int ClientID) {
            return base.Channel.GetAllReturnPolicysAccordingToClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.ReturnPolicy[]> GetAllReturnPolicysAccordingToClientIDAsync(int ClientID) {
            return base.Channel.GetAllReturnPolicysAccordingToClientIDAsync(ClientID);
        }
        
        public int AddDeliveryTerm(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm) {
            return base.Channel.AddDeliveryTerm(_deliveryTerm);
        }
        
        public System.Threading.Tasks.Task<int> AddDeliveryTermAsync(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm) {
            return base.Channel.AddDeliveryTermAsync(_deliveryTerm);
        }
        
        public int UpdateDeliveryTerm(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm) {
            return base.Channel.UpdateDeliveryTerm(_deliveryTerm);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDeliveryTermAsync(HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm _deliveryTerm) {
            return base.Channel.UpdateDeliveryTermAsync(_deliveryTerm);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm GetDeliveryTermAll(int ClientID) {
            return base.Channel.GetDeliveryTermAll(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm> GetDeliveryTermAllAsync(int ClientID) {
            return base.Channel.GetDeliveryTermAllAsync(ClientID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm GetDeliveryTermByID(int DeliveryTermID) {
            return base.Channel.GetDeliveryTermByID(DeliveryTermID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm> GetDeliveryTermByIDAsync(int DeliveryTermID) {
            return base.Channel.GetDeliveryTermByIDAsync(DeliveryTermID);
        }
        
        public HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm[] GetAllDeliveryTermsAccordingToClientID(int ClientID) {
            return base.Channel.GetAllDeliveryTermsAccordingToClientID(ClientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityMgtApp.NEPService.NewsService.DeliveryTerm[]> GetAllDeliveryTermsAccordingToClientIDAsync(int ClientID) {
            return base.Channel.GetAllDeliveryTermsAccordingToClientIDAsync(ClientID);
        }
    }
}
