<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="StoragePath" value="~/Storage" />
    <add key="Client_id" value="thaw-bode-natal" />
    <add key="Auth_Token" value="pVG61sgUDze-x1Uu8m2Q" />
    <add key="RTE.AjaxUploader.UploadSpeedKB" value="500" />
    <add key="RTE.ImageEditor.TempFolder" value="~/rtetemp" />
    <add key="RichTextEditorLicense" value="\\corpsrvr\RichTextEditor\richtexteditor.lic" />
    <add key="HomeURL" value="http://universitydev.medspectra.com" />
    <add key="OrganizationID" value="1" />
    <add key="StdLoginUrl" value="http://192.168.2.150:100" />
    <add key="UserPortalURL" value="localhost:93" />
    <!--Email Settings-->
    <add key="FromAddress" value="software@hcrg.com" />
    <add key="SMTPServer" value="smtp.office365.com" />
    <add key="MailUserName" value="software@hcrg.com" />
    <add key="MailPassword" value="Cuxo9003" />
    <add key="MailPort" value="587" />
    <!--Email Settings-->
    <!--URL Settings-->
    <add key="ReSetUrl" value="http://localhost:97/" />
    <!--URL Settings-->
  </appSettings>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="IUserService" type="HCRGUniversityMgtApp.NEPService.UserService.IUserService, HCRGUniversityMgtApp" />
      <typeAlias alias="UserService" type="HCRGUniversityMgtApp.NEPService.UserService.UserServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IEMail" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts.IEMail, HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="EMailService" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.EMailService, HCRGUniversityMgtApp.Infrastructure.ApplicationServices" />
      <typeAlias alias="IEncryption" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts.IEncryption, HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="EncryptionService" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.EncryptionService, HCRGUniversityMgtApp.Infrastructure.ApplicationServices" />
      <typeAlias alias="IStorage" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts.IStorage, HCRGUniversityMgtApp.Infrastructure.ApplicationServices.Contracts" />
      <typeAlias alias="StorageService" type="HCRGUniversityMgtApp.Infrastructure.ApplicationServices.StorageService, HCRGUniversityMgtApp.Infrastructure.ApplicationServices" />
      <typeAlias alias="IAboutUsService" type="HCRGUniversityMgtApp.NEPService.AboutUsService.IAboutUsService, HCRGUniversityMgtApp" />
      <typeAlias alias="AboutUsService" type="HCRGUniversityMgtApp.NEPService.AboutUsService.AboutUsServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="ICollegeService" type="HCRGUniversityMgtApp.NEPService.CollegeService.ICollegeService, HCRGUniversityMgtApp" />
      <typeAlias alias="CollegeService" type="HCRGUniversityMgtApp.NEPService.CollegeService.CollegeServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IEducationService" type="HCRGUniversityMgtApp.NEPService.EducationService.IEducationService, HCRGUniversityMgtApp" />
      <typeAlias alias="EducationService" type="HCRGUniversityMgtApp.NEPService.EducationService.EducationServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IDiscountCouponService" type="HCRGUniversityMgtApp.NEPService.DiscountCouponService.IDiscountCouponService, HCRGUniversityMgtApp" />
      <typeAlias alias="DiscountCouponService" type="HCRGUniversityMgtApp.NEPService.DiscountCouponService.DiscountCouponServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="INewsService" type="HCRGUniversityMgtApp.NEPService.NewsService.INewsService, HCRGUniversityMgtApp" />
      <typeAlias alias="NewsService" type="HCRGUniversityMgtApp.NEPService.NewsService.NewsServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IEducationModuleService" type="HCRGUniversityMgtApp.NEPService.EducationModuleService.IEducationModuleService, HCRGUniversityMgtApp" />
      <typeAlias alias="EducationModuleService" type="HCRGUniversityMgtApp.NEPService.EducationModuleService.EducationModuleServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IExamQuestionService" type="HCRGUniversityMgtApp.NEPService.ExamQuestionService.IExamQuestionService, HCRGUniversityMgtApp" />
      <typeAlias alias="ExamQuestionService" type="HCRGUniversityMgtApp.NEPService.ExamQuestionService.ExamQuestionServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="ILogSessionService" type="HCRGUniversityMgtApp.NEPService.LogSessionService.ILogSessionService, HCRGUniversityMgtApp" />
      <typeAlias alias="LogSessionService" type="HCRGUniversityMgtApp.NEPService.LogSessionService.LogSessionServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IProductService" type="HCRGUniversityMgtApp.NEPService.ProductService.IProductService, HCRGUniversityMgtApp" />
      <typeAlias alias="ProductService" type="HCRGUniversityMgtApp.NEPService.ProductService.ProductServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="ICommonService" type="HCRGUniversityMgtApp.NEPService.CommonService.ICommonService, HCRGUniversityMgtApp" />
      <typeAlias alias="CommonService" type="HCRGUniversityMgtApp.NEPService.CommonService.CommonServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="ICertificationTitleOptionService" type="HCRGUniversityMgtApp.NEPService.CertificationTitleOptionService.ICertificationTitleOptionService, HCRGUniversityMgtApp" />
      <typeAlias alias="CertificationTitleOptionService" type="HCRGUniversityMgtApp.NEPService.CertificationTitleOptionService.CertificationTitleOptionServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IClientService" type="HCRGUniversityMgtApp.NEPService.ClientService.IClientService, HCRGUniversityMgtApp" />
      <typeAlias alias="ClientService" type="HCRGUniversityMgtApp.NEPService.ClientService.ClientServiceClient, HCRGUniversityMgtApp" />
      <typeAlias alias="IPlanService" type="HCRGUniversityMgtApp.NEPService.PlanService.IPlanService, HCRGUniversityMgtApp" />
      <typeAlias alias="PlanService" type="HCRGUniversityMgtApp.NEPService.PlanService.PlanServiceClient, HCRGUniversityMgtApp" />
      <!--<typeAlias alias="ILogSessionService" type="HCRGUniversityMgtApp.NEPService.LogSessionService.ILogSessionService, HCRGUniversityMgtApp" />
      <typeAlias alias="LogSessionService" type="HCRGUniversityMgtApp.NEPService.LogSessionService.LogSessionServiceClient, HCRGUniversityMgtApp" />-->
    </typeAliases>
    <containers>
      <container name="">
        <types>
          <type type="IUserService" mapTo="UserService">
            <constructor />
          </type>
          <type type="IEncryption" mapTo="EncryptionService">
            <constructor />
          </type>
          <type type="IAboutUsService" mapTo="AboutUsService">
            <constructor />
          </type>
          <type type="ICollegeService" mapTo="CollegeService">
            <constructor />
          </type>
          <type type="IEMail" mapTo="EMailService">
            <constructor />
          </type>
          <type type="IEducationService" mapTo="EducationService">
            <constructor />
          </type>
          <type type="IDiscountCouponService" mapTo="DiscountCouponService">
            <constructor />
          </type>
          <type type="INewsService" mapTo="NewsService">
            <constructor />
          </type>
          <type type="IEducationModuleService" mapTo="EducationModuleService">
            <constructor />
          </type>
          <type type="IStorage" mapTo="StorageService">
            <constructor />
          </type>
          <type type="IExamQuestionService" mapTo="ExamQuestionService">
            <constructor />
          </type>
          <type type="ILogSessionService" mapTo="LogSessionService">
            <constructor />
          </type>
          <type type="IProductService" mapTo="ProductService">
            <constructor />
          </type>
          <type type="ICommonService" mapTo="CommonService">
            <constructor />
          </type>
          <type type="ICertificationTitleOptionService" mapTo="CertificationTitleOptionService">
            <constructor />
          </type>
          <type type="IClientService" mapTo="ClientService">
            <constructor />
          </type>
          <type type="IPlanService" mapTo="PlanService">
            <constructor />
          </type>
          <!--<type type="ILogSessionService" mapTo="LogSessionService">
            <constructor />
          </type>-->
        </types>
      </container>
    </containers>
  </unity>
  <system.web>
    <sessionState mode="SQLServer" sqlConnectionString="Data Source=VSA-SAT-DB1\SQL2K14;Initial Catalog=NEPSessionStateDB;User ID=uttam;                   Password=uttam;Connect Timeout=30;MultipleActiveResultSets=False;" cookieless="false" timeout="30" allowCustomSqlDatabase="true"></sessionState>
    <globalization uiCulture="es" culture="es-US" />
    <compilation debug="true" targetFramework="4.6.1" />
    <httpRuntime targetFramework="4.6.1" maxRequestLength="1048576" />
    <authentication mode="Forms">
      <forms loginUrl="~/Login/Index" timeout="2880" />
    </authentication>
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <!--<httpRuntime enableVersionHeader="false" />-->
  </system.web>
  <system.web.extensions>
    <scripting>
      <webServices>
        <jsonSerialization maxJsonLength="1000000000" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules>
      <remove name="ScriptModule" />
      <remove name="UrlRoutingModule" />
      <remove name="UploadModule" />
      <add name="UploadModule" type="RTE.UploadModule,RichTextEditor" />
    </modules>
    <httpProtocol>
      <customHeaders>
        <remove name="X-Powered-By" />
        <add name="X-XSS-Protection" value="1; mode=block" />
        <add name="X-Content-Type-Options" value="nosniff" />
      </customHeaders>
    </httpProtocol>
    <staticContent>
      <!--<mimeMap fileExtension=".mp4" mimeType="video/mp4" />-->
      <mimeMap fileExtension=".license" mimeType="application/octet-stream" />
      <mimeMap fileExtension=".lic" mimeType="application/octet-stream" />
    </staticContent>
    <security>
      <requestFiltering allowDoubleEscaping="true">
        <requestLimits maxAllowedContentLength="2147483648" />
      </requestFiltering>
    </security>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Extensions" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.2.29.0" newVersion="2.2.29.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Primitives" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.2.29.0" newVersion="4.2.29.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebMatrix.Data" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.2.0" newVersion="5.2.2.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IAboutUsService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_ICertificationTitleOptionService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_ICollegeService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_ICommonService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IDiscountCouponService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IEducationModuleService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IEducationService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IExamQuestionService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_ILogSessionService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_INewsService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IProductService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IUserService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IClientService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
        <binding name="BasicHttpBinding_IPlanService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/AboutUsService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAboutUsService" contract="NEPService.AboutUsService.IAboutUsService" name="BasicHttpBinding_IAboutUsService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/CertificationTitleOptionService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICertificationTitleOptionService" contract="NEPService.CertificationTitleOptionService.ICertificationTitleOptionService" name="BasicHttpBinding_ICertificationTitleOptionService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/CollegeService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICollegeService" contract="NEPService.CollegeService.ICollegeService" name="BasicHttpBinding_ICollegeService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/CommonService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICommonService" contract="NEPService.CommonService.ICommonService" name="BasicHttpBinding_ICommonService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/DiscountCouponService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IDiscountCouponService" contract="NEPService.DiscountCouponService.IDiscountCouponService" name="BasicHttpBinding_IDiscountCouponService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/EducationModuleService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IEducationModuleService" contract="NEPService.EducationModuleService.IEducationModuleService" name="BasicHttpBinding_IEducationModuleService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/EducationService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IEducationService" contract="NEPService.EducationService.IEducationService" name="BasicHttpBinding_IEducationService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/ExamQuestionService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IExamQuestionService" contract="NEPService.ExamQuestionService.IExamQuestionService" name="BasicHttpBinding_IExamQuestionService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/LogSessionService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ILogSessionService" contract="NEPService.LogSessionService.ILogSessionService" name="BasicHttpBinding_ILogSessionService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/NewsService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_INewsService" contract="NEPService.NewsService.INewsService" name="BasicHttpBinding_INewsService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/ProductService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IProductService" contract="NEPService.ProductService.IProductService" name="BasicHttpBinding_IProductService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/UserService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IUserService" contract="NEPService.UserService.IUserService" name="BasicHttpBinding_IUserService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/ClientService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IClientService" contract="NEPService.ClientService.IClientService" name="BasicHttpBinding_IClientService" />
      <endpoint address="http://wcfservice.vsaindia.com:8081/NEP/PlanService.svc" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IPlanService" contract="NEPService.PlanService.IPlanService" name="BasicHttpBinding_IPlanService" />
    </client>
  </system.serviceModel>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>