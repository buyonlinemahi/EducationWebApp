//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityApp.NEPService.CommonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class State : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateName {
            get {
                return this.StateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateNameField, value) != true)) {
                    this.StateNameField = value;
                    this.RaisePropertyChanged("StateName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShippingMethod", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class ShippingMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShippingMethodAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShippingMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShippingMethodNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShippingMethodAmount {
            get {
                return this.ShippingMethodAmountField;
            }
            set {
                if ((this.ShippingMethodAmountField.Equals(value) != true)) {
                    this.ShippingMethodAmountField = value;
                    this.RaisePropertyChanged("ShippingMethodAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShippingMethodID {
            get {
                return this.ShippingMethodIDField;
            }
            set {
                if ((this.ShippingMethodIDField.Equals(value) != true)) {
                    this.ShippingMethodIDField = value;
                    this.RaisePropertyChanged("ShippingMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingMethodName {
            get {
                return this.ShippingMethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingMethodNameField, value) != true)) {
                    this.ShippingMethodNameField = value;
                    this.RaisePropertyChanged("ShippingMethodName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Menu", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Menu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MenuNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuID {
            get {
                return this.MenuIDField;
            }
            set {
                if ((this.MenuIDField.Equals(value) != true)) {
                    this.MenuIDField = value;
                    this.RaisePropertyChanged("MenuID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MenuName {
            get {
                return this.MenuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MenuNameField, value) != true)) {
                    this.MenuNameField = value;
                    this.RaisePropertyChanged("MenuName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseColumn", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Base")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityApp.NEPService.CommonService.Enterprise))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HCRGUniversityApp.NEPService.CommonService.SuggestCourse))]
    public partial class BaseColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enterprise", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Enterprise : HCRGUniversityApp.NEPService.CommonService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterpriseCourseEndPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> EnterpriseCourseStartPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnterpriseEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseNumberUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterprisePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> EnterpriseProgramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnterpriseStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterpriseZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseAddress {
            get {
                return this.EnterpriseAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseAddressField, value) != true)) {
                    this.EnterpriseAddressField = value;
                    this.RaisePropertyChanged("EnterpriseAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseCity {
            get {
                return this.EnterpriseCityField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseCityField, value) != true)) {
                    this.EnterpriseCityField = value;
                    this.RaisePropertyChanged("EnterpriseCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseClientName {
            get {
                return this.EnterpriseClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseClientNameField, value) != true)) {
                    this.EnterpriseClientNameField = value;
                    this.RaisePropertyChanged("EnterpriseClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterpriseCourseEndPrice {
            get {
                return this.EnterpriseCourseEndPriceField;
            }
            set {
                if ((this.EnterpriseCourseEndPriceField.Equals(value) != true)) {
                    this.EnterpriseCourseEndPriceField = value;
                    this.RaisePropertyChanged("EnterpriseCourseEndPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> EnterpriseCourseStartPrice {
            get {
                return this.EnterpriseCourseStartPriceField;
            }
            set {
                if ((this.EnterpriseCourseStartPriceField.Equals(value) != true)) {
                    this.EnterpriseCourseStartPriceField = value;
                    this.RaisePropertyChanged("EnterpriseCourseStartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseEmail {
            get {
                return this.EnterpriseEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseEmailField, value) != true)) {
                    this.EnterpriseEmailField = value;
                    this.RaisePropertyChanged("EnterpriseEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnterpriseEndDate {
            get {
                return this.EnterpriseEndDateField;
            }
            set {
                if ((this.EnterpriseEndDateField.Equals(value) != true)) {
                    this.EnterpriseEndDateField = value;
                    this.RaisePropertyChanged("EnterpriseEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseID {
            get {
                return this.EnterpriseIDField;
            }
            set {
                if ((this.EnterpriseIDField.Equals(value) != true)) {
                    this.EnterpriseIDField = value;
                    this.RaisePropertyChanged("EnterpriseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseNumberUser {
            get {
                return this.EnterpriseNumberUserField;
            }
            set {
                if ((this.EnterpriseNumberUserField.Equals(value) != true)) {
                    this.EnterpriseNumberUserField = value;
                    this.RaisePropertyChanged("EnterpriseNumberUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterprisePhone {
            get {
                return this.EnterprisePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterprisePhoneField, value) != true)) {
                    this.EnterprisePhoneField = value;
                    this.RaisePropertyChanged("EnterprisePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> EnterpriseProgram {
            get {
                return this.EnterpriseProgramField;
            }
            set {
                if ((this.EnterpriseProgramField.Equals(value) != true)) {
                    this.EnterpriseProgramField = value;
                    this.RaisePropertyChanged("EnterpriseProgram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnterpriseStateID {
            get {
                return this.EnterpriseStateIDField;
            }
            set {
                if ((this.EnterpriseStateIDField.Equals(value) != true)) {
                    this.EnterpriseStateIDField = value;
                    this.RaisePropertyChanged("EnterpriseStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseZip {
            get {
                return this.EnterpriseZipField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseZipField, value) != true)) {
                    this.EnterpriseZipField = value;
                    this.RaisePropertyChanged("EnterpriseZip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuggestCourse", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class SuggestCourse : HCRGUniversityApp.NEPService.CommonService.BaseColumn {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCAudienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCBriefAgendaOutlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SCCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SCInterestedInstructorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCMyOccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SCOndemandLiveWebinarCourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SCPossibleTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> SCSingleDaySeminarCourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SCStateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuggestCourseIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationName {
            get {
                return this.OrganizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationNameField, value) != true)) {
                    this.OrganizationNameField = value;
                    this.RaisePropertyChanged("OrganizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCAudience {
            get {
                return this.SCAudienceField;
            }
            set {
                if ((object.ReferenceEquals(this.SCAudienceField, value) != true)) {
                    this.SCAudienceField = value;
                    this.RaisePropertyChanged("SCAudience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCBriefAgendaOutline {
            get {
                return this.SCBriefAgendaOutlineField;
            }
            set {
                if ((object.ReferenceEquals(this.SCBriefAgendaOutlineField, value) != true)) {
                    this.SCBriefAgendaOutlineField = value;
                    this.RaisePropertyChanged("SCBriefAgendaOutline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SCCreatedDate {
            get {
                return this.SCCreatedDateField;
            }
            set {
                if ((this.SCCreatedDateField.Equals(value) != true)) {
                    this.SCCreatedDateField = value;
                    this.RaisePropertyChanged("SCCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCEmail {
            get {
                return this.SCEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SCEmailField, value) != true)) {
                    this.SCEmailField = value;
                    this.RaisePropertyChanged("SCEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SCInterestedInstructor {
            get {
                return this.SCInterestedInstructorField;
            }
            set {
                if ((this.SCInterestedInstructorField.Equals(value) != true)) {
                    this.SCInterestedInstructorField = value;
                    this.RaisePropertyChanged("SCInterestedInstructor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCMyOccupation {
            get {
                return this.SCMyOccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.SCMyOccupationField, value) != true)) {
                    this.SCMyOccupationField = value;
                    this.RaisePropertyChanged("SCMyOccupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCName {
            get {
                return this.SCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SCNameField, value) != true)) {
                    this.SCNameField = value;
                    this.RaisePropertyChanged("SCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SCOndemandLiveWebinarCourse {
            get {
                return this.SCOndemandLiveWebinarCourseField;
            }
            set {
                if ((this.SCOndemandLiveWebinarCourseField.Equals(value) != true)) {
                    this.SCOndemandLiveWebinarCourseField = value;
                    this.RaisePropertyChanged("SCOndemandLiveWebinarCourse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCPhone {
            get {
                return this.SCPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SCPhoneField, value) != true)) {
                    this.SCPhoneField = value;
                    this.RaisePropertyChanged("SCPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SCPossibleTitle {
            get {
                return this.SCPossibleTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SCPossibleTitleField, value) != true)) {
                    this.SCPossibleTitleField = value;
                    this.RaisePropertyChanged("SCPossibleTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> SCSingleDaySeminarCourse {
            get {
                return this.SCSingleDaySeminarCourseField;
            }
            set {
                if ((this.SCSingleDaySeminarCourseField.Equals(value) != true)) {
                    this.SCSingleDaySeminarCourseField = value;
                    this.RaisePropertyChanged("SCSingleDaySeminarCourse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SCStateID {
            get {
                return this.SCStateIDField;
            }
            set {
                if ((this.SCStateIDField.Equals(value) != true)) {
                    this.SCStateIDField = value;
                    this.RaisePropertyChanged("SCStateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuggestCourseID {
            get {
                return this.SuggestCourseIDField;
            }
            set {
                if ((this.SuggestCourseIDField.Equals(value) != true)) {
                    this.SuggestCourseIDField = value;
                    this.RaisePropertyChanged("SuggestCourseID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedSuggestCourse", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedSuggestCourse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityApp.NEPService.CommonService.SuggestCourse[] SuggestCourseDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityApp.NEPService.CommonService.SuggestCourse[] SuggestCourseDetails {
            get {
                return this.SuggestCourseDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.SuggestCourseDetailsField, value) != true)) {
                    this.SuggestCourseDetailsField = value;
                    this.RaisePropertyChanged("SuggestCourseDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedEnterpriseDetail", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedEnterpriseDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityApp.NEPService.CommonService.Enterprise[] EnterpriseDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityApp.NEPService.CommonService.Enterprise[] EnterpriseDetails {
            get {
                return this.EnterpriseDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseDetailsField, value) != true)) {
                    this.EnterpriseDetailsField = value;
                    this.RaisePropertyChanged("EnterpriseDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Industry", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Industry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndustryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IndustryNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IndustryID {
            get {
                return this.IndustryIDField;
            }
            set {
                if ((this.IndustryIDField.Equals(value) != true)) {
                    this.IndustryIDField = value;
                    this.RaisePropertyChanged("IndustryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IndustryName {
            get {
                return this.IndustryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IndustryNameField, value) != true)) {
                    this.IndustryNameField = value;
                    this.RaisePropertyChanged("IndustryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientType", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class ClientType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientTypeID {
            get {
                return this.ClientTypeIDField;
            }
            set {
                if ((this.ClientTypeIDField.Equals(value) != true)) {
                    this.ClientTypeIDField = value;
                    this.RaisePropertyChanged("ClientTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientTypeName {
            get {
                return this.ClientTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientTypeNameField, value) != true)) {
                    this.ClientTypeNameField = value;
                    this.RaisePropertyChanged("ClientTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.CommonService.ICommonService")]
    public interface ICommonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllState", ReplyAction="http://tempuri.org/ICommonService/getAllStateResponse")]
        HCRGUniversityApp.NEPService.CommonService.State[] getAllState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllState", ReplyAction="http://tempuri.org/ICommonService/getAllStateResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.State[]> getAllStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStateByID", ReplyAction="http://tempuri.org/ICommonService/getStateByIDResponse")]
        string getStateByID(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getStateByID", ReplyAction="http://tempuri.org/ICommonService/getStateByIDResponse")]
        System.Threading.Tasks.Task<string> getStateByIDAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllShippingMethod", ReplyAction="http://tempuri.org/ICommonService/getAllShippingMethodResponse")]
        HCRGUniversityApp.NEPService.CommonService.ShippingMethod[] getAllShippingMethod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllShippingMethod", ReplyAction="http://tempuri.org/ICommonService/getAllShippingMethodResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.ShippingMethod[]> getAllShippingMethodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllMenu", ReplyAction="http://tempuri.org/ICommonService/getAllMenuResponse")]
        HCRGUniversityApp.NEPService.CommonService.Menu[] getAllMenu();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllMenu", ReplyAction="http://tempuri.org/ICommonService/getAllMenuResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> getAllMenuAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUserMenuBySpecialMenuID", ReplyAction="http://tempuri.org/ICommonService/GetUserMenuBySpecialMenuIDResponse")]
        HCRGUniversityApp.NEPService.CommonService.Menu[] GetUserMenuBySpecialMenuID(string SpecialMenuIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUserMenuBySpecialMenuID", ReplyAction="http://tempuri.org/ICommonService/GetUserMenuBySpecialMenuIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> GetUserMenuBySpecialMenuIDAsync(string SpecialMenuIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUserMenuByGroupID", ReplyAction="http://tempuri.org/ICommonService/GetUserMenuByGroupIDResponse")]
        HCRGUniversityApp.NEPService.CommonService.Menu[] GetUserMenuByGroupID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetUserMenuByGroupID", ReplyAction="http://tempuri.org/ICommonService/GetUserMenuByGroupIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> GetUserMenuByGroupIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/addSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/addSuggestCourseResponse")]
        int addSuggestCourse(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/addSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/addSuggestCourseResponse")]
        System.Threading.Tasks.Task<int> addSuggestCourseAsync(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/updateSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/updateSuggestCourseResponse")]
        int updateSuggestCourse(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/updateSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/updateSuggestCourseResponse")]
        System.Threading.Tasks.Task<int> updateSuggestCourseAsync(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/deleteSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/deleteSuggestCourseResponse")]
        void deleteSuggestCourse(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/deleteSuggestCourse", ReplyAction="http://tempuri.org/ICommonService/deleteSuggestCourseResponse")]
        System.Threading.Tasks.Task deleteSuggestCourseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetAllSuggestCoursesByOrganizationID", ReplyAction="http://tempuri.org/ICommonService/GetAllSuggestCoursesByOrganizationIDResponse")]
        HCRGUniversityApp.NEPService.CommonService.SuggestCourse[] GetAllSuggestCoursesByOrganizationID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetAllSuggestCoursesByOrganizationID", ReplyAction="http://tempuri.org/ICommonService/GetAllSuggestCoursesByOrganizationIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.SuggestCourse[]> GetAllSuggestCoursesByOrganizationIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetAllPagedSuggestCourses", ReplyAction="http://tempuri.org/ICommonService/GetAllPagedSuggestCoursesResponse")]
        HCRGUniversityApp.NEPService.CommonService.PagedSuggestCourse GetAllPagedSuggestCourses(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/GetAllPagedSuggestCourses", ReplyAction="http://tempuri.org/ICommonService/GetAllPagedSuggestCoursesResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.PagedSuggestCourse> GetAllPagedSuggestCoursesAsync(int skip, int take);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getSuggestCourseByID", ReplyAction="http://tempuri.org/ICommonService/getSuggestCourseByIDResponse")]
        HCRGUniversityApp.NEPService.CommonService.SuggestCourse getSuggestCourseByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getSuggestCourseByID", ReplyAction="http://tempuri.org/ICommonService/getSuggestCourseByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.SuggestCourse> getSuggestCourseByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/addEnterprise", ReplyAction="http://tempuri.org/ICommonService/addEnterpriseResponse")]
        int addEnterprise(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/addEnterprise", ReplyAction="http://tempuri.org/ICommonService/addEnterpriseResponse")]
        System.Threading.Tasks.Task<int> addEnterpriseAsync(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/updateEnterprise", ReplyAction="http://tempuri.org/ICommonService/updateEnterpriseResponse")]
        int updateEnterprise(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/updateEnterprise", ReplyAction="http://tempuri.org/ICommonService/updateEnterpriseResponse")]
        System.Threading.Tasks.Task<int> updateEnterpriseAsync(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseByID", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseByIDResponse")]
        HCRGUniversityApp.NEPService.CommonService.Enterprise getEnterpriseByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseByID", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Enterprise> getEnterpriseByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/deleteEnterpriseByID", ReplyAction="http://tempuri.org/ICommonService/deleteEnterpriseByIDResponse")]
        void deleteEnterpriseByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/deleteEnterpriseByID", ReplyAction="http://tempuri.org/ICommonService/deleteEnterpriseByIDResponse")]
        System.Threading.Tasks.Task deleteEnterpriseByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseByEnterpriseClientName", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseByEnterpriseClientNameResponse")]
        HCRGUniversityApp.NEPService.CommonService.PagedEnterpriseDetail getEnterpriseByEnterpriseClientName(string _searchtext, int _skip, int _take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseByEnterpriseClientName", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseByEnterpriseClientNameResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.PagedEnterpriseDetail> getEnterpriseByEnterpriseClientNameAsync(string _searchtext, int _skip, int _take, int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseAll", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseAllResponse")]
        HCRGUniversityApp.NEPService.CommonService.Enterprise[] getEnterpriseAll(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getEnterpriseAll", ReplyAction="http://tempuri.org/ICommonService/getEnterpriseAllResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Enterprise[]> getEnterpriseAllAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllIndustry", ReplyAction="http://tempuri.org/ICommonService/getAllIndustryResponse")]
        HCRGUniversityApp.NEPService.CommonService.Industry[] getAllIndustry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllIndustry", ReplyAction="http://tempuri.org/ICommonService/getAllIndustryResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Industry[]> getAllIndustryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllClientType", ReplyAction="http://tempuri.org/ICommonService/getAllClientTypeResponse")]
        HCRGUniversityApp.NEPService.CommonService.ClientType[] getAllClientType();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommonService/getAllClientType", ReplyAction="http://tempuri.org/ICommonService/getAllClientTypeResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.ClientType[]> getAllClientTypeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommonServiceChannel : HCRGUniversityApp.NEPService.CommonService.ICommonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommonServiceClient : System.ServiceModel.ClientBase<HCRGUniversityApp.NEPService.CommonService.ICommonService>, HCRGUniversityApp.NEPService.CommonService.ICommonService {
        
        public CommonServiceClient() {
        }
        
        public CommonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HCRGUniversityApp.NEPService.CommonService.State[] getAllState() {
            return base.Channel.getAllState();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.State[]> getAllStateAsync() {
            return base.Channel.getAllStateAsync();
        }
        
        public string getStateByID(int _id) {
            return base.Channel.getStateByID(_id);
        }
        
        public System.Threading.Tasks.Task<string> getStateByIDAsync(int _id) {
            return base.Channel.getStateByIDAsync(_id);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.ShippingMethod[] getAllShippingMethod() {
            return base.Channel.getAllShippingMethod();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.ShippingMethod[]> getAllShippingMethodAsync() {
            return base.Channel.getAllShippingMethodAsync();
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Menu[] getAllMenu() {
            return base.Channel.getAllMenu();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> getAllMenuAsync() {
            return base.Channel.getAllMenuAsync();
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Menu[] GetUserMenuBySpecialMenuID(string SpecialMenuIDs) {
            return base.Channel.GetUserMenuBySpecialMenuID(SpecialMenuIDs);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> GetUserMenuBySpecialMenuIDAsync(string SpecialMenuIDs) {
            return base.Channel.GetUserMenuBySpecialMenuIDAsync(SpecialMenuIDs);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Menu[] GetUserMenuByGroupID(int id) {
            return base.Channel.GetUserMenuByGroupID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Menu[]> GetUserMenuByGroupIDAsync(int id) {
            return base.Channel.GetUserMenuByGroupIDAsync(id);
        }
        
        public int addSuggestCourse(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse) {
            return base.Channel.addSuggestCourse(suggestCourse);
        }
        
        public System.Threading.Tasks.Task<int> addSuggestCourseAsync(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse) {
            return base.Channel.addSuggestCourseAsync(suggestCourse);
        }
        
        public int updateSuggestCourse(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse) {
            return base.Channel.updateSuggestCourse(suggestCourse);
        }
        
        public System.Threading.Tasks.Task<int> updateSuggestCourseAsync(HCRGUniversityApp.NEPService.CommonService.SuggestCourse suggestCourse) {
            return base.Channel.updateSuggestCourseAsync(suggestCourse);
        }
        
        public void deleteSuggestCourse(int id) {
            base.Channel.deleteSuggestCourse(id);
        }
        
        public System.Threading.Tasks.Task deleteSuggestCourseAsync(int id) {
            return base.Channel.deleteSuggestCourseAsync(id);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.SuggestCourse[] GetAllSuggestCoursesByOrganizationID(int id) {
            return base.Channel.GetAllSuggestCoursesByOrganizationID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.SuggestCourse[]> GetAllSuggestCoursesByOrganizationIDAsync(int id) {
            return base.Channel.GetAllSuggestCoursesByOrganizationIDAsync(id);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.PagedSuggestCourse GetAllPagedSuggestCourses(int skip, int take) {
            return base.Channel.GetAllPagedSuggestCourses(skip, take);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.PagedSuggestCourse> GetAllPagedSuggestCoursesAsync(int skip, int take) {
            return base.Channel.GetAllPagedSuggestCoursesAsync(skip, take);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.SuggestCourse getSuggestCourseByID(int id) {
            return base.Channel.getSuggestCourseByID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.SuggestCourse> getSuggestCourseByIDAsync(int id) {
            return base.Channel.getSuggestCourseByIDAsync(id);
        }
        
        public int addEnterprise(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise) {
            return base.Channel.addEnterprise(enterprise);
        }
        
        public System.Threading.Tasks.Task<int> addEnterpriseAsync(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise) {
            return base.Channel.addEnterpriseAsync(enterprise);
        }
        
        public int updateEnterprise(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise) {
            return base.Channel.updateEnterprise(enterprise);
        }
        
        public System.Threading.Tasks.Task<int> updateEnterpriseAsync(HCRGUniversityApp.NEPService.CommonService.Enterprise enterprise) {
            return base.Channel.updateEnterpriseAsync(enterprise);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Enterprise getEnterpriseByID(int id) {
            return base.Channel.getEnterpriseByID(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Enterprise> getEnterpriseByIDAsync(int id) {
            return base.Channel.getEnterpriseByIDAsync(id);
        }
        
        public void deleteEnterpriseByID(int id) {
            base.Channel.deleteEnterpriseByID(id);
        }
        
        public System.Threading.Tasks.Task deleteEnterpriseByIDAsync(int id) {
            return base.Channel.deleteEnterpriseByIDAsync(id);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.PagedEnterpriseDetail getEnterpriseByEnterpriseClientName(string _searchtext, int _skip, int _take, int OrganizationID) {
            return base.Channel.getEnterpriseByEnterpriseClientName(_searchtext, _skip, _take, OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.PagedEnterpriseDetail> getEnterpriseByEnterpriseClientNameAsync(string _searchtext, int _skip, int _take, int OrganizationID) {
            return base.Channel.getEnterpriseByEnterpriseClientNameAsync(_searchtext, _skip, _take, OrganizationID);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Enterprise[] getEnterpriseAll(int OrganizationID) {
            return base.Channel.getEnterpriseAll(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Enterprise[]> getEnterpriseAllAsync(int OrganizationID) {
            return base.Channel.getEnterpriseAllAsync(OrganizationID);
        }
        
        public HCRGUniversityApp.NEPService.CommonService.Industry[] getAllIndustry() {
            return base.Channel.getAllIndustry();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.Industry[]> getAllIndustryAsync() {
            return base.Channel.getAllIndustryAsync();
        }
        
        public HCRGUniversityApp.NEPService.CommonService.ClientType[] getAllClientType() {
            return base.Channel.getAllClientType();
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CommonService.ClientType[]> getAllClientTypeAsync() {
            return base.Channel.getAllClientTypeAsync();
        }
    }
}
