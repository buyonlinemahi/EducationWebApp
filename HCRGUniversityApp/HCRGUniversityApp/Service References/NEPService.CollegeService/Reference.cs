//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HCRGUniversityApp.NEPService.CollegeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="College", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class College : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollegeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollegeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollegeID {
            get {
                return this.CollegeIDField;
            }
            set {
                if ((this.CollegeIDField.Equals(value) != true)) {
                    this.CollegeIDField = value;
                    this.RaisePropertyChanged("CollegeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollegeName {
            get {
                return this.CollegeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CollegeNameField, value) != true)) {
                    this.CollegeNameField = value;
                    this.RaisePropertyChanged("CollegeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartNumber {
            get {
                return this.StartNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StartNumberField, value) != true)) {
                    this.StartNumberField = value;
                    this.RaisePropertyChanged("StartNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedCollege", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedCollege : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityApp.NEPService.CollegeService.College[] CollegesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityApp.NEPService.CollegeService.College[] Colleges {
            get {
                return this.CollegesField;
            }
            set {
                if ((object.ReferenceEquals(this.CollegesField, value) != true)) {
                    this.CollegesField = value;
                    this.RaisePropertyChanged("Colleges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faculty", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO")]
    [System.SerializableAttribute()]
    public partial class Faculty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressFloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaOfExpertiseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrganizationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionalTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressFloor {
            get {
                return this.AddressFloorField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressFloorField, value) != true)) {
                    this.AddressFloorField = value;
                    this.RaisePropertyChanged("AddressFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressStreet {
            get {
                return this.AddressStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressStreetField, value) != true)) {
                    this.AddressStreetField = value;
                    this.RaisePropertyChanged("AddressStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaOfExpertise {
            get {
                return this.AreaOfExpertiseField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaOfExpertiseField, value) != true)) {
                    this.AreaOfExpertiseField = value;
                    this.RaisePropertyChanged("AreaOfExpertise");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultyID {
            get {
                return this.FacultyIDField;
            }
            set {
                if ((this.FacultyIDField.Equals(value) != true)) {
                    this.FacultyIDField = value;
                    this.RaisePropertyChanged("FacultyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((this.OrganizationIDField.Equals(value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfessionalTitle {
            get {
                return this.ProfessionalTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionalTitleField, value) != true)) {
                    this.ProfessionalTitleField = value;
                    this.RaisePropertyChanged("ProfessionalTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resume {
            get {
                return this.ResumeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResumeField, value) != true)) {
                    this.ResumeField = value;
                    this.RaisePropertyChanged("Resume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Topics {
            get {
                return this.TopicsField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicsField, value) != true)) {
                    this.TopicsField = value;
                    this.RaisePropertyChanged("Topics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagedFaculty", Namespace="http://schemas.datacontract.org/2004/07/HCRGUniversityService.DTO.Paged")]
    [System.SerializableAttribute()]
    public partial class PagedFaculty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HCRGUniversityApp.NEPService.CollegeService.Faculty[] FacultyDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HCRGUniversityApp.NEPService.CollegeService.Faculty[] FacultyDetails {
            get {
                return this.FacultyDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.FacultyDetailsField, value) != true)) {
                    this.FacultyDetailsField = value;
                    this.RaisePropertyChanged("FacultyDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NEPService.CollegeService.ICollegeService")]
    public interface ICollegeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/AddCollege", ReplyAction="http://tempuri.org/ICollegeService/AddCollegeResponse")]
        int AddCollege(HCRGUniversityApp.NEPService.CollegeService.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/AddCollege", ReplyAction="http://tempuri.org/ICollegeService/AddCollegeResponse")]
        System.Threading.Tasks.Task<int> AddCollegeAsync(HCRGUniversityApp.NEPService.CollegeService.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateCollege", ReplyAction="http://tempuri.org/ICollegeService/UpdateCollegeResponse")]
        int UpdateCollege(HCRGUniversityApp.NEPService.CollegeService.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateCollege", ReplyAction="http://tempuri.org/ICollegeService/UpdateCollegeResponse")]
        System.Threading.Tasks.Task<int> UpdateCollegeAsync(HCRGUniversityApp.NEPService.CollegeService.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/DeleteCollege", ReplyAction="http://tempuri.org/ICollegeService/DeleteCollegeResponse")]
        void DeleteCollege(int collegeID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/DeleteCollege", ReplyAction="http://tempuri.org/ICollegeService/DeleteCollegeResponse")]
        System.Threading.Tasks.Task DeleteCollegeAsync(int collegeID, bool IsActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByID", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByIDResponse")]
        HCRGUniversityApp.NEPService.CollegeService.College GetCollegeByID(int collegeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByID", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByIDResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College> GetCollegeByIDAsync(int collegeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllCollegeWeb", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegeWebResponse")]
        HCRGUniversityApp.NEPService.CollegeService.College[] GetAllCollegeWeb(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllCollegeWeb", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegeWebResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> GetAllCollegeWebAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllCollegeActiveWeb", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegeActiveWebResponse")]
        HCRGUniversityApp.NEPService.CollegeService.College[] GetAllCollegeActiveWeb(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllCollegeActiveWeb", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegeActiveWebResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> GetAllCollegeActiveWebAsync(int OrganizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/getAllCollege", ReplyAction="http://tempuri.org/ICollegeService/getAllCollegeResponse")]
        HCRGUniversityApp.NEPService.CollegeService.College[] getAllCollege(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/getAllCollege", ReplyAction="http://tempuri.org/ICollegeService/getAllCollegeResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> getAllCollegeAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/getAllCollegeActive", ReplyAction="http://tempuri.org/ICollegeService/getAllCollegeActiveResponse")]
        HCRGUniversityApp.NEPService.CollegeService.College[] getAllCollegeActive(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/getAllCollegeActive", ReplyAction="http://tempuri.org/ICollegeService/getAllCollegeActiveResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> getAllCollegeActiveAsync(int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllPagedCollege", ReplyAction="http://tempuri.org/ICollegeService/GetAllPagedCollegeResponse")]
        HCRGUniversityApp.NEPService.CollegeService.PagedCollege GetAllPagedCollege(int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllPagedCollege", ReplyAction="http://tempuri.org/ICollegeService/GetAllPagedCollegeResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.PagedCollege> GetAllPagedCollegeAsync(int skip, int take, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/AddFaculty", ReplyAction="http://tempuri.org/ICollegeService/AddFacultyResponse")]
        int AddFaculty(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/AddFaculty", ReplyAction="http://tempuri.org/ICollegeService/AddFacultyResponse")]
        System.Threading.Tasks.Task<int> AddFacultyAsync(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateFaculty", ReplyAction="http://tempuri.org/ICollegeService/UpdateFacultyResponse")]
        int UpdateFaculty(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateFaculty", ReplyAction="http://tempuri.org/ICollegeService/UpdateFacultyResponse")]
        System.Threading.Tasks.Task<int> UpdateFacultyAsync(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllPagedFaculty", ReplyAction="http://tempuri.org/ICollegeService/GetAllPagedFacultyResponse")]
        HCRGUniversityApp.NEPService.CollegeService.PagedFaculty GetAllPagedFaculty(int skip, int take, int organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllPagedFaculty", ReplyAction="http://tempuri.org/ICollegeService/GetAllPagedFacultyResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.PagedFaculty> GetAllPagedFacultyAsync(int skip, int take, int organizationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetFacultyById", ReplyAction="http://tempuri.org/ICollegeService/GetFacultyByIdResponse")]
        HCRGUniversityApp.NEPService.CollegeService.Faculty GetFacultyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetFacultyById", ReplyAction="http://tempuri.org/ICollegeService/GetFacultyByIdResponse")]
        System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.Faculty> GetFacultyByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICollegeServiceChannel : HCRGUniversityApp.NEPService.CollegeService.ICollegeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollegeServiceClient : System.ServiceModel.ClientBase<HCRGUniversityApp.NEPService.CollegeService.ICollegeService>, HCRGUniversityApp.NEPService.CollegeService.ICollegeService {
        
        public CollegeServiceClient() {
        }
        
        public CollegeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CollegeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollegeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollegeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddCollege(HCRGUniversityApp.NEPService.CollegeService.College college) {
            return base.Channel.AddCollege(college);
        }
        
        public System.Threading.Tasks.Task<int> AddCollegeAsync(HCRGUniversityApp.NEPService.CollegeService.College college) {
            return base.Channel.AddCollegeAsync(college);
        }
        
        public int UpdateCollege(HCRGUniversityApp.NEPService.CollegeService.College college) {
            return base.Channel.UpdateCollege(college);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCollegeAsync(HCRGUniversityApp.NEPService.CollegeService.College college) {
            return base.Channel.UpdateCollegeAsync(college);
        }
        
        public void DeleteCollege(int collegeID, bool IsActive) {
            base.Channel.DeleteCollege(collegeID, IsActive);
        }
        
        public System.Threading.Tasks.Task DeleteCollegeAsync(int collegeID, bool IsActive) {
            return base.Channel.DeleteCollegeAsync(collegeID, IsActive);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.College GetCollegeByID(int collegeID) {
            return base.Channel.GetCollegeByID(collegeID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College> GetCollegeByIDAsync(int collegeID) {
            return base.Channel.GetCollegeByIDAsync(collegeID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.College[] GetAllCollegeWeb(int OrganizationID) {
            return base.Channel.GetAllCollegeWeb(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> GetAllCollegeWebAsync(int OrganizationID) {
            return base.Channel.GetAllCollegeWebAsync(OrganizationID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.College[] GetAllCollegeActiveWeb(int OrganizationID) {
            return base.Channel.GetAllCollegeActiveWeb(OrganizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> GetAllCollegeActiveWebAsync(int OrganizationID) {
            return base.Channel.GetAllCollegeActiveWebAsync(OrganizationID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.College[] getAllCollege(int clientID) {
            return base.Channel.getAllCollege(clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> getAllCollegeAsync(int clientID) {
            return base.Channel.getAllCollegeAsync(clientID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.College[] getAllCollegeActive(int clientID) {
            return base.Channel.getAllCollegeActive(clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.College[]> getAllCollegeActiveAsync(int clientID) {
            return base.Channel.getAllCollegeActiveAsync(clientID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.PagedCollege GetAllPagedCollege(int skip, int take, int clientID) {
            return base.Channel.GetAllPagedCollege(skip, take, clientID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.PagedCollege> GetAllPagedCollegeAsync(int skip, int take, int clientID) {
            return base.Channel.GetAllPagedCollegeAsync(skip, take, clientID);
        }
        
        public int AddFaculty(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty) {
            return base.Channel.AddFaculty(_faculty);
        }
        
        public System.Threading.Tasks.Task<int> AddFacultyAsync(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty) {
            return base.Channel.AddFacultyAsync(_faculty);
        }
        
        public int UpdateFaculty(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty) {
            return base.Channel.UpdateFaculty(_faculty);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFacultyAsync(HCRGUniversityApp.NEPService.CollegeService.Faculty _faculty) {
            return base.Channel.UpdateFacultyAsync(_faculty);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.PagedFaculty GetAllPagedFaculty(int skip, int take, int organizationID) {
            return base.Channel.GetAllPagedFaculty(skip, take, organizationID);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.PagedFaculty> GetAllPagedFacultyAsync(int skip, int take, int organizationID) {
            return base.Channel.GetAllPagedFacultyAsync(skip, take, organizationID);
        }
        
        public HCRGUniversityApp.NEPService.CollegeService.Faculty GetFacultyById(int id) {
            return base.Channel.GetFacultyById(id);
        }
        
        public System.Threading.Tasks.Task<HCRGUniversityApp.NEPService.CollegeService.Faculty> GetFacultyByIdAsync(int id) {
            return base.Channel.GetFacultyByIdAsync(id);
        }
    }
}
